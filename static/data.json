[
    {
        "qid": 156000000,
        "question": "the rosa rugosa is what kind of rose?",
        "answer": [
            "Shrub rose"
        ],
        "function": "none",
        "commonness": -19.269808048337932,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.roses.type_of_rose",
                    "class": "base.roses.type_of_rose",
                    "friendly_name": "type_of_rose",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.rugosa_rose",
                    "class": "base.roses.roses",
                    "friendly_name": "Rosa rugosa",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.roses.type_of_rose.roses_of_this_type",
                    "friendly_name": "Roses of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.roses.type_of_rose . \nVALUES ?x1 { :en.rugosa_rose } \n?x0 :base.roses.type_of_rose.roses_of_this_type ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 25000101,
        "question": "what botanical gardens are there in washington?",
        "answer": [
            "United States Botanic Garden"
        ],
        "function": "none",
        "commonness": -14.241838854470409,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.greatgardens.botanical_garden",
                    "class": "base.greatgardens.botanical_garden",
                    "friendly_name": "Botanical garden",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.washington_united_states",
                    "class": "location.location",
                    "friendly_name": "washington",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.greatgardens.botanical_garden.location",
                    "friendly_name": "Location"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.greatgardens.botanical_garden . \nVALUES ?x1 { :en.washington_united_states } \n?x0 :base.greatgardens.botanical_garden.location ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 213000302,
        "question": "in the united states how many american football players are also a presenter?",
        "answer": [
            "7"
        ],
        "function": "count",
        "commonness": -15.490562875524642,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "american_football.football_player",
                    "class": "american_football.football_player",
                    "friendly_name": "American football player",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "location.country",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.presenter",
                    "class": "people.profession",
                    "friendly_name": "Presenter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.nationality",
                    "friendly_name": "Country of nationality"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "people.person.profession",
                    "friendly_name": "Profession"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :american_football.football_player . \nVALUES ?x1 { :en.united_states_of_america } \nVALUES ?x2 { :en.presenter } \n?x0 :people.person.nationality ?x1 . \n?x0 :people.person.profession ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 110000400,
        "question": "nasa has fabricated how many different spacecrafts?",
        "answer": [
            "2"
        ],
        "function": "count",
        "commonness": -13.42642065655897,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.spacecraft",
                    "class": "spaceflight.spacecraft",
                    "friendly_name": "Spacecraft",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.nasa",
                    "class": "spaceflight.satellite_manufacturer",
                    "friendly_name": "NASA",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.satellite_manufacturer.spacecraft_manufactured",
                    "friendly_name": "Spacecraft manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.spacecraft . \nVALUES ?x1 { :en.nasa } \n?x1 :spaceflight.satellite_manufacturer.spacecraft_manufactured ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 164000300,
        "question": "how many film songs were performed by celine dion?",
        "answer": [
            "3"
        ],
        "function": "count",
        "commonness": -14.252318701819185,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_featured_song",
                    "class": "film.film_featured_song",
                    "friendly_name": "Film featured song",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.celine_dion",
                    "class": "music.artist",
                    "friendly_name": "Celine Dion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "film.film_featured_song.performed_by",
                    "friendly_name": "Performed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_featured_song . \nVALUES ?x1 { :en.celine_dion } \n?x0 :film.film_featured_song.performed_by ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 232000300,
        "question": "who is the composer of the libretto for an opera that was initially performed in 1865-06-10?",
        "answer": [
            "Richard Wagner"
        ],
        "function": "none",
        "commonness": -24.043207705254712,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "opera.librettist",
                    "class": "opera.librettist",
                    "friendly_name": "Librettist",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "opera.opera",
                    "class": "opera.opera",
                    "friendly_name": "Opera",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "1865-06-10^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "1865-06-10",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "opera.opera.librettist",
                    "friendly_name": "Librettist"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "opera.opera.date_of_first_performance",
                    "friendly_name": "Date of First Performance"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :opera.librettist . \n?x1 :type.object.type :opera.opera . \nVALUES ?x2 { \"1865-06-10\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?x1 :opera.opera.librettist ?x0 . \n?x1 :opera.opera.date_of_first_performance ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 68000502,
        "question": "what are the different categories for tropical cyclones that the bureau of meteorology uses?",
        "answer": [
            "Category 2 Tropical Cyclone (BOM)",
            "Category 5 Severe Tropical Cyclone (BOM)",
            "Category 3 Severe Tropical Cyclone (BOM)",
            "Category 4 Severe Tropical Cyclone (BOM)",
            "Category 1 Tropical Cyclone (BOM)",
            "Tropical Low (BOM)"
        ],
        "function": "none",
        "commonness": -17.939991743423864,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone_category",
                    "class": "meteorology.tropical_cyclone_category",
                    "friendly_name": "Tropical cyclone category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.bureau_of_meteorology",
                    "class": "meteorology.meteorological_service",
                    "friendly_name": "bureau of meteorology",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.meteorological_service.tropical_cyclone_categories",
                    "friendly_name": "Tropical Cyclone Categories"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone_category . \nVALUES ?x1 { :en.bureau_of_meteorology } \n?x1 :meteorology.meteorological_service.tropical_cyclone_categories ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 195000501,
        "question": "which snl seasons starred elizabeth stamatina fey?",
        "answer": [
            "Saturday Night Live - Season 31",
            "Saturday Night Live - Season 30"
        ],
        "function": "none",
        "commonness": -31.334357186793028,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.saturdaynightlive.snl_season",
                    "class": "base.saturdaynightlive.snl_season",
                    "friendly_name": "SNL season",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.saturdaynightlive.snl_season_tenure",
                    "class": "base.saturdaynightlive.snl_season_tenure",
                    "friendly_name": "SNL season tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.tina_fey",
                    "class": "base.saturdaynightlive.snl_cast_member",
                    "friendly_name": "elizabeth stamatina fey",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.saturdaynightlive.snl_season.cast",
                    "friendly_name": "Cast"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.saturdaynightlive.snl_season_tenure.cast_members",
                    "friendly_name": "Cast members"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.saturdaynightlive.snl_season . \n?x1 :type.object.type :base.saturdaynightlive.snl_season_tenure . \nVALUES ?x2 { :en.tina_fey } \n?x0 :base.saturdaynightlive.snl_season.cast ?x1 . \n?x1 :base.saturdaynightlive.snl_season_tenure.cast_members ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 20000601,
        "question": "in gossip girl, what is the name of the person who plays serena?",
        "answer": [
            "Blake Lively"
        ],
        "function": "none",
        "commonness": -16.335288345723843,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.gossipgirl.actor",
                    "class": "base.gossipgirl.actor",
                    "friendly_name": "Actor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.serena_van_der_woodsen",
                    "class": "base.gossipgirl.character",
                    "friendly_name": "serena",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.gossipgirl.actor.plays",
                    "friendly_name": "plays"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.gossipgirl.actor . \nVALUES ?x1 { :en.serena_van_der_woodsen } \n?x0 :base.gossipgirl.actor.plays ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 11000101,
        "question": "who made the sensor of d300?",
        "answer": [
            "Nikon Corporation"
        ],
        "function": "none",
        "commonness": -15.008139899197342,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.camera_sensor_manufacturer",
                    "class": "digicams.camera_sensor_manufacturer",
                    "friendly_name": "Camera Sensor Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.nikon_d300",
                    "class": "digicams.digital_camera",
                    "friendly_name": "d300",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.camera_sensor_manufacturer.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.camera_sensor_manufacturer . \nVALUES ?x1 { :en.nikon_d300 } \n?x0 :digicams.camera_sensor_manufacturer.cameras ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 76000402,
        "question": "what is the legal subject addressed by roe v wade?",
        "answer": [
            "Privacy",
            "Forced abortion"
        ],
        "function": "none",
        "commonness": -14.835292995396896,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.legal_subject",
                    "class": "law.legal_subject",
                    "friendly_name": "Legal subject",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.roe_v_wade",
                    "class": "law.legal_case",
                    "friendly_name": "roe v wade",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.legal_case.subject",
                    "friendly_name": "Subject"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.legal_subject . \nVALUES ?x1 { :en.roe_v_wade } \n?x1 :law.legal_case.subject ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 228000100,
        "question": "who is batman hired by?",
        "answer": [
            "Wayne Enterprises"
        ],
        "function": "none",
        "commonness": -20.258084186000367,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.fictional_employer",
                    "class": "fictional_universe.fictional_employer",
                    "friendly_name": "Employer in fiction",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "fictional_universe.fictional_employment_tenure",
                    "class": "fictional_universe.fictional_employment_tenure",
                    "friendly_name": "Fictional employment tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.batman",
                    "class": "fictional_universe.fictional_character",
                    "friendly_name": "Batman",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "fictional_universe.fictional_employer.employees",
                    "friendly_name": "Employees"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "fictional_universe.fictional_character.employers",
                    "friendly_name": "Employers"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.fictional_employer . \n?x1 :type.object.type :fictional_universe.fictional_employment_tenure . \nVALUES ?x2 { :en.batman } \n?x0 :fictional_universe.fictional_employer.employees ?x1 . \n?x2 :fictional_universe.fictional_character.employers ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 29000301,
        "question": "name the apple ipod brand?",
        "answer": [
            "Apple"
        ],
        "function": "none",
        "commonness": -12.135613916614275,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.gadgets.brand",
                    "class": "base.gadgets.brand",
                    "friendly_name": "Brand",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.ipod",
                    "class": "base.gadgets.gadget",
                    "friendly_name": "apple ipod",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.gadgets.gadget.brand",
                    "friendly_name": "Brand"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.gadgets.brand . \nVALUES ?x1 { :en.ipod } \n?x1 :base.gadgets.gadget.brand ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 141000400,
        "question": "donald e. smith has how many children that are film actors?",
        "answer": [
            "2"
        ],
        "function": "count",
        "commonness": -9.261689426535522,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.actor",
                    "class": "film.actor",
                    "friendly_name": "Film actor",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0gyl0yc",
                    "class": "people.person",
                    "friendly_name": "Donald E. Smith",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.parents",
                    "friendly_name": "Parents"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.actor . \nVALUES ?x1 { :m.0gyl0yc } \n?x0 :people.person.parents ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 193000201,
        "question": "what processors are used in computers with wiimote?",
        "answer": [
            "PowerPC"
        ],
        "function": "none",
        "commonness": -22.67361534912766,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.computer_processor",
                    "class": "computer.computer_processor",
                    "friendly_name": "Computer Processor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "computer.computer",
                    "class": "computer.computer",
                    "friendly_name": "Computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.wii_remote",
                    "class": "computer.computer_peripheral",
                    "friendly_name": "wiimote",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.computer.processor",
                    "friendly_name": "Processor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "computer.computer.peripherals",
                    "friendly_name": "Peripherals"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computer_processor . \n?x1 :type.object.type :computer.computer . \nVALUES ?x2 { :en.wii_remote } \n?x1 :computer.computer.processor ?x0 . \n?x1 :computer.computer.peripherals ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 104000400,
        "question": "what racehorse currently holds the record for being the tallest in the world?",
        "answer": [
            "Denman"
        ],
        "function": "argmax",
        "commonness": -16.627143175933792,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.horseracing.racehorse",
                    "class": "base.horseracing.racehorse",
                    "friendly_name": "Racehorse",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1.75^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "1.75",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "biology.organism.height_meters",
                    "friendly_name": "Height"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.horseracing.racehorse . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :base.horseracing.racehorse . \n?y0 :biology.organism.height_meters ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :biology.organism.height_meters ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 135000101,
        "question": "what is the number of video game versions that are developed on the windows platform?",
        "answer": [
            "5977"
        ],
        "function": "count",
        "commonness": -11.13681288636446,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.microsoft_windows",
                    "class": "cvg.cvg_platform",
                    "friendly_name": "windows",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.game_version.platform",
                    "friendly_name": "Platform"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :en.microsoft_windows } \n?x0 :cvg.game_version.platform ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 193000202,
        "question": "what processors are used in computers with wii?",
        "answer": [
            "PowerPC"
        ],
        "function": "none",
        "commonness": -22.67361534912766,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.computer_processor",
                    "class": "computer.computer_processor",
                    "friendly_name": "Computer Processor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "computer.computer",
                    "class": "computer.computer",
                    "friendly_name": "Computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.wii_remote",
                    "class": "computer.computer_peripheral",
                    "friendly_name": "wii",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.computer.processor",
                    "friendly_name": "Processor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "computer.computer.peripherals",
                    "friendly_name": "Peripherals"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computer_processor . \n?x1 :type.object.type :computer.computer . \nVALUES ?x2 { :en.wii_remote } \n?x1 :computer.computer.processor ?x0 . \n?x1 :computer.computer.peripherals ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 94000100,
        "question": "which events of electronic entertainment expo have been held?",
        "answer": [
            "Electronic Entertainment Expo 2010",
            "Electronic Entertainment Expo 2009",
            "Electronic Entertainment Expo 2011",
            "Electronic Entertainment Expo 2012"
        ],
        "function": "none",
        "commonness": -15.920868772774654,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "conferences.conference",
                    "class": "conferences.conference",
                    "friendly_name": "Conference event",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.e3",
                    "class": "conferences.conference_series",
                    "friendly_name": "Electronic Entertainment Expo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "conferences.conference_series.conference",
                    "friendly_name": "Conferences"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference . \nVALUES ?x1 { :en.e3 } \n?x1 :conferences.conference_series.conference ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 199000302,
        "question": "which radio programs can be found under the same genre with grand old opry?",
        "answer": [
            "A Prairie Home Companion"
        ],
        "function": "none",
        "commonness": -23.568853346576827,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "radio.radio_program",
                    "class": "radio.radio_program",
                    "friendly_name": "Radio program",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "broadcast.genre",
                    "class": "broadcast.genre",
                    "friendly_name": "Broadcast Genre",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.grand_ole_opry",
                    "class": "broadcast.content",
                    "friendly_name": "grand old opry",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.content.genre",
                    "friendly_name": "Genres"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "broadcast.content.genre",
                    "friendly_name": "Genres"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program . \n?x1 :type.object.type :broadcast.genre . \nVALUES ?x2 { :en.grand_ole_opry } \n?x0 :broadcast.content.genre ?x1 . \n?x2 :broadcast.content.genre ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 68000200,
        "question": "the australian bureau of meteorology uses which categories of tropical cyclones?",
        "answer": [
            "Category 2 Tropical Cyclone (BOM)",
            "Category 5 Severe Tropical Cyclone (BOM)",
            "Category 4 Severe Tropical Cyclone (BOM)",
            "Tropical Low (BOM)",
            "Category 3 Severe Tropical Cyclone (BOM)",
            "Category 1 Tropical Cyclone (BOM)"
        ],
        "function": "none",
        "commonness": -17.939991743423864,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone_category",
                    "class": "meteorology.tropical_cyclone_category",
                    "friendly_name": "Tropical cyclone category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.bureau_of_meteorology",
                    "class": "meteorology.meteorological_service",
                    "friendly_name": "Australian Bureau of Meteorology",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.meteorological_service.tropical_cyclone_categories",
                    "friendly_name": "Tropical Cyclone Categories"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone_category . \nVALUES ?x1 { :en.bureau_of_meteorology } \n?x1 :meteorology.meteorological_service.tropical_cyclone_categories ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 64000100,
        "question": "what is the name of the dog breed that features blue coat?",
        "answer": [
            "Border Collie"
        ],
        "function": "none",
        "commonness": -14.047684491886347,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.petbreeds.dog_breed",
                    "class": "base.petbreeds.dog_breed",
                    "friendly_name": "Dog Breed",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.blue",
                    "class": "base.petbreeds.dog_coat_color",
                    "friendly_name": "Blue",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.petbreeds.dog_breed.color",
                    "friendly_name": "Color"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.petbreeds.dog_breed . \nVALUES ?x1 { :en.blue } \n?x0 :base.petbreeds.dog_breed.color ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 24000200,
        "question": "team saxo bank-sungard is managed by whom?",
        "answer": [
            "Bjarne Riis"
        ],
        "function": "none",
        "commonness": -18.42626988711012,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.peleton.cycling_team_staff",
                    "class": "base.peleton.cycling_team_staff",
                    "friendly_name": "Cycling Team Staff",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.team_csc",
                    "class": "base.peleton.cycling_team_professional",
                    "friendly_name": "Team Saxo Bank-SunGard",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.peleton.cycling_team_professional.general_manager",
                    "friendly_name": "General Manager"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.peleton.cycling_team_staff . \nVALUES ?x1 { :en.team_csc } \n?x1 :base.peleton.cycling_team_professional.general_manager ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 62000000,
        "question": "what fuel can be used for the engine bmw 3.0l 6 cylinder 300 hp 300 ft-lbs turbo?",
        "answer": [
            "Gasoline"
        ],
        "function": "none",
        "commonness": -20.70207276046404,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "automotive.fuel",
                    "class": "automotive.fuel",
                    "friendly_name": "Fuel",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.bmw_3_0l_6_cylinder_300_hp_300_ft_lbs_turbo",
                    "class": "automotive.engine",
                    "friendly_name": "BMW 3.0L 6 cylinder 300 hp 300 ft-lbs Turbo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "automotive.engine.fuels_used",
                    "friendly_name": "Fuels Used"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :automotive.fuel . \nVALUES ?x1 { :en.bmw_3_0l_6_cylinder_300_hp_300_ft_lbs_turbo } \n?x1 :automotive.engine.fuels_used ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 141000000,
        "question": "how many of donald e. smith's children are actors?",
        "answer": [
            "2"
        ],
        "function": "count",
        "commonness": -9.261689426535522,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.actor",
                    "class": "film.actor",
                    "friendly_name": "Film actor",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0gyl0yc",
                    "class": "people.person",
                    "friendly_name": "Donald E. Smith",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.parents",
                    "friendly_name": "Parents"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.actor . \nVALUES ?x1 { :m.0gyl0yc } \n?x0 :people.person.parents ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 139000300,
        "question": "how many mall of america stores are there?",
        "answer": [
            "327"
        ],
        "function": "count",
        "commonness": -14.597041747608918,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.business_location",
                    "class": "business.business_location",
                    "friendly_name": "Organization Location",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.mall_of_america",
                    "class": "business.shopping_center",
                    "friendly_name": "Mall of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.shopping_center.store",
                    "friendly_name": "Stores"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.business_location . \nVALUES ?x1 { :en.mall_of_america } \n?x1 :business.shopping_center.store ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 157000001,
        "question": "list the producers of idol.",
        "answer": [
            "19 Entertainment"
        ],
        "function": "none",
        "commonness": -11.985498092691113,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "broadcast.producer",
                    "class": "broadcast.producer",
                    "friendly_name": "Broadcast Producer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.american_idol",
                    "class": "broadcast.content",
                    "friendly_name": "idol",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.producer.produces",
                    "friendly_name": "Produces"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.producer . \nVALUES ?x1 { :en.american_idol } \n?x0 :broadcast.producer.produces ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 55000102,
        "question": "what organism classification is one level above lilies?",
        "answer": [
            "Liliaceae"
        ],
        "function": "none",
        "commonness": -11.26736244928001,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.organism_classification",
                    "class": "biology.organism_classification",
                    "friendly_name": "Organism Classification",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.lilium",
                    "class": "biology.organism_classification",
                    "friendly_name": "lilies",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "biology.organism_classification.lower_classifications",
                    "friendly_name": "Lower classifications"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.organism_classification . \nVALUES ?x1 { :en.lilium } \n?x0 :biology.organism_classification.lower_classifications ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 43000401,
        "question": "what are some radio program episodes revolving around the army?",
        "answer": [
            "Mental Anguish and the Military"
        ],
        "function": "none",
        "commonness": -18.730993072803155,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "radio.radio_program_episode",
                    "class": "radio.radio_program_episode",
                    "friendly_name": "Radio program episode",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.u_army",
                    "class": "radio.radio_subject",
                    "friendly_name": "army",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "radio.radio_subject.episodes_with_this_subject",
                    "friendly_name": "Episodes with this subject"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program_episode . \nVALUES ?x1 { :en.u_army } \n?x1 :radio.radio_subject.episodes_with_this_subject ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 233000002,
        "question": "edwin powell hubble has discovered asteroids in which asteroid groups?",
        "answer": [
            "Cybele asteroid"
        ],
        "function": "none",
        "commonness": -27.057867969175838,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asteroid_group",
                    "class": "astronomy.asteroid_group",
                    "friendly_name": "Asteroid Group",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.asteroid",
                    "class": "astronomy.asteroid",
                    "friendly_name": "Asteroid",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.edwin_hubble",
                    "class": "astronomy.astronomer",
                    "friendly_name": "edwin powell hubble",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asteroid_group.asteroid_group_members",
                    "friendly_name": "Asteroid Group Members"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.astronomer.astronomical_objects_discovered",
                    "friendly_name": "Astronomical objects discovered"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asteroid_group . \n?x1 :type.object.type :astronomy.asteroid . \nVALUES ?x2 { :en.edwin_hubble } \n?x0 :astronomy.asteroid_group.asteroid_group_members ?x1 . \n?x2 :astronomy.astronomer.astronomical_objects_discovered ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 188000301,
        "question": "which different formats have been used in new york times?",
        "answer": [
            "Broadsheet"
        ],
        "function": "none",
        "commonness": -22.36926920155485,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.periodical_format",
                    "class": "book.periodical_format",
                    "friendly_name": "Periodical Format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "book.periodical_format_period",
                    "class": "book.periodical_format_period",
                    "friendly_name": "Periodical Format Period",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.the_new_york_times",
                    "class": "book.periodical",
                    "friendly_name": "new york times",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "book.periodical_format.periodicals_in_this_format",
                    "friendly_name": "Periodicals in this format"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "book.periodical_format_period.periodical",
                    "friendly_name": "Periodical"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.periodical_format . \n?x1 :type.object.type :book.periodical_format_period . \nVALUES ?x2 { :en.the_new_york_times } \n?x0 :book.periodical_format.periodicals_in_this_format ?x1 . \n?x1 :book.periodical_format_period.periodical ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 239000001,
        "question": "for the religions share the same god with christian faith, what are their beliefs?",
        "answer": [
            "Divine simplicity",
            "Salvation",
            "Harmony of religion and science",
            "Omniscience",
            "Resurrection appearances of Jesus",
            "Original sin",
            "Elimination of all forms of prejudice",
            "Solus Christus",
            "Universal auxiliary language",
            "Unity of Mankind",
            "Infallibility of the Church",
            "Nontrinitarianism",
            "Eastern Orthodox view of sin",
            "Unity of Religeon",
            "Independent investigation of truth",
            "Fall of man",
            "Creation",
            "Incarnation",
            "Premortality",
            "God in Mormonism",
            "Obedience to government and non-involvement in partisan politics",
            "World peace",
            "Universal compulsory education",
            "Elimination of extremes of wealth and poverty",
            "Sola gratia",
            "Soli Deo gloria",
            "Families Can Be Forever",
            "Transubstantiation",
            "Trinity",
            "Tikkun olam",
            "Sola fide",
            "Omnipotence",
            "Papal infallibility",
            "Degrees of glory",
            "Marriage for Time and All Eternity",
            "Unitarian monotheism",
            "Equality between men and women",
            "Unity of God",
            "Virgin birth of Jesus",
            "Sola scriptura",
            "Monotheism"
        ],
        "function": "none",
        "commonness": -24.899294145777223,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.belief",
                    "class": "religion.belief",
                    "friendly_name": "Belief",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "religion.deity",
                    "class": "religion.deity",
                    "friendly_name": "Deity",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "en.christianity",
                    "class": "religion.religion",
                    "friendly_name": "christian faith",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.belief.belief_of",
                    "friendly_name": "Belief Of"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.belief . \n?x1 :type.object.type :religion.religion . \n?x2 :type.object.type :religion.deity . \nVALUES ?x3 { :en.christianity } \n?x0 :religion.belief.belief_of ?x1 . \n?x2 :religion.deity.deity_of ?x1 . \n?x2 :religion.deity.deity_of ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 14000600,
        "question": "who is the author of twilight?",
        "answer": [
            "Stephenie Meyer"
        ],
        "function": "none",
        "commonness": -11.10139189737362,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_story_contributor",
                    "class": "film.film_story_contributor",
                    "friendly_name": "Film story contributor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03nm_fh",
                    "class": "film.film",
                    "friendly_name": "Twilight",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.film.story_by",
                    "friendly_name": "Story by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_story_contributor . \nVALUES ?x1 { :m.03nm_fh } \n?x1 :film.film.story_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 189000202,
        "question": "who is responsible for obama dog?",
        "answer": [
            "Barack Obama",
            "Michelle Obama"
        ],
        "function": "none",
        "commonness": -23.04507801907431,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.animal_owner",
                    "class": "biology.animal_owner",
                    "friendly_name": "Animal owner",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "biology.animal_ownership",
                    "class": "biology.animal_ownership",
                    "friendly_name": "Animal ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05t073s",
                    "class": "biology.owned_animal",
                    "friendly_name": "obama dog",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "biology.animal_ownership.owners",
                    "friendly_name": "Owners"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "biology.owned_animal.owners",
                    "friendly_name": "Owners"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.animal_owner . \n?x1 :type.object.type :biology.animal_ownership . \nVALUES ?x2 { :m.05t073s } \n?x1 :biology.animal_ownership.owners ?x0 . \n?x2 :biology.owned_animal.owners ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 220000301,
        "question": "what boxing titles has ali held?",
        "answer": [
            "WBA World Champion"
        ],
        "function": "none",
        "commonness": -34.99607422545811,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "boxing.boxing_title",
                    "class": "boxing.boxing_title",
                    "friendly_name": "Boxing title",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "boxing.boxing_title_tenure",
                    "class": "boxing.boxing_title_tenure",
                    "friendly_name": "Boxing title tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.muhammad_ali",
                    "class": "sports.boxer",
                    "friendly_name": "ali",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "boxing.boxing_title.champions",
                    "friendly_name": "Champions"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.boxer.titles",
                    "friendly_name": "Titles"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boxing.boxing_title . \n?x1 :type.object.type :boxing.boxing_title_tenure . \nVALUES ?x2 { :en.muhammad_ali } \n?x0 :boxing.boxing_title.champions ?x1 . \n?x2 :sports.boxer.titles ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 82000000,
        "question": "what genre is the play annie classified in?",
        "answer": [
            "Musical theatre"
        ],
        "function": "none",
        "commonness": -13.912675189238175,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "theater.theater_genre",
                    "class": "theater.theater_genre",
                    "friendly_name": "Theater Genre",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.annie",
                    "class": "theater.play",
                    "friendly_name": "Annie",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "theater.play.genre",
                    "friendly_name": "Genre"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :theater.theater_genre . \nVALUES ?x1 { :en.annie } \n?x1 :theater.play.genre ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 37000401,
        "question": "what kind of image stabilization technique is nex-5 using?",
        "answer": [
            "Lens based optical stabilization"
        ],
        "function": "none",
        "commonness": -20.571537198563355,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.image_stabilization_type",
                    "class": "digicams.image_stabilization_type",
                    "friendly_name": "Camera Image Stabilization Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0cp1pcv",
                    "class": "digicams.digital_camera",
                    "friendly_name": "nex-5",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.image_stabilization_type.digital_camera",
                    "friendly_name": "Digital camera"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.image_stabilization_type . \nVALUES ?x1 { :m.0cp1pcv } \n?x0 :digicams.image_stabilization_type.digital_camera ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 203000100,
        "question": "what type of games are fair division and rock-paper-scissors?",
        "answer": [
            "Zero–sum game"
        ],
        "function": "none",
        "commonness": -35.35909748042912,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.gametheory.class_of_game",
                    "class": "base.gametheory.class_of_game",
                    "friendly_name": "Class of game",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.fair_division",
                    "class": "base.gametheory.game_theory_game",
                    "friendly_name": "Fair division",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.rock_paper_scissors",
                    "class": "base.gametheory.game_theory_game",
                    "friendly_name": "Rock-paper-scissors",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.gametheory.game_theory_game.class_of_game",
                    "friendly_name": "Class of game"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.gametheory.class_of_game.games_of_this_type",
                    "friendly_name": "Games of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.gametheory.class_of_game . \nVALUES ?x1 { :en.fair_division } \nVALUES ?x2 { :en.rock_paper_scissors } \n?x1 :base.gametheory.game_theory_game.class_of_game ?x0 . \n?x0 :base.gametheory.class_of_game.games_of_this_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 151000501,
        "question": "the us has been hit by how many tropical cyclones?",
        "answer": [
            "24"
        ],
        "function": "count",
        "commonness": -9.954693910239504,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "meteorology.cyclone_affected_area",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "meteorology.tropical_cyclone.affected_areas",
                    "friendly_name": "Affected areas"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :en.united_states_of_america } \n?x0 :meteorology.tropical_cyclone.affected_areas ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 102000300,
        "question": "what ship wreck displaces the most water?",
        "answer": [
            "RMS Titanic"
        ],
        "function": "argmax",
        "commonness": -16.262269650587,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.wrecked_ship",
                    "class": "base.disaster2.wrecked_ship",
                    "friendly_name": "Wrecked ship",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "366.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "366.0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "boats.ship.displacement",
                    "friendly_name": "Displacement"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.wrecked_ship . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :base.disaster2.wrecked_ship . \n?y0 :boats.ship.displacement ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :boats.ship.displacement ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 30000001,
        "question": "which flying sites can be found in the us?",
        "answer": [
            "Yosemite National Park",
            "Slide Mountain",
            "Dunlap"
        ],
        "function": "none",
        "commonness": -8.325382642589407,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.bigsky.site",
                    "class": "base.bigsky.site",
                    "friendly_name": "Flying Site",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "location.location",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "location.location.containedby",
                    "friendly_name": "Contained by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.bigsky.site . \nVALUES ?x1 { :en.united_states_of_america } \n?x0 :location.location.containedby ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 25000100,
        "question": "what botanical gardens are there in washington, d.c.?",
        "answer": [
            "United States Botanic Garden"
        ],
        "function": "none",
        "commonness": -14.241838854470409,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.greatgardens.botanical_garden",
                    "class": "base.greatgardens.botanical_garden",
                    "friendly_name": "Botanical garden",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.washington_united_states",
                    "class": "location.location",
                    "friendly_name": "Washington, D.C.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.greatgardens.botanical_garden.location",
                    "friendly_name": "Location"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.greatgardens.botanical_garden . \nVALUES ?x1 { :en.washington_united_states } \n?x0 :base.greatgardens.botanical_garden.location ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 36000400,
        "question": "who are the developers of the source engine?",
        "answer": [
            "Valve Corporation"
        ],
        "function": "none",
        "commonness": -16.53886073111844,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.computer_game_engine_developer",
                    "class": "cvg.computer_game_engine_developer",
                    "friendly_name": "Video Game Engine Developer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.source_engine",
                    "class": "cvg.computer_game_engine",
                    "friendly_name": "Source Engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.computer_game_engine_developer.computer_game_engines_developed",
                    "friendly_name": "Computer game engines developed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_engine_developer . \nVALUES ?x1 { :en.source_engine } \n?x0 :cvg.computer_game_engine_developer.computer_game_engines_developed ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 221000001,
        "question": "what are the audio equipments with a weight of at most 31.7 kg that are manufactured in the us?",
        "answer": [
            "Martin-Logan Vantage",
            "Bel Canto e.One Dac3",
            "Zu Audio Druid Credenza",
            "KEF Reference 201/2",
            "Martin-Logan Purity",
            "Martin-Logan Preface",
            "Martin-Logan Vignette",
            "Martin-Logan Spire",
            "Revel Performa F32",
            "Martin-Logan Vista",
            "Revel Concerta F12",
            "Revel Ultima Gem2",
            "Revel Performa M22",
            "Zu Audio Druid",
            "Revel Concerta M12",
            "Zu Audio Essence",
            "Wilson Audio Duette",
            "Martin-Logan Source"
        ],
        "function": "<=",
        "commonness": -26.730049215528396,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.audiobase.audio_equipment",
                    "class": "base.audiobase.audio_equipment",
                    "friendly_name": "Audio Equipment",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "31.7^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "31.7",
                    "question_node": 0,
                    "function": "<="
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "location.country",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.audiobase.audio_equipment.weight",
                    "friendly_name": "Weight"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.audiobase.audio_equipment.country_of_manufacture",
                    "friendly_name": "Country of Manufacture"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.audiobase.audio_equipment . \nFILTER (?x1 <= 31.7)\nVALUES ?x2 { :en.united_states_of_america } \n?x0 :base.audiobase.audio_equipment.weight ?x1 . \n?x0 :base.audiobase.audio_equipment.country_of_manufacture ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 29000001,
        "question": "which company makes the apple ipod?",
        "answer": [
            "Apple"
        ],
        "function": "none",
        "commonness": -12.135613916614275,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.gadgets.brand",
                    "class": "base.gadgets.brand",
                    "friendly_name": "Brand",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.ipod",
                    "class": "base.gadgets.gadget",
                    "friendly_name": "apple ipod",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.gadgets.gadget.brand",
                    "friendly_name": "Brand"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.gadgets.brand . \nVALUES ?x1 { :en.ipod } \n?x1 :base.gadgets.gadget.brand ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 226000102,
        "question": "list every game that was put out by the same company that released dungeons and dragons.",
        "answer": [
            "Hecatomb",
            "Dungeons & Dragons Basic Set",
            "RoboRally",
            "NFL Showdown",
            "Star Wars Miniatures",
            "Advanced Dungeons & Dragons",
            "Star Wars Trading Card Game",
            "The Simpsons Trading Card Game",
            "Cavaliers and Roundheads",
            "Dungeons & Dragons (3rd Edition)",
            "d20 System",
            "Indiana Jones",
            "Dune",
            "Neopets Trading Card Game",
            "Xiaolin Showdown Trading Card Game",
            "Duel Masters Trading Card Game",
            "Codename: Kids Next Door Trading Card Game",
            "Gamma World",
            "Dungeons & Dragons (4th Edition)",
            "Filthy Rich",
            "Dungeons & Dragons Expert Set",
            "d20 Modern",
            "Pokémon Trading Card Game",
            "Dreamblade",
            "MLB Showdown",
            "Pivot",
            "Axis & Allies: D-Day",
            "Dungeons & Dragons Basic Game",
            "Castle Ravenloft Board Game",
            "Chainmail",
            "Axis & Allies: Europe",
            "Netrunner",
            "NBA Showdown",
            "Advanced Dungeons & Dragons 2nd Edition",
            "Dungeons & Dragons Miniatures Game",
            "Magic: The Gathering",
            "Doomtown",
            "BattleTech Collectible Card Game",
            "Blood Wars"
        ],
        "function": "none",
        "commonness": -22.65814471208033,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "games.game",
                    "class": "games.game",
                    "friendly_name": "Game",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "games.game_publisher",
                    "class": "games.game_publisher",
                    "friendly_name": "Game publisher",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.dungeons_dragons",
                    "class": "games.game",
                    "friendly_name": "dungeons and dragons",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "games.game.publisher",
                    "friendly_name": "Publisher"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "games.game_publisher.games_published",
                    "friendly_name": "Games published"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :games.game . \n?x1 :type.object.type :games.game_publisher . \nVALUES ?x2 { :en.dungeons_dragons } \n?x0 :games.game.publisher ?x1 . \n?x1 :games.game_publisher.games_published ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 196000200,
        "question": "what are the different positions on the new york yankees?",
        "answer": [
            "Utility player",
            "Closer",
            "First baseman",
            "Catcher",
            "Center fielder",
            "Second baseman",
            "Middle relief pitcher",
            "Pitcher",
            "Relief pitcher",
            "Utility infielder",
            "Starting pitcher",
            "Infielder",
            "Shortstop",
            "Third baseman",
            "Setup pitcher",
            "Designated hitter",
            "Hitting Coach",
            "Right fielder",
            "Left fielder",
            "Outfielder"
        ],
        "function": "none",
        "commonness": -21.716341203072073,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.sports_position",
                    "class": "sports.sports_position",
                    "friendly_name": "Sports position",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "sports.sport",
                    "class": "sports.sport",
                    "friendly_name": "Sport",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.new_york_yankees",
                    "class": "sports.sports_team",
                    "friendly_name": "New York Yankees",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sport.positions",
                    "friendly_name": "Positions"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "sports.sport.teams",
                    "friendly_name": "Teams"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.sports_position . \n?x1 :type.object.type :sports.sport . \nVALUES ?x2 { :en.new_york_yankees } \n?x1 :sports.sport.positions ?x0 . \n?x1 :sports.sport.teams ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 12000000,
        "question": "what ice hockey coaches have been working on their current job since 2009?",
        "answer": [
            "Dan Bylsma",
            "John Tortorella",
            "Peter Laviolette"
        ],
        "function": "none",
        "commonness": -16.902052285994483,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "ice_hockey.hockey_coach",
                    "class": "ice_hockey.hockey_coach",
                    "friendly_name": "Ice hockey coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "2009^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "2009",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "ice_hockey.hockey_coach.first_year_with_current_team",
                    "friendly_name": "First Year With Current Team"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :ice_hockey.hockey_coach . \nVALUES ?x1 { \"2009\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?x0 :ice_hockey.hockey_coach.first_year_with_current_team ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 118000100,
        "question": "find all the venues with a seating capacity no smaller than 1417.",
        "answer": [
            "PPL Park",
            "Esplanade - Theatres on the Bay, Singapore",
            "Robina Stadium",
            "Millennium Stadium",
            "1st Mariner Arena",
            "U.S. Cellular Coliseum",
            "Liberty Bowl Memorial Stadium",
            "Dorton Arena",
            "Saratoga Performing Arts Center",
            "McMahon Stadium",
            "Frost Arena",
            "Memorial Stadium, Clemson",
            "Royal Melbourne Showgrounds",
            "Allen Event Center",
            "Estadio Ciudad de Santiago del Estero",
            "Comerica Park",
            "White Hart Lane",
            "Princess Theatre, Melbourne",
            "Marina Civic Center",
            "Orpheum Theatre",
            "Kitchener Memorial Auditorium Complex",
            "Sawyer Center",
            "Adelaide Oval",
            "Galen Center",
            "Elland Road",
            "Town Toyota Center",
            "Abe Lenstra Stadion",
            "Hollywood Bowl",
            "Allianz Arena",
            "Frank Erwin Center",
            "Zénith de Strasbourg",
            "Curry Hicks Cage",
            "Holy Name Cathedral, Chicago",
            "Melbourne Cricket Ground",
            "Lambeau Field",
            "Birmingham–Jefferson Convention Complex",
            "Hampton Convocation Center",
            "Estadio José María Bértora",
            "O2 Arena",
            "Hanover Theatre for the Performing Arts",
            "London Coliseum",
            "Blue Cross Arena",
            "North Charleston Coliseum",
            "Underhill Stadium",
            "Sonny Lubick Field at Hughes Stadium",
            "The Coronet",
            "Ibrox Stadium",
            "Cardiff Arena",
            "Abbotsford Entertainment & Sports Centre",
            "Marin County Civic Center",
            "The Den",
            "Mahalia Jackson Theater of the Performing Arts",
            "Kungliga tennishallen",
            "Gerald J. Ford Stadium",
            "Welsh-Ryan Arena",
            "Melbourne Multi Purpose Venue",
            "London Velopark",
            "BB&T Field",
            "Zellerbach Hall",
            "Surprise Stadium",
            "Cape Town Stadium",
            "EnergySolutions Arena",
            "David A. Straz Jr. Center for the Performing Arts",
            "Pitt Stadium",
            "Arrowhead Stadium",
            "McDiarmid Park",
            "The Forum",
            "Assembly Hall",
            "Yankee Stadium",
            "Venue Cymru",
            "York Park",
            "Greensboro Coliseum Complex",
            "Budweiser Events Center",
            "Kyle Field",
            "Thani bin Jassim Stadium",
            "Minneapolis Convention Center",
            "Calihan Hall",
            "Kimmel Arena",
            "Event Center Arena",
            "Tuacahn",
            "Chiles Center",
            "Cumberland County Crown Coliseum",
            "Mountaineer Field at Milan Puskar Stadium",
            "Allen County War Memorial Coliseum",
            "Popejoy Hall",
            "Los Angeles Memorial Sports Arena",
            "Twickenham Stoop",
            "Bud Walton Arena",
            "Rose Bowl",
            "Massey Hall",
            "RCA Dome",
            "Stade Vélodrome",
            "Petersen Events Center",
            "Kay Bailey Hutchison Convention Center",
            "Manchester Central Convention Complex",
            "Sprint Center",
            "Shakespeare's Globe",
            "De Grolsch Veste",
            "Rangers Ballpark in Arlington",
            "Comcast Arena",
            "Vines Center",
            "Rentschler Field",
            "Columbus Civic Center",
            "Symphony Hall",
            "Mile One Centre",
            "Hancock Stadium",
            "Saban Theatre",
            "Cow Palace",
            "Stadio Alberto Braglia",
            "Notre Dame Stadium",
            "City National Grove of Anaheim",
            "Olympic Stadium",
            "Kinnick Stadium",
            "U.S. Bank Arena",
            "Packard Stadium",
            "Estádio do Dragão",
            "North Shore Music Theatre",
            "Sheikh Khalifa International Stadium",
            "Maverik Center",
            "Count Basie Theatre",
            "University of Dayton Arena",
            "Peterborough Memorial Centre",
            "Wellmont Theatre",
            "National Indoor Arena",
            "Sunderland Empire Theatre",
            "Gaillard Municipal Auditorium",
            "TD Bank Garden",
            "Teatro di San Carlo, Naples",
            "Eisarena Salzburg",
            "Uptown Theatre",
            "Gold Coast Convention and Exhibition Centre",
            "Palau d'Esports de Granollers",
            "Mohegan Sun Arena at Casey Plaza",
            "Alaska Airlines Arena at Hec Edmundson Pavilion",
            "Moses Mabhida Stadium",
            "Tannadice Park",
            "Seminole Hard Rock Hotel and Casino Hollywood",
            "CenturyLink Field",
            "Hofheinz Pavilion",
            "Cotton Bowl",
            "Penydarren Park",
            "Mid-America Center",
            "Megasport Arena",
            "Foxwoods Theatre",
            "Polideportivo Islas Malvinas",
            "Stade Marcel Picot",
            "Meadow Park",
            "Kenan Memorial Stadium",
            "St. James Theatre, Wellington",
            "DakotaDome",
            "Staples Center",
            "Cowtown Coliseum",
            "László Papp Budapest Sports Arena",
            "Budweiser Gardens",
            "Nationwide Arena",
            "Foxboro Stadium",
            "Faliro Coastal Zone Olympic Complex",
            "Nassau Veterans Memorial Coliseum",
            "Comcast Center",
            "Tulane Stadium",
            "UIC Pavilion",
            "State Theatre",
            "Freedom Hall",
            "Kitchener Memorial Auditorium",
            "Tad Smith Coliseum",
            "Rexall Centre",
            "Parc des Sports",
            "Spartan Stadium",
            "Civic Arena",
            "Whittemore Center",
            "Lincoln Financial Field",
            "Ellis Park Stadium",
            "The Orbit Room",
            "Cheltenham Racecourse",
            "Dom Sportova",
            "Anfield",
            "Carver–Hawkeye Arena",
            "The Lighthouse",
            "Estádio Olímpico João Havelange",
            "Jack Trice Stadium",
            "Lawrence Joel Veterans Memorial Coliseum",
            "St Andrew's",
            "Theodoros Kolokotronis Stadium",
            "Michigan Stadium",
            "Sun Life Stadium",
            "Estadio Cubierto Newell's Old Boys",
            "Busch Memorial Stadium",
            "LP Field",
            "Kress Events Center",
            "Stadio delle Alpi",
            "St. Augustine Amphitheatre",
            "Olympic Stadium",
            "Wiener Musikverein",
            "Jon M. Huntsman Center",
            "Koning Willem II Stadion",
            "The Shay",
            "OlympiaWorld Innsbruck",
            "Miller Outdoor Theatre",
            "Consol Energy Center",
            "Foro Sol",
            "Aviva Stadium",
            "König Pilsener Arena",
            "Mohegan Sun Arena",
            "Bramall Lane",
            "Marion Palace Theatre",
            "Swayze Field",
            "Commonwealth Stadium",
            "National Auditorium",
            "Her Majesty's Theatre, Melbourne",
            "Wortham Theater Center",
            "Hampden Park",
            "Ottawa Auditorium",
            "Austin Convention Center",
            "Olympic Stadium",
            "Ben Hill Griffin Stadium",
            "Goss Stadium at Coleman Field",
            "Grand Lake Theater",
            "Pharr International Convention Center",
            "National Ice Centre",
            "Hammersmith Palais",
            "Royal Agricultural Hall",
            "Yankee Stadium",
            "Eden Gardens",
            "Orpheum Theatre",
            "Wrigley Field",
            "Fox Theatre",
            "Goodison Park",
            "Memorial Stadium",
            "Donau Arena",
            "Thebarton Theatre",
            "Morton H. Meyerson Symphony Center, Dallas",
            "Al-Hamadaniah Stadium",
            "Cleveland Stadium",
            "Stan Sheriff Center",
            "Donald W. Reynolds Razorback Stadium",
            "Palace Theatre",
            "Lipperlandhalle",
            "Odyssey Arena",
            "Britannia Stadium",
            "The O2",
            "Oslo Opera House",
            "Loftus Road",
            "Winspear Opera House, Dallas",
            "Bowers Stadium",
            "Mosaic Stadium at Taylor Field",
            "Duluth Entertainment Convention Center",
            "Estadio Monumental Antonio Vespucio Liberti",
            "Royal Theatre Carré",
            "Capitol Theatre",
            "Faurot Field",
            "Baum Stadium",
            "Boone Pickens Stadium",
            "Edmund P. Joyce Center",
            "Williams-Brice Stadium",
            "Coronado Performing Arts Center",
            "Craven Cottage",
            "Comerica Theatre",
            "Laredo Energy Arena",
            "Palace Theatre, Melbourne",
            "DTE Energy Music Theatre",
            "Opéra Bastille",
            "Tokyo Dome City",
            "MetLife Stadium",
            "Verizon Wireless Arena",
            "Winthrop Coliseum",
            "Majestic Theatre",
            "AT&T Park",
            "Camelback Ranch",
            "Magness Arena",
            "Hult Center for the Performing Arts",
            "Bob Devaney Sports Center",
            "Regent Theatre",
            "Target Center",
            "Bryant–Denny Stadium",
            "Orpheum Theatre",
            "Aronoff Center",
            "Sanford Center",
            "Swedbank Stadion",
            "Progressive Field",
            "Cassell Coliseum",
            "Stadthalle Graz",
            "Vector Arena",
            "Anhalt Arena",
            "Manchester Central Convention Complex",
            "Orpheum",
            "Memorial Stadium, Lincoln",
            "Majestic Theatre",
            "Canton Memorial Civic Center",
            "EverBank Field",
            "Gaiety Theatre, Dublin",
            "The Centre",
            "Chicago Theatre",
            "Riverside Stadium",
            "Medicine Hat Arena",
            "Oriole Park at Camden Yards",
            "De Montfort Hall",
            "Schermerhorn Symphony Center",
            "Hartwall Areena",
            "The Whiting",
            "Brooklyn Academy of Music",
            "Harry A. Gampel Pavilion",
            "Doug Mitchell Thunderbird Sports Centre",
            "The Oval",
            "New Jersey Performing Arts Center",
            "The Muny",
            "Foreman Field",
            "Stade de la Route de Lorient",
            "Columbiahalle",
            "Paul E. Tsongas Center at UMass Lowell",
            "Saoud bin Abdulrahman Stadium",
            "Raleigh Convention Center",
            "Rice-Eccles Stadium",
            "Old Trafford",
            "Silverdome",
            "Keller Auditorium",
            "Edinburgh Festival Theatre",
            "Whistler Sliding Centre",
            "Javelina Stadium",
            "Joseph P. Riley, Jr. Park",
            "Rose Bowl",
            "Gachibowli Indoor Stadium",
            "Auditorium Parco della Musica",
            "Pensacola Civic Center",
            "O2 World",
            "Bell Centre",
            "Giant Center",
            "Putra Indoor Stadium",
            "Cobo Center",
            "Shea Stadium",
            "Carnie Smith Stadium",
            "Morris Performing Arts Center",
            "Safeco Field",
            "Commerzbank-Arena",
            "Villa Park",
            "War Memorial Stadium",
            "Reynolds Coliseum",
            "El Paso County Coliseum",
            "Theatre Royal, Drury Lane",
            "Stade Auguste Bonal",
            "Liverpool Empire Theatre",
            "Folsom Field",
            "Williams Arena",
            "Reitz Arena",
            "Ricoh Arena",
            "Nutter Center",
            "Sullivan Arena",
            "Roanoke Civic Center",
            "Sleuyter Arena",
            "Bill Graham Civic Auditorium",
            "Jalan Besar Stadium",
            "Turner Field",
            "Somerset Park",
            "Regent Theatre, Dunedin",
            "Lone Star Amphitheater",
            "Perth Arena",
            "Mississippi Coliseum",
            "Landmark Theatre",
            "Resch Center",
            "Georgia Dome",
            "UNF Arena",
            "Reser Stadium",
            "Echo Arena Liverpool",
            "Littlejohn Coliseum",
            "World Arena, Colorado Springs",
            "Orpheum Theatre",
            "Ponds Forge International Sports Centre",
            "Reno Events Center",
            "Sanford Stadium",
            "Mariucci Arena",
            "Scottrade Center",
            "McKenzie Arena",
            "Rose Garden",
            "Redondo Beach Performing Arts Center",
            "Rhodes Stadium",
            "Covelli Centre",
            "TD Waterhouse Stadium",
            "Cedar Park Center",
            "Ems-Hölle",
            "BMO Harris Bank Center",
            "Save Mart Center",
            "Salt River Fields at Talking Stick",
            "Rimrock Auto Arena at MetraPark",
            "Tonhalle",
            "Wembley Stadium",
            "Zenith Arena",
            "Dee Events Center",
            "Scott Stadium",
            "US Airways Center",
            "Liberty Bank Stadium",
            "Bankers Life Fieldhouse",
            "Coors Events Center",
            "Stade de la Mosson",
            "Mercedes-Benz Superdome",
            "Boston Garden",
            "American Music Theatre",
            "Eriksdalshallen",
            "Dahlberg Arena",
            "Vaught–Hemingway Stadium",
            "Estadio Ciudad de La Plata",
            "Calvin Gilmore Theater",
            "Alumni Stadium",
            "Palestra",
            "Le Grand Rex",
            "Headingley Stadium",
            "Sun Bowl Stadium",
            "Capitol Theatre, Sydney",
            "Wells Fargo Center",
            "Candlestick Park",
            "Fox Theater Pomona",
            "Sparkassen-Erzgebirgsstadion",
            "Liberty Stadium",
            "Stanley Park Stadium",
            "Brisbane Entertainment Centre",
            "Fisher Field",
            "USF Sun Dome",
            "Palladium Ballroom",
            "Kölner Philharmonie",
            "Princess Theatre, Torquay",
            "HK Arena",
            "Estadio Fortunato Bonelli",
            "Raymond James Stadium",
            "Veltins-Arena",
            "Convocation Center",
            "Majestic Theatre",
            "Anoeta Stadium",
            "Oslo Spektrum",
            "New World Stages",
            "Joe Louis Arena",
            "Loftus Versfeld Stadium",
            "Spartan Stadium",
            "Verizon Arena",
            "Concertgebouw, Amsterdam",
            "Roundhouse",
            "Braehead Arena",
            "Scheels Arena",
            "Murrayfield Ice Rink",
            "Kidd Brewer Stadium",
            "Osaka Dome",
            "Robins Center",
            "Allen Fieldhouse",
            "Valley View Casino Center",
            "Huntington Avenue Grounds",
            "Maple Leaf Gardens",
            "Verizon Center",
            "Busch Stadium",
            "Town Hall",
            "Frankfurter Volksbank Stadion",
            "Portsmouth Guildhall",
            "San Francisco Airport Marriott Waterfront",
            "Ottawa Convention Centre",
            "Radio City Music Hall",
            "Bushnell Center for the Performing Arts",
            "Cliffs Pavilion",
            "Rogers Arena",
            "Tampereen jäähalli",
            "Festival Hall",
            "Victoria Palace Theatre",
            "INB Performing Arts Center",
            "Wolstein Center",
            "War Memorial Stadium",
            "Smith Center for the Performing Arts",
            "Lyric Theatre, Sydney",
            "Stadio Olimpico",
            "Estadio Riazor",
            "Lunt-Fontanne Theatre",
            "Red Rock Resort Spa and Casino",
            "Durham Bulls Athletic Park",
            "Yost Ice Arena",
            "Beijing National Aquatics Center",
            "Deltaplex Arena & Conference Center",
            "Viejas Arena",
            "Bellerive Oval",
            "Bristol Hippodrome",
            "Ordway Center for the Performing Arts",
            "Air Canada Centre",
            "Grand Olympic Auditorium",
            "Bojangles' Coliseum",
            "Lord's Cricket Ground",
            "Pete Maravich Assembly Center",
            "Hampton Coliseum",
            "Chacarita Juniors Stadium",
            "Amman International Stadium",
            "Kemper Arena",
            "PNC Bank Arts Center",
            "Sullivan Athletic Center",
            "Yale Bowl",
            "Sandia Resort and Casino",
            "Van Andel Arena",
            "The Fillmore Detroit",
            "Four Seasons Centre for the Performing Arts",
            "Sacramento Convention Center Complex",
            "Wankhede Stadium",
            "Spokane Veterans Memorial Arena",
            "Fifth Third Arena",
            "Max-Schmeling-Halle",
            "Marriott Center",
            "Spiroudome",
            "Emirates Stadium",
            "Walt Disney Concert Hall",
            "Majestic Theater",
            "Santiago Bernabéu Stadium",
            "Gillette Stadium",
            "I Wireless Center",
            "Rod Laver Arena",
            "Allphones Arena",
            "Grugahalle",
            "Sports Ground, Woodbridge Road, Guildford",
            "Enmore Theatre",
            "Verizon Wireless Amphitheatre",
            "Shanghai Stadium",
            "The Bank of Kentucky Center",
            "Cowboys Stadium",
            "HMV Forum",
            "Peoria Civic Center",
            "Marina Bay Sands",
            "Eastman Theatre",
            "Estadio Azteca",
            "Kiel Auditorium",
            "Camp Nou",
            "Estadio Universitario",
            "Warner Theatre",
            "Sleep Train Arena",
            "American Airlines Center",
            "The Time Warner Cable Arena",
            "Charline McCombs Empire Theatre",
            "Victoria Theatre",
            "Dunkin' Donuts Center",
            "Adriatic Arena",
            "Victoria Hall, Hanley",
            "Orange County Convention Center",
            "Balaídos",
            "Intrust Bank Arena",
            "New Wimbledon Theatre",
            "Edward Jones Dome",
            "Sioux Falls Arena",
            "Stadio Artemio Franchi",
            "Haas Pavilion",
            "The Lowry",
            "SIU Arena",
            "Kauffman Center for the Performing Arts",
            "Motorpoint Arena Sheffield",
            "Cintas Center",
            "MDCC-Arena",
            "Sydney Opera House",
            "XL Center",
            "Wagner Noel Performing Arts Center",
            "UCF Arena",
            "Centre In The Square",
            "Ford Center",
            "Conte Forum",
            "Westpac Stadium",
            "Wells Fargo Arena",
            "Eisstadion Weißwasser",
            "Ajinomoto Stadium",
            "Ross–Ade Stadium",
            "Gallagher-Iba Arena",
            "Kingfield Stadium",
            "Von Braun Center",
            "Reed Arena",
            "Gachibowli Athletic Stadium",
            "Grand Theatre, Leeds",
            "Lansdowne Road",
            "Louise M. Davies Symphony Hall",
            "Stranahan Theater",
            "Hi Corbett Field",
            "Rittal Arena Wetzlar",
            "Orpheum Theatre",
            "Aggie Stadium",
            "Expo Square Pavilion",
            "Tower Theater",
            "Credicard Hall",
            "Falcon Stadium",
            "Nya Parken",
            "Harris Theater",
            "PalaLottomatica",
            "Rialto Theatre",
            "Cobb Energy Performing Arts Centre",
            "Peace and Friendship Stadium",
            "Germain Arena",
            "Brighton Centre",
            "Charles E. Smith Athletic Center",
            "Bobcat Stadium",
            "Towson Center",
            "Scandinavium",
            "Nippert Stadium",
            "Stade de Gerland",
            "E Werk",
            "Jenny Craig Pavilion",
            "Memorial Stadium",
            "Coleman Coliseum",
            "Ottawa Civic Centre",
            "Stadio Artemio Franchi – Montepaschi Arena",
            "Coors Field",
            "Tiger Stadium",
            "High Point Solutions Stadium",
            "Campo de Fútbol de Vallecas",
            "Waterfront Hall",
            "Washington Avenue Armory",
            "Spreckels Theater",
            "Peter Mokaba Stadium",
            "Granada Theater",
            "Arena at Gwinnett Center",
            "Tynecastle Stadium",
            "London Palladium",
            "Chaifetz Arena",
            "William \"Dick\" Price Stadium",
            "Sun National Bank Center",
            "London Astoria",
            "Oakland-Alameda County Coliseum",
            "Bord Gáis Energy Theatre",
            "CenturyLink Center Omaha",
            "Ed Mirvish Theatre",
            "Mayo Civic Center",
            "New I-Mobile Stadium",
            "Estádio Vila Capanema",
            "New Theatre Oxford",
            "Bloomfield Road",
            "Richmond Coliseum",
            "Regent Theatre, Melbourne",
            "Paul Brown Stadium",
            "Thompson–Boling Arena",
            "Chrysler Hall",
            "La Romareda",
            "Cricket Wireless Amphitheatre",
            "Apollo Theater",
            "Volleyball Sportiv Complex",
            "Fillmore Auditorium",
            "Taco Bell Arena",
            "CenturyLink Center",
            "Veterans Memorial Auditorium",
            "Charles C. Hughes Stadium",
            "Tropicana Field",
            "Stade Armand Cesari",
            "Darrell K Royal–Texas Memorial Stadium",
            "Stadion An der Alten Försterei",
            "Gershwin Theatre",
            "Save-On-Foods Memorial Centre",
            "California Memorial Stadium",
            "Sony Centre for the Performing Arts",
            "AT&T Performing Arts Center",
            "Tilles Center for the Performing Arts",
            "Marlins Park",
            "Androscoggin Bank Colisée",
            "Theater des Westens",
            "Bob Carpenter Center",
            "Gibson Amphitheatre",
            "Dodger Stadium",
            "The Dome Leisure Centre",
            "Show Me Center",
            "Lucas Oil Stadium",
            "Lotto Arena",
            "University at Buffalo Stadium",
            "Forrest Theatre",
            "Kampa-Halle",
            "FirstEnergy Stadium",
            "Rogers Centre",
            "Old National Centre",
            "LaVell Edwards Stadium",
            "Jones AT&T Stadium",
            "Benjamin and Marian Schuster Performing Arts Center",
            "Red Star Stadium",
            "Mestalla Stadium",
            "Bridgestone Arena",
            "Beethovenhalle",
            "Stockholm Olympic Stadium",
            "Beacon Theatre, New York",
            "Congress Theatre",
            "Suheim Bin Hamad Stadium",
            "D.C. Armory",
            "Huish Park",
            "Toyota Center",
            "Ladd Peebles Stadium",
            "Daniel–Meyer Coliseum",
            "Vanderbilt Stadium",
            "National Hockey Stadium",
            "Astana Arena",
            "Florence Civic Center",
            "Estádio do Bessa",
            "Chicago Stadium",
            "Fenway Park",
            "Lander's Center",
            "Stadium of Light",
            "Glasgow Royal Concert Hall",
            "Sudbury Community Arena",
            "Principal Park",
            "Tokyo Dome",
            "De Doelen",
            "Maples Pavilion",
            "Bright House Networks Stadium",
            "Nikon at Jones Beach Theater",
            "Mizzou Arena",
            "Bramlage Coliseum",
            "PNC Arena",
            "Fox Theatre",
            "Kingsmeadow",
            "Chester Fritz Auditorium",
            "Byrd Stadium",
            "Cameron Stadium",
            "Ted Constant Convocation Center",
            "Prince Edward Theatre",
            "Football Park",
            "Estadio Racing Club",
            "Star Plaza Theatre",
            "Petco Park",
            "Memorial Stadium",
            "The Concert Hall in Aarhus",
            "Rabobank Arena",
            "Verizon Wireless Amphitheater",
            "Taft Theatre",
            "Green Point Stadium",
            "Mile High Stadium",
            "Olympia Bruno Coquatrix",
            "WACA Ground",
            "Theatre Royal, Glasgow",
            "John E. Worthen Arena",
            "Skelly Field at H. A. Chapman Stadium",
            "John Paul Jones Arena",
            "Ethias Arena",
            "Reebok Stadium",
            "Jorgensen Center for the Performing Arts",
            "Qualcomm Stadium",
            "Nationals Park",
            "The Centre In Vancouver for Performing Arts",
            "The Sage Gateshead",
            "Angel Stadium of Anaheim",
            "Hill 16",
            "Salem Civic Center",
            "Eden Park",
            "Clark–LeClair Stadium",
            "Sleep Train Pavilion",
            "Tennessee Theatre",
            "EnergyAustralia Stadium",
            "Cannon Center-Performing Arts",
            "Auditorio Telmex",
            "Vienna State Opera",
            "Al Hirschfeld Theatre",
            "Bangalore Football Stadium",
            "Washington–Grizzly Stadium",
            "Wolverhampton Civic Hall",
            "Quicken Loans Arena",
            "Glücksgas Stadium",
            "Teatro Real, Madrid",
            "Palacio Vistalegre",
            "Donald L. Tucker Center",
            "Crisler Center",
            "National Theatre",
            "The Times Union Center",
            "Gerry Weber Stadion",
            "San Jose Center For The Performing Arts",
            "Palais Garnier",
            "UFCU Disch–Falk Field",
            "Amway Arena",
            "Vikings Stadium",
            "Alpine Valley Music Theatre",
            "Beijing National Stadium",
            "Lyceum Theatre",
            "Wallace Wade Stadium",
            "Achilles Rink",
            "War Memorial Auditorium",
            "KFC Yum! Center",
            "The Egg",
            "State Farm Center",
            "Papa John's Cardinal Stadium",
            "Newcastle Entertainment Centre",
            "Autzen Stadium",
            "Camille Chamoun Sports City Stadium",
            "WesBanco Arena",
            "Sydney Entertainment Centre",
            "Pepsi Center",
            "Wembley Stadium",
            "Ashton Gate Stadium",
            "Miami Beach Convention Center",
            "Ninian Park",
            "KeyArena",
            "St James' Park",
            "Elliott Hall of Music",
            "The Elgin Theatre",
            "Jazz at Lincoln Center",
            "Western Springs Stadium",
            "Pauley Pavilion",
            "Robinson Center, Little Rock",
            "Cumberland County Civic Center",
            "McArthur Court",
            "Boleyn Ground",
            "Ryan Field",
            "Cynthia Woods Mitchell Pavilion",
            "Winter Garden Theatre",
            "Estadio Nuevo Los Cármenes",
            "Soldiers and Sailors Memorial Auditorium",
            "Winter Gardens, Blackpool",
            "First Arena",
            "Mage Solar Stadion",
            "Suncorp Stadium",
            "Vicente Calderón Stadium",
            "Beijing National Aquatics Center",
            "St David's Hall",
            "Perth Concert Hall",
            "Agganis Arena",
            "Estadio de Béisbol Monterrey",
            "Maverick Baseball Stadium",
            "Munn Ice Arena",
            "Michie Stadium",
            "Palais Theatre",
            "Susquehanna Bank Center",
            "Gigantium",
            "Philips Stadion",
            "Apollo Theater",
            "Preußenstadion",
            "Riverfront Stadium",
            "Charles Koch Arena",
            "Barabati Stadium",
            "Colonial Life Arena",
            "Stadio Antonio Bianco",
            "Råsunda Stadium",
            "Stadio Renato Dall'Ara",
            "Tatran Handball Arena",
            "Crystal Cathedral",
            "Hobby Center for the Performing Arts",
            "The Valley",
            "Target Field",
            "Waldo Stadium",
            "Palaran Stadium",
            "BancorpSouth Arena",
            "Sun Devil Stadium",
            "Maui Arts & Cultural Center",
            "General Motors Centre",
            "İzmir Atatürk Stadium",
            "Cam Henderson Center",
            "Scotiabank Saddledome",
            "Celebrity Theatre",
            "Scotiabank Place",
            "Copps Coliseum",
            "San Siro Stadium",
            "Big Sandy Superstore Arena",
            "The Broadway Theatre",
            "MTS Centre",
            "Adelphi Theatre",
            "Alex G. Spanos Center",
            "Alabama Theatre",
            "Bill Snyder Family Football Stadium",
            "Winnipeg Arena",
            "Estadio Benito Villamarín",
            "Robertson Stadium",
            "North Harbour Stadium",
            "Amway Center",
            "Detroit Opera House",
            "Bahrain National Stadium",
            "Riverside Theater",
            "Lakefront Arena",
            "Holt Arena",
            "Ulster Performing Arts Center",
            "Carter–Finley Stadium",
            "JQH Arena",
            "Kauffman Stadium",
            "Cheney Stadium",
            "American Airlines Arena",
            "BB&T Center",
            "Stadio Olimpico di Torino",
            "U.S. Cellular Field",
            "Academy of Music",
            "Le Transbordeur",
            "Ewood Park",
            "Memorial Stadium",
            "Golden Gate Theatre",
            "Peden Stadium",
            "Gatorade Garden City Complex",
            "Apollo Victoria Theatre",
            "Estadio El Madrigal",
            "Floyd Casey Stadium",
            "Emens Auditorium, Ball State University",
            "TSB Bank Arena",
            "Palace Theatre, Manchester",
            "K-Rock Centre",
            "KSU Convocation Center",
            "Stamford Bridge",
            "First Niagara Center",
            "Vancouver Forum",
            "Knoxville Civic Auditorium and Coliseum",
            "Alabama Theatre",
            "Estadio Julio Humberto Grondona",
            "Fox Theatre",
            "Ferrell Center",
            "Nashville Municipal Auditorium",
            "Stuart C. Siegel Center",
            "Don Haskins Center",
            "Juventus Stadium",
            "Arena di Verona",
            "Kelly/Shorts Stadium",
            "Miami Orange Bowl",
            "Xcel Energy Center",
            "Hilton Coliseum",
            "Kohl Center",
            "Auditorio Banamex",
            "Capitol Theatre",
            "San Diego Civic Theatre",
            "Tampa Bay Times Forum",
            "Stade du Moustoir",
            "TCF Bank Stadium",
            "Wang Theatre",
            "Riverbend Music Center",
            "Municipal Auditorium",
            "Los Angeles Memorial Coliseum",
            "Hanns-Martin-Schleyer-Halle",
            "New York Hippodrome",
            "Estadio Nuevo José Zorrilla",
            "Stadthalle Hagen",
            "King Power Stadium",
            "Stade Sébastien Charléty",
            "Barclays Center",
            "Roberts Municipal Stadium",
            "ShoWare Center",
            "U.S. Cellular Center",
            "Toyota Park",
            "Viaero Event Center",
            "Yokohama Arena",
            "FAU Stadium",
            "Jiffy Lube Live",
            "Tad Gormley Stadium",
            "Honda Center",
            "Rupp Arena",
            "Lawlor Events Center",
            "Broome County Veterans Memorial Arena",
            "Independence Events Center",
            "Montgomery Performing Arts Centre",
            "Pabellón Polideportivo Artaleku",
            "Rajamangala Stadium",
            "William D. Mullins Memorial Center",
            "Ricoh Coliseum",
            "Charleston Civic Center",
            "Carlson Center",
            "Dow Event Center",
            "Wales Millennium Centre",
            "King's Theatre, Glasgow",
            "State Theatre",
            "Miami Arena",
            "Estádio do Pacaembu",
            "Antarès",
            "Paulson Stadium",
            "National Arts Centre, Ottawa",
            "Pan American Center",
            "Edgbaston Cricket Ground",
            "Gill Coliseum",
            "Pittodrie Stadium",
            "GCS Ballpark",
            "The Pit",
            "Queen Elizabeth Theatre",
            "Coliseum Alfonso Pérez",
            "Stanford Stadium",
            "Aggie Stadium",
            "Stadio Giovanni Zini",
            "Ullevi",
            "Allstate Arena",
            "Carnesecca Arena",
            "Matthews Arena",
            "Soldier Field",
            "Orleans Arena",
            "Smart Araneta Coliseum",
            "O'Connell Center",
            "Palais des congrès de Paris",
            "Soccer City",
            "Lakewood Church Central Campus",
            "National Aquatic Centre",
            "Charlotte Coliseum",
            "Neyland Stadium",
            "Stadium Municipal",
            "Mackay Stadium",
            "Richmond Olympic Oval",
            "Rio Tinto Stadium",
            "University of Phoenix Stadium",
            "Stadio San Paolo",
            "Mosaic Place",
            "Metro Radio Arena",
            "1stBank Center",
            "Canad Inns Stadium",
            "Estadio De Béisbol Héctor Espino",
            "Stockton Arena",
            "Nelson W. Wolff Municipal Stadium",
            "Doak Campbell Stadium",
            "Pavilion Theatre",
            "Fratton Park",
            "Fife Ice Arena",
            "Redbird Arena",
            "Best Buy Theater",
            "Tiger Stadium",
            "Yubileyny Sports Palace",
            "Asim Ferhatović Hase Stadium",
            "BayArena",
            "Belmore Sports Ground",
            "Riviera Theatre",
            "Estadi Ciutat de València",
            "Weserstadion",
            "Palladium Theater",
            "Red Rocks Amphitheatre",
            "Bank of America Stadium",
            "Edinburgh Playhouse",
            "Thunder Bay Community Auditorium",
            "Rec Hall",
            "Gayfield Park",
            "Dominion Theatre",
            "Városi Sportcsarnok",
            "Dale F. Halton Arena",
            "The Joint",
            "HoHoKam Stadium",
            "Percival Molson Memorial Stadium",
            "Aloha Stadium",
            "Estadio Olímpico Andrés Quintana Roo",
            "Clyde Auditorium",
            "Dean Smith Center",
            "Fatorda Stadium",
            "MacInnes Student Ice Arena",
            "Durham County Stadium",
            "Strahan Coliseum",
            "Arena do Grêmio",
            "Red Bull Arena",
            "James A. Rhodes Arena",
            "Bethel Woods Center for the Arts",
            "AWD Hall",
            "Creighton Orpheum Theater",
            "Lynah Rink",
            "John F. Kennedy Stadium",
            "Broward Center for the Performing Arts",
            "Eintracht-Stadion",
            "United Palace Theater",
            "Tampa Stadium",
            "Şükrü Saracoğlu Stadium",
            "El Sadar Stadium",
            "Croke Park",
            "FC Dallas Stadium",
            "LDS Conference Center",
            "Víctor Jara Stadium",
            "Lane Stadium",
            "Churchill Downs",
            "Bass Performance Hall",
            "Auburn Arena",
            "Knapp Center",
            "Andrew Jackson Hall",
            "Donbass Arena",
            "Akoo Theatre at Rosemont",
            "Pacific Coliseum",
            "Old Trafford Cricket Ground",
            "Amon G. Carter Stadium",
            "Wiener Stadthalle Hall D",
            "Twickenham Stadium",
            "Matthew Knight Arena",
            "Nippon Budokan",
            "Mitsubishi Electric Halle",
            "Western Hall",
            "Cole Field House",
            "Compuware Arena",
            "American Bank Center",
            "Wicomico Youth and Civic Center",
            "Olsen Field at Blue Bell Park",
            "Rialto Square Theatre",
            "Glens Falls Civic Center",
            "Drayton McLane Baseball Stadium at John H. Kobs Field",
            "Stabler Arena",
            "Patriot Center",
            "Salvus-Stadion am Grevener Damm",
            "FIU Stadium",
            "Pershing Center",
            "Stade Geoffroy-Guichard",
            "Thomas Wolfe Auditorium",
            "Durham Performing Arts Center",
            "Carrier Dome",
            "Buck Shaw Stadium",
            "Moody Coliseum",
            "Warner Theatre",
            "Benteler Arena",
            "Oracle Arena",
            "Estadi Olímpic Lluís Companys",
            "Robert F. Kennedy Memorial Stadium",
            "Lloyd Noble Center",
            "HP Pavilion at San Jose",
            "Olympic Stadium Munich",
            "Goggin Ice Arena",
            "Marquis Theatre",
            "Gigg Lane",
            "The Palace of Auburn Hills",
            "Jordan–Hare Stadium",
            "The O2 Arena",
            "Embassy Theatre",
            "Roxy Theatre",
            "Westfalenstadion",
            "New Road, Worcester",
            "Nokia Theatre L.A. Live",
            "Ralph Wilson Stadium",
            "Hard Rock Hotel and Casino",
            "Central Park, Cowdenbeath",
            "Hagan Arena",
            "Tulalip Resort Casino",
            "Worthington Arena",
            "Liacouras Center",
            "Cajun Field",
            "The Pavilion",
            "BMO Harris Bradley Center",
            "O2 Academy Glasgow",
            "The Home Depot Center",
            "ARCO Arena I",
            "Tucson Convention Center",
            "GelreDome",
            "Citi Field",
            "RiverCenter for the Performing Arts",
            "Spartak Stadium",
            "Bryce Jordan Center",
            "Phoenix Municipal Stadium",
            "FedExField",
            "Independence Stadium",
            "Bridgeforth Stadium and Zane Showker Field",
            "Cambria County War Memorial Arena",
            "Empire, Leicester Square",
            "Veterans Memorial Coliseum",
            "Volkswagen Arena",
            "Memorial Gymnasium",
            "Pavilion Theatre",
            "Louis Brown Athletic Center",
            "Consol Energy Center",
            "Minute Maid Park",
            "Norva Theatre",
            "Centennial Concert Hall, Winnipeg",
            "Community Arts Center",
            "Legion Field",
            "Peabody Opera House",
            "M&T Bank Stadium",
            "DCU Center",
            "Love Street",
            "Morrison Center",
            "Kezar Stadium",
            "Reliant Stadium",
            "Family Arena",
            "Estadio Marcelo Bielsa",
            "East End Park",
            "United Center",
            "Philips Arena",
            "Celtic Park",
            "Ryan Center",
            "Avery Fisher Hall",
            "Stroh Center",
            "Molineux Stadium",
            "Admiralspalast",
            "Nuremberg Arena",
            "Easter Road",
            "Challenge Stadium",
            "River Center Arena",
            "Olympic Stadium",
            "Indiana University Auditorium",
            "Harvard Stadium",
            "Rexall Place",
            "Singapore Indoor Stadium",
            "Hofburg Palace",
            "5th Avenue Theatre",
            "Hokkaido Prefectural Sports Center",
            "Summum",
            "KC Stadium",
            "Pellissier Building and Wiltern Theatre",
            "Ericsson Globe",
            "Cameron Indoor Stadium",
            "Hallenstadion",
            "Savoy Cinema",
            "Chesapeake Energy Arena",
            "Alex Box Stadium/Skip Bertman Field",
            "BJK İnönü Stadium",
            "Arlington Stadium",
            "Lahaina Civic Center",
            "Ikast-Brande Arena",
            "Atletion",
            "Alamodome",
            "Hubert H. Humphrey Metrodome",
            "Utica Memorial Auditorium",
            "Three Rivers Stadium",
            "Wings Stadium",
            "Jobing.com Arena",
            "State Theatre",
            "Saitama Super Arena",
            "Carter Barron Amphitheatre",
            "Jeld-Wen Field",
            "Arena Theatre",
            "Brandt Centre",
            "BankUnited Center",
            "BMO Field",
            "Stade de France",
            "Jacksonville Veterans Memorial Arena",
            "Owensboro Sports Center",
            "Proctors",
            "Oakdale Theatre",
            "AWD-Arena",
            "Palau Sant Jordi",
            "Cícero Pompeu de Toledo Stadium",
            "Davis Wade Stadium",
            "Royal Festival Hall",
            "Chase Field",
            "Comanche County Fairgrounds",
            "Methodist Central Hall Westminster",
            "Verizon Theatre at Grand Prairie",
            "Hinkle Fieldhouse",
            "Estadio Tetelo Vargas",
            "Sleep Train Amphitheatre",
            "New Orleans Arena",
            "New Amsterdam Theatre",
            "Vicarage Road",
            "Stadium Australia",
            "Boardwalk Hall",
            "Imperial Theatre",
            "Los Angeles Theatre",
            "Barrie Molson Centre",
            "State Theatre",
            "The Helix",
            "Estadio Alberto J. Armando",
            "Hearst Greek Theatre",
            "Camp Randall Stadium",
            "Palace Theatre",
            "Stade du Hameau",
            "Goodman Stadium",
            "Mediolanum Forum",
            "Teatro alla Scala",
            "BI-LO Center",
            "BC Place",
            "Alerus Center",
            "Manchester Opera House",
            "Roy Wilkins Auditorium",
            "Frederiksberghallen",
            "Shoreline Amphitheatre",
            "Shrine Auditorium",
            "Johnny Unitas Stadium",
            "Cajundome",
            "Husky Stadium",
            "Toyota Center",
            "TD Ameritrade Park Omaha",
            "Iberostar Stadium",
            "Dowdy–Ficklen Stadium",
            "Grand Ole Opry",
            "Miller Park",
            "Princess of Wales Theatre",
            "Arizona Stadium",
            "Vancouver Convention Centre",
            "Qemal Stafa Stadium",
            "Value City Arena at the Jerome Schottenstein Center",
            "AFAS Stadion",
            "Sleeman Centre",
            "Estádio do Maracanã",
            "Jim Patterson Stadium",
            "Sovereign Center",
            "The Hawthorns",
            "Bronco Stadium",
            "Adler Theatre",
            "Heartland Events Center",
            "Huntington Center",
            "Elispace",
            "Brown Stadium",
            "Jay Pritzker Pavilion",
            "Bondi Beach",
            "Pantages Theatre",
            "O2 World",
            "AT&T Center",
            "Toyota Stadium",
            "Stade Francis-Le Blé",
            "Flens-Arena",
            "Reliant Astrodome",
            "Luis Conde Arena",
            "Newcastle City Hall",
            "Lawson Arena",
            "Arlene Schnitzer Concert Hall, Portland",
            "Southampton Guildhall",
            "Comcast Center",
            "HR Commitment Arena",
            "Hyde Park Picture House, Leeds",
            "Thomas & Mack Center",
            "East Fremantle Oval",
            "Paramount Theatre",
            "Esprit Arena",
            "The Bell Auditorium",
            "Alexandra Palace",
            "Subiaco Oval",
            "Ralph Engelstad Arena",
            "Tacoma Dome",
            "Niaz Stadium",
            "Five Flags Center",
            "Webster Bank Arena",
            "Stadio Ennio Tardini",
            "Breslin Student Events Center",
            "Al-Aqsa Mosque",
            "Luna Park, Buenos Aires",
            "Teatro Colón, Buenos Aires",
            "Velodrom",
            "Metalist Oblast Sports Complex",
            "Minskoff Theatre",
            "Shea's Performing Arts Center",
            "Amsterdam Arena",
            "BOK Center",
            "Alfond Arena",
            "Savannah Civic Center",
            "Ferguson Center for the Arts",
            "Pennsylvania Convention Center",
            "Sears Centre Arena",
            "Royal Bafokeng Stadium",
            "MassMutual Center",
            "Fox Theater",
            "The Florida Citrus Bowl Stadium",
            "Aberystwyth Arts Centre",
            "Martin Stadium",
            "Bobby Dodd Stadium",
            "Heinz Field",
            "Pioneer Center for the Performing Arts",
            "Metropolitan Opera House",
            "Veterans Stadium",
            "Harbour Station",
            "Plymouth Pavilions",
            "National Concert Hall, Dublin",
            "Eastern Kentucky Expo Center",
            "Lyric Opera House",
            "Motorpoint Arena Cardiff",
            "UNI-Dome",
            "Tate Rink",
            "National Stadium, Bukit Jalil",
            "Millerntor-Stadion",
            "Prospera Place",
            "Gaylord Family Oklahoma Memorial Stadium",
            "Canberra Stadium",
            "Dvorana Mirza Delibašić",
            "Giants Stadium",
            "Pride Park Stadium",
            "Allianz Stadium",
            "Whistler Olympic Park",
            "Congress Theater",
            "ENMAX Centre",
            "Sports Authority Field at Mile High",
            "Lake Elsinore Diamond",
            "The Arches",
            "Kombank Arena",
            "Ralph Engelstad Arena",
            "Neil Simon Theatre",
            "Carrara Stadium",
            "Moncton Coliseum",
            "New York City Center",
            "Stadion der Freundschaft",
            "Rugby Park",
            "Regent Theatre",
            "Centre Court",
            "Hill Auditorium",
            "Cedar Rapids Ice Arena",
            "Cruzan Amphitheatre",
            "Colston Hall",
            "Auditorium-Orchestre National de Lyon",
            "The Music Hall",
            "Sam Boyd Stadium",
            "Curb Event Center",
            "Ussishkin",
            "Phoenix Symphony Hall",
            "Bridgewater Hall, Manchester",
            "Go Dau Stadium",
            "Chavez Theatre",
            "Stadio Renato Curi",
            "MaxiparkArena",
            "Great American Ball Park",
            "Selhurst Park",
            "Rice Stadium",
            "U.S. Cellular Arena",
            "Commonwealth Stadium",
            "Prudential Center",
            "Hershey Centre",
            "Texas Stadium",
            "Pauley Pavilion",
            "Fargodome",
            "McCoy Stadium",
            "Nelson Mandela Bay Stadium",
            "Madejski Stadium",
            "Daytona International Speedway",
            "Hillsborough Stadium",
            "Princeton University Stadium",
            "City of Manchester Stadium",
            "Griffin Park",
            "Richard E. Berry Educational Support Center",
            "Salle Wilfrid-Pelletier, Montreal",
            "W. L. Zorn Arena",
            "WVU Coliseum",
            "Docklands Stadium",
            "Halifax Metro Centre",
            "Alamo Stadium",
            "Ford Field",
            "Braly Municipal Stadium",
            "Teatro dell'Opera di Roma",
            "Comédie-Française",
            "Olympia Ice Center",
            "Tyson Events Center",
            "Estádio da Luz",
            "Citizens Business Bank Arena",
            "Stadion im. Tadeusza Ślusarskiego",
            "Capitol Theatre",
            "Credit Union Centre",
            "Denver Coliseum",
            "National Auditorium of Music",
            "Wembley Arena",
            "Deva Stadium",
            "Norfolk Scope Arena",
            "McKale Center",
            "Mackey Arena",
            "O2 Academy Liverpool",
            "Manchester Arena",
            "Falkirk Stadium",
            "Cox Convention Center",
            "Molson Canadian Amphitheatre",
            "Shotwell Stadium",
            "Estádio José Alvalade",
            "Palais Omnisports de Paris-Bercy",
            "Ahmanson Theatre",
            "Kibbie Dome",
            "Point Theatre",
            "TipsArena",
            "Doak Field",
            "Racquet Club of Memphis",
            "Uptown Theater",
            "Cadillac Palace Theatre",
            "Boston Opera House",
            "Palace Theatre",
            "Centennial Stadium",
            "Teatro degli Arcimboldi",
            "Crystal Palace National Sports Centre",
            "Bartow Arena",
            "Krannert Center for the Performing Arts",
            "FedExForum",
            "Firhill Stadium",
            "Estadio José Jorge Conte",
            "Türk Telekom Arena",
            "Gersten Pavilion",
            "Ivor Wynne Stadium",
            "Swedbank Park",
            "Melching Field at Conrad Park",
            "Ebbets Field",
            "Birmingham Hippodrome",
            "Perth Oval",
            "Ohio Stadium",
            "Wells Fargo Arena",
            "Yakima SunDome",
            "MGM Grand Garden Arena",
            "Auckland Civic Theatre",
            "Symphony Hall, Birmingham",
            "Beaver Stadium",
            "Salt Lake Stadium",
            "Columbus Crew Stadium",
            "Long Beach Convention and Entertainment Center",
            "EWE Arena",
            "Citi Performing Arts Center",
            "Peabody Auditorium",
            "Saint Paul RiverCentre",
            "The Gabba",
            "E. A. Diddle Arena",
            "The Louisville Palace",
            "Ice Palace \"Ural Lightning\"",
            "Romney Stadium",
            "CFSB Center",
            "Rhein-Neckar Arena",
            "Sadler's Wells Theatre",
            "Benedum Center",
            "Madison Square Garden",
            "Royal Opera House, London",
            "Anaheim Convention Center",
            "Conexus Arts Centre",
            "Stadion Oberwerth",
            "Citizens Bank Park",
            "PNC Park",
            "United Spirit Arena",
            "Stechert Arena",
            "Arsenal Stadium",
            "Franklin Field",
            "Zénith d'Orléans",
            "Cypress Mountain Ski Area",
            "Arena Nova",
            "Izod Center",
            "Dolby Theatre",
            "Hammerstein Ballroom",
            "Estadio de La Cartuja",
            "Palais des Sports",
            "Osceola County Stadium",
            "ABB Arena Syd",
            "Usher Hall, Edinburgh",
            "Sydney Cricket Ground",
            "Futurist Theatre",
            "Fir Park",
            "Agora Theatre and Ballroom",
            "Coface Arena",
            "Lanxess Arena"
        ],
        "function": ">=",
        "commonness": -13.143543406313972,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "architecture.venue",
                    "class": "architecture.venue",
                    "friendly_name": "Venue",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1417^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "1417",
                    "question_node": 0,
                    "function": ">="
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.venue.capacity",
                    "friendly_name": "Seating capacity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :architecture.venue . \nFILTER (?x1 >= 1417)\n?x0 :architecture.venue.capacity ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 1000302,
        "question": "look for terrorist organizations that were responsible for nine eleven.",
        "answer": [
            "al-Qaeda"
        ],
        "function": "none",
        "commonness": -16.667819278902257,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.terrorism.terrorist_organization",
                    "class": "base.terrorism.terrorist_organization",
                    "friendly_name": "Terrorist organization",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.september_11_2001_attacks",
                    "class": "base.terrorism.terrorist_attack",
                    "friendly_name": "nine eleven",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.terrorism.terrorist_organization.involved_in_attacks",
                    "friendly_name": "Involved in attacks"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.terrorism.terrorist_organization . \nVALUES ?x1 { :en.september_11_2001_attacks } \n?x0 :base.terrorism.terrorist_organization.involved_in_attacks ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 64000200,
        "question": "which breeds of dogs are blue?",
        "answer": [
            "Border Collie"
        ],
        "function": "none",
        "commonness": -14.047684491886347,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.petbreeds.dog_breed",
                    "class": "base.petbreeds.dog_breed",
                    "friendly_name": "Dog Breed",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.blue",
                    "class": "base.petbreeds.dog_coat_color",
                    "friendly_name": "Blue",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.petbreeds.dog_breed.color",
                    "friendly_name": "Color"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.petbreeds.dog_breed . \nVALUES ?x1 { :en.blue } \n?x0 :base.petbreeds.dog_breed.color ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 196000202,
        "question": "what are the different positions on the yankee?",
        "answer": [
            "Center fielder",
            "Utility player",
            "Shortstop",
            "Closer",
            "Right fielder",
            "Pitcher",
            "Catcher",
            "Second baseman",
            "Outfielder",
            "Utility infielder",
            "Designated hitter",
            "Infielder",
            "Relief pitcher",
            "Hitting Coach",
            "Third baseman",
            "Middle relief pitcher",
            "First baseman",
            "Setup pitcher",
            "Starting pitcher",
            "Left fielder"
        ],
        "function": "none",
        "commonness": -21.716341203072073,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.sports_position",
                    "class": "sports.sports_position",
                    "friendly_name": "Sports position",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "sports.sport",
                    "class": "sports.sport",
                    "friendly_name": "Sport",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.new_york_yankees",
                    "class": "sports.sports_team",
                    "friendly_name": "yankee",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sport.positions",
                    "friendly_name": "Positions"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "sports.sport.teams",
                    "friendly_name": "Teams"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.sports_position . \n?x1 :type.object.type :sports.sport . \nVALUES ?x2 { :en.new_york_yankees } \n?x1 :sports.sport.positions ?x0 . \n?x1 :sports.sport.teams ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 195000201,
        "question": "what season of snl did elizabeth stamatina fey play in?",
        "answer": [
            "Saturday Night Live - Season 31",
            "Saturday Night Live - Season 30"
        ],
        "function": "none",
        "commonness": -31.334357186793028,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.saturdaynightlive.snl_season",
                    "class": "base.saturdaynightlive.snl_season",
                    "friendly_name": "SNL season",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.saturdaynightlive.snl_season_tenure",
                    "class": "base.saturdaynightlive.snl_season_tenure",
                    "friendly_name": "SNL season tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.tina_fey",
                    "class": "base.saturdaynightlive.snl_cast_member",
                    "friendly_name": "elizabeth stamatina fey",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.saturdaynightlive.snl_season.cast",
                    "friendly_name": "Cast"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.saturdaynightlive.snl_season_tenure.cast_members",
                    "friendly_name": "Cast members"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.saturdaynightlive.snl_season . \n?x1 :type.object.type :base.saturdaynightlive.snl_season_tenure . \nVALUES ?x2 { :en.tina_fey } \n?x0 :base.saturdaynightlive.snl_season.cast ?x1 . \n?x1 :base.saturdaynightlive.snl_season_tenure.cast_members ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 70000401,
        "question": "what kind of tea is the darjeeling?",
        "answer": [
            "Oolong",
            "Black tea"
        ],
        "function": "none",
        "commonness": -16.935525465954417,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "food.tea_type",
                    "class": "food.tea_type",
                    "friendly_name": "Tea type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.darjeeling_tea",
                    "class": "food.tea",
                    "friendly_name": "darjeeling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "food.tea.tea_type",
                    "friendly_name": "Type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.tea_type . \nVALUES ?x1 { :en.darjeeling_tea } \n?x1 :food.tea.tea_type ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 29000100,
        "question": "tell me the brand of ipod.",
        "answer": [
            "Apple"
        ],
        "function": "none",
        "commonness": -12.135613916614275,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.gadgets.brand",
                    "class": "base.gadgets.brand",
                    "friendly_name": "Brand",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.ipod",
                    "class": "base.gadgets.gadget",
                    "friendly_name": "iPod",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.gadgets.gadget.brand",
                    "friendly_name": "Brand"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.gadgets.brand . \nVALUES ?x1 { :en.ipod } \n?x1 :base.gadgets.gadget.brand ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 59000100,
        "question": "vitamin is included in what chemical classifications?",
        "answer": [
            "Organic compound"
        ],
        "function": "none",
        "commonness": -15.775155317841211,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.chemical_classification",
                    "class": "chemistry.chemical_classification",
                    "friendly_name": "Chemical Classification",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.vitamin",
                    "class": "chemistry.chemical_classification",
                    "friendly_name": "Vitamin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "chemistry.chemical_classification.lower_classifications",
                    "friendly_name": "Lower Classifications"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.chemical_classification . \nVALUES ?x1 { :en.vitamin } \n?x0 :chemistry.chemical_classification.lower_classifications ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 176000500,
        "question": "what is the name of someone responsible for curating an exhibition about the united states of america?",
        "answer": [
            "Hagedorn Foundation Gallery"
        ],
        "function": "none",
        "commonness": -26.893781750444095,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "exhibitions.exhibition_curator",
                    "class": "exhibitions.exhibition_curator",
                    "friendly_name": "Exhibition curator",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "exhibitions.exhibition",
                    "class": "exhibitions.exhibition",
                    "friendly_name": "Exhibition",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "exhibitions.exhibition_subject",
                    "friendly_name": "United States of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "exhibitions.exhibition.curators",
                    "friendly_name": "Curators"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "exhibitions.exhibition_subject.exhibitions_created_about_this_subject",
                    "friendly_name": "Exhibitions created about this subject"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :exhibitions.exhibition_curator . \n?x1 :type.object.type :exhibitions.exhibition . \nVALUES ?x2 { :en.united_states_of_america } \n?x1 :exhibitions.exhibition.curators ?x0 . \n?x2 :exhibitions.exhibition_subject.exhibitions_created_about_this_subject ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 223000602,
        "question": "what one of the comics by miller is about batman?",
        "answer": [
            "Batman: The Dark Knight Returns"
        ],
        "function": "none",
        "commonness": -21.89634449799579,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_series",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "Comic Book Series",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.frank_miller",
                    "class": "comic_books.comic_book_creator",
                    "friendly_name": "miller",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.batman",
                    "class": "comic_books.comic_book_character",
                    "friendly_name": "Batman",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "comic_books.comic_book_creator.series_created",
                    "friendly_name": "Series Created"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "comic_books.comic_book_series.featured_characters",
                    "friendly_name": "Featured Characters"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_series . \nVALUES ?x1 { :en.frank_miller } \nVALUES ?x2 { :en.batman } \n?x1 :comic_books.comic_book_creator.series_created ?x0 . \n?x0 :comic_books.comic_book_series.featured_characters ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 229000400,
        "question": "who published the comic books of alan moore?",
        "answer": [
            "WildStorm",
            "DC Comics",
            "Top Shelf Productions",
            "Avatar Press",
            "Dark Horse Comics",
            "Vertigo"
        ],
        "function": "none",
        "commonness": -22.0274509335855,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_publisher",
                    "class": "comic_books.comic_book_publisher",
                    "friendly_name": "Comic Book Publisher",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "comic_books.comic_book_series",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "Comic Book Series",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.alan_moore",
                    "class": "comic_books.comic_book_creator",
                    "friendly_name": "Alan Moore",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "comic_books.comic_book_publisher.comic_book_series_published",
                    "friendly_name": "Comic Book Series Published"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "comic_books.comic_book_creator.series_created",
                    "friendly_name": "Series Created"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_publisher . \n?x1 :type.object.type :comic_books.comic_book_series . \nVALUES ?x2 { :en.alan_moore } \n?x0 :comic_books.comic_book_publisher.comic_book_series_published ?x1 . \n?x2 :comic_books.comic_book_creator.series_created ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 1000101,
        "question": "which terrorist organizations were involved in the nine-eleven?",
        "answer": [
            "al-Qaeda"
        ],
        "function": "none",
        "commonness": -16.667819278902257,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.terrorism.terrorist_organization",
                    "class": "base.terrorism.terrorist_organization",
                    "friendly_name": "Terrorist organization",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.september_11_2001_attacks",
                    "class": "base.terrorism.terrorist_attack",
                    "friendly_name": "nine-eleven",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.terrorism.terrorist_organization.involved_in_attacks",
                    "friendly_name": "Involved in attacks"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.terrorism.terrorist_organization . \nVALUES ?x1 { :en.september_11_2001_attacks } \n?x0 :base.terrorism.terrorist_organization.involved_in_attacks ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 243000301,
        "question": "which radio programs in the english have the same subjects as schizophrenia: voices of an illness?",
        "answer": [
            "A Disaster Called Schizophrenia"
        ],
        "function": "none",
        "commonness": -39.718054108462916,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "radio.radio_program",
                    "class": "radio.radio_program",
                    "friendly_name": "Radio program",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.english",
                    "class": "language.human_language",
                    "friendly_name": "english",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "radio.radio_subject",
                    "class": "radio.radio_subject",
                    "friendly_name": "Radio subject",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.05v48n2",
                    "class": "radio.radio_program_episode",
                    "friendly_name": "Schizophrenia: Voices of an Illness",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.content.language",
                    "friendly_name": "Language"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "radio.radio_program.subjects",
                    "friendly_name": "Subject"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "radio.radio_program_episode.subjects",
                    "friendly_name": "Subjects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program . \nVALUES ?x1 { :en.english } \n?x2 :type.object.type :radio.radio_subject . \nVALUES ?x3 { :m.05v48n2 } \n?x0 :broadcast.content.language ?x1 . \n?x0 :radio.radio_program.subjects ?x2 . \n?x3 :radio.radio_program_episode.subjects ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 39000002,
        "question": "svalbard islands has what fossil specimens?",
        "answer": [
            "Pliosaurus"
        ],
        "function": "none",
        "commonness": -18.982916728576757,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.fossil_specimen",
                    "class": "biology.fossil_specimen",
                    "friendly_name": "Fossil specimen",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.svalbard",
                    "class": "biology.fossil_site",
                    "friendly_name": "svalbard islands",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "biology.fossil_specimen.found_at_site",
                    "friendly_name": "Found at site"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.fossil_specimen . \nVALUES ?x1 { :en.svalbard } \n?x0 :biology.fossil_specimen.found_at_site ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 68000000,
        "question": "what are the tropical cyclone classes that the australian bureau of meteorology is using?",
        "answer": [
            "Category 1 Tropical Cyclone (BOM)",
            "Category 4 Severe Tropical Cyclone (BOM)",
            "Category 3 Severe Tropical Cyclone (BOM)",
            "Category 2 Tropical Cyclone (BOM)",
            "Category 5 Severe Tropical Cyclone (BOM)",
            "Tropical Low (BOM)"
        ],
        "function": "none",
        "commonness": -17.939991743423864,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone_category",
                    "class": "meteorology.tropical_cyclone_category",
                    "friendly_name": "Tropical cyclone category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.bureau_of_meteorology",
                    "class": "meteorology.meteorological_service",
                    "friendly_name": "Australian Bureau of Meteorology",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.meteorological_service.tropical_cyclone_categories",
                    "friendly_name": "Tropical Cyclone Categories"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone_category . \nVALUES ?x1 { :en.bureau_of_meteorology } \n?x1 :meteorology.meteorological_service.tropical_cyclone_categories ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 163000001,
        "question": "what branches does the nypl system have?",
        "answer": [
            "New York Public Library Main Branch",
            "Schomburg Center for Research in Black Culture"
        ],
        "function": "none",
        "commonness": -15.15155046132745,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "library.public_library",
                    "class": "library.public_library",
                    "friendly_name": "Public Library",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.new_york_public_library",
                    "class": "library.public_library_system",
                    "friendly_name": "nypl",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "library.public_library_system.branches",
                    "friendly_name": "Branch Libraries"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :library.public_library . \nVALUES ?x1 { :en.new_york_public_library } \n?x1 :library.public_library_system.branches ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 8000100,
        "question": "what weave is used for denim?",
        "answer": [
            "Twill"
        ],
        "function": "none",
        "commonness": -18.69909202577648,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fashion.weave",
                    "class": "fashion.weave",
                    "friendly_name": "Weave",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.denim",
                    "class": "fashion.textile",
                    "friendly_name": "Denim",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "fashion.weave.textiles_of_this_weave",
                    "friendly_name": "Textiles of this weave"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fashion.weave . \nVALUES ?x1 { :en.denim } \n?x0 :fashion.weave.textiles_of_this_weave ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 86000302,
        "question": "what spacecrafts did the jet propulsion lab produce?",
        "answer": [
            "Galileo"
        ],
        "function": "none",
        "commonness": -15.034740807992804,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.schemastaging.spacecraft_extra",
                    "class": "base.schemastaging.spacecraft_extra",
                    "friendly_name": "Spacecraft extra",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.jet_propulsion_laboratory",
                    "class": "spaceflight.satellite_manufacturer",
                    "friendly_name": "jet propulsion lab",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.satellite_manufacturer.spacecraft_manufactured",
                    "friendly_name": "Spacecraft manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.schemastaging.spacecraft_extra . \nVALUES ?x1 { :en.jet_propulsion_laboratory } \n?x1 :spaceflight.satellite_manufacturer.spacecraft_manufactured ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 167000102,
        "question": "which computer operating system became available on 09/20/2008?",
        "answer": [
            "Android"
        ],
        "function": "none",
        "commonness": -14.431244262021593,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.operating_system",
                    "class": "computer.operating_system",
                    "friendly_name": "Operating System",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "2008-09-20^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "09/20/2008",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.operating_system.release_date",
                    "friendly_name": "Release Date"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.operating_system . \nVALUES ?x1 { \"2008-09-20\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?x0 :computer.operating_system.release_date ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 23000600,
        "question": "find the solid materials whose heat of fusion is at least 435.4 joules per mole.",
        "answer": [
            "Aluminium oxide",
            "Beryllium",
            "Titanium"
        ],
        "function": ">=",
        "commonness": -17.03884241302868,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.materials.solid_material",
                    "class": "base.materials.solid_material",
                    "friendly_name": "Solid Material",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "435.4^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "435.4",
                    "question_node": 0,
                    "function": ">="
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.materials.solid_material.heat_of_fusion",
                    "friendly_name": "Heat of Fusion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.materials.solid_material . \nFILTER (?x1 >= 435.4)\n?x0 :base.materials.solid_material.heat_of_fusion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 78000301,
        "question": "what models of chevy are out there?",
        "answer": [
            "Chevrolet Cosworth Vega",
            "Chevrolet 150",
            "Chevrolet Captiva",
            "Chevrolet Beretta",
            "Chevrolet Impala",
            "Chevrolet S-10 Blazer",
            "Chevrolet Malibu",
            "Chevrolet Monza",
            "Chevrolet Colorado",
            "Corvette Mako Shark",
            "Chevrolet Tracker",
            "Chevrolet Apache",
            "Chevrolet Spark",
            "Chevrolet Uplander",
            "Geo Spectrum",
            "Chevrolet Citation",
            "Chevrolet Corvair 900 Monza",
            "Chevrolet Townsman",
            "Maruti Versa",
            "Chevrolet Impala SS",
            "Chevrolet Avalanche",
            "Chevrolet SSR",
            "Chevrolet Lumina APV",
            "Chevrolet Corvette",
            "Chevrolet Volt",
            "Chevrolet Trailblazer",
            "Chevrolet Nova SS",
            "Chevrolet Cruze",
            "Chevrolet 400",
            "Chevrolet Opala",
            "Chevrolet HHR",
            "Chevrolet Nomad",
            "Chevrolet Silverado",
            "Chevrolet Yeoman",
            "Chevrolet Impala",
            "General Motors Sequel",
            "Chevrolet Superior",
            "Chevrolet Beauville",
            "Chevrolet Suburban",
            "Yenko Camaro",
            "Chevrolet Bel Air",
            "Chevrolet Chevelle COPO 427",
            "Chevrolet Express",
            "Chevrolet El Camino",
            "Chevrolet Omega",
            "Geo Prizm",
            "Holden Caprice",
            "Corvair Monza GT",
            "Chevrolet Kadett",
            "Chevrolet Sequel",
            "Chevrolet Kingswood",
            "Chevrolet Agile",
            "Chevrolet Lumina",
            "Chevrolet Bruin",
            "Chevrolet Chevelle",
            "Chevrolet Caprice",
            "Geo Sprint",
            "Chevrolet 210",
            "Chevrolet Orlando",
            "Chevrolet Titan",
            "Chevrolet Monte Carlo",
            "Chevrolet Firenza CanAm",
            "Chevrolet Kodiak",
            "Chevrolet Tavera",
            "Chevrolet Parkwood",
            "Chevrolet Corvette C6 ZR1",
            "Chevrolet Celebrity",
            "Maruti Esteem",
            "Geo Metro",
            "Chevrolet Venture",
            "Chevrolet Lumina",
            "Chevrolet LUV",
            "Chevrolet Aveo",
            "Chevrolet Corvair",
            "Chevrolet Delray",
            "Chevrolet Vectra",
            "Chevrolet Sprint",
            "Chevrolet Cobalt SS",
            "Chevrolet Corsica",
            "Chevrolet Cobalt",
            "Chevrolet Fleetline",
            "Chevrolet Aerovette",
            "Chevrolet K5 Blazer",
            "Chevrolet Constantia",
            "Chevrolet Chevelle SS 454",
            "Chevrolet Task Force",
            "Chevrolet C/K",
            "Chevrolet Biscayne",
            "Chevrolet Marajó",
            "Chevrolet Corvair 500",
            "Chevy Spark EV",
            "Opel Vectra",
            "Cerv 1",
            "Chevrolet Caprice LS",
            "Chevrolet S-10",
            "Chevrolet Camaro",
            "Chevrolet Aveo",
            "Chevrolet Montana",
            "Chevrolet Sonic",
            "Chevrolet Greenbrier",
            "Chevrolet SS",
            "Saturn Astra",
            "Corvette Stingray",
            "Chevrolet Equinox",
            "Chevrolet Vega",
            "Chevrolet Chevy II / Nova",
            "Chevrolet Bison",
            "Chevrolet Corvette Convertible",
            "Chevrolet Celta",
            "Chevrolet Chevelle Laguna",
            "1957 Chevrolet",
            "Chevrolet SS",
            "Chevrolet Advance Design",
            "Chevrolet Cavalier",
            "Chevrolet Styleline",
            "Chevrolet Tahoe",
            "Chevrolet Traverse",
            "Chevrolet Lakewood",
            "Chevrolet S-10 EV",
            "Chevrolet Chevette",
            "Chevrolet Lumina Z34",
            "Chevrolet Astro"
        ],
        "function": "none",
        "commonness": -11.69797241596795,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "automotive.model",
                    "class": "automotive.model",
                    "friendly_name": "Automobile Model",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.chevrolet",
                    "class": "automotive.make",
                    "friendly_name": "chevy",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "automotive.make.model_s",
                    "friendly_name": "Model(s)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :automotive.model . \nVALUES ?x1 { :en.chevrolet } \n?x1 :automotive.make.model_s ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 94000102,
        "question": "which events of e3 expo have been held?",
        "answer": [
            "Electronic Entertainment Expo 2010",
            "Electronic Entertainment Expo 2012",
            "Electronic Entertainment Expo 2011",
            "Electronic Entertainment Expo 2009"
        ],
        "function": "none",
        "commonness": -15.920868772774654,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "conferences.conference",
                    "class": "conferences.conference",
                    "friendly_name": "Conference event",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.e3",
                    "class": "conferences.conference_series",
                    "friendly_name": "e3 expo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "conferences.conference_series.conference",
                    "friendly_name": "Conferences"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference . \nVALUES ?x1 { :en.e3 } \n?x1 :conferences.conference_series.conference ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 1000202,
        "question": "the nine eleven were carried out with the involvement of what terrorist organizations?",
        "answer": [
            "al-Qaeda"
        ],
        "function": "none",
        "commonness": -16.667819278902257,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.terrorism.terrorist_organization",
                    "class": "base.terrorism.terrorist_organization",
                    "friendly_name": "Terrorist organization",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.september_11_2001_attacks",
                    "class": "base.terrorism.terrorist_attack",
                    "friendly_name": "nine eleven",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.terrorism.terrorist_organization.involved_in_attacks",
                    "friendly_name": "Involved in attacks"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.terrorism.terrorist_organization . \nVALUES ?x1 { :en.september_11_2001_attacks } \n?x0 :base.terrorism.terrorist_organization.involved_in_attacks ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 88000500,
        "question": "what movies were edited by steven spielberg?",
        "answer": [
            "The Goonies"
        ],
        "function": "none",
        "commonness": -13.224318035448787,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.americancomedy.movie",
                    "class": "base.americancomedy.movie",
                    "friendly_name": "Movie",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.steven_spielberg",
                    "class": "film.editor",
                    "friendly_name": "Steven Spielberg",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.editor.film",
                    "friendly_name": "Films edited"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.americancomedy.movie . \nVALUES ?x1 { :en.steven_spielberg } \n?x1 :film.editor.film ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 35000302,
        "question": "find bloggers born in the united states.",
        "answer": [
            "Jessamyn West",
            "Jeffrey Zeldman",
            "Kathy Sierra",
            "Roderick L. Evans",
            "Charles M. Blow"
        ],
        "function": "none",
        "commonness": -8.328627535458333,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "internet.blogger",
                    "class": "internet.blogger",
                    "friendly_name": "Blogger",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "location.location",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.place_of_birth",
                    "friendly_name": "Place of birth"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.blogger . \nVALUES ?x1 { :en.united_states_of_america } \n?x0 :people.person.place_of_birth ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 31000300,
        "question": "wicked was at which theater?",
        "answer": [
            "Apollo Victoria Theatre"
        ],
        "function": "none",
        "commonness": -17.747953270109736,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "theater.theater",
                    "class": "theater.theater",
                    "friendly_name": "Theater",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05nl6wh",
                    "class": "theater.theater_production",
                    "friendly_name": "Wicked",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "theater.theater.theatrical_productions_staged_here",
                    "friendly_name": "Theatrical productions staged here"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :theater.theater . \nVALUES ?x1 { :m.05nl6wh } \n?x0 :theater.theater.theatrical_productions_staged_here ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 45000001,
        "question": "who was the founder of the comedy group improvolympic?",
        "answer": [
            "Del Close",
            "Charna Halpern"
        ],
        "function": "none",
        "commonness": -18.425815926699165,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.americancomedy.comedy_group_founder",
                    "class": "base.americancomedy.comedy_group_founder",
                    "friendly_name": "Comedy group founder",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09b9mx",
                    "class": "base.americancomedy.comedy_group",
                    "friendly_name": "improvolympic",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.americancomedy.comedy_group.founders",
                    "friendly_name": "Founders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.americancomedy.comedy_group_founder . \nVALUES ?x1 { :m.09b9mx } \n?x1 :base.americancomedy.comedy_group.founders ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 246000300,
        "question": "which type of symptoms does the feline infectious peritonitis and old age diseases have in common?",
        "answer": [
            "Anorexia",
            "Fatigue",
            "Anemia",
            "Fever",
            "Diarrhea",
            "Weight loss"
        ],
        "function": "none",
        "commonness": -39.87995845215022,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.pethealth.symptom",
                    "class": "base.pethealth.symptom",
                    "friendly_name": "Pet Disease Symptom",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.feline_infectious_peritonitis",
                    "class": "base.pethealth.pet_disease_or_medical_condition",
                    "friendly_name": "Feline infectious peritonitis",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "base.pethealth.pet_disease_or_medical_condition",
                    "class": "base.pethealth.pet_disease_or_medical_condition",
                    "friendly_name": "Pet disease or medical condition",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "en.middle_aged_dog",
                    "class": "base.pethealth.pet_disease_risk_factor",
                    "friendly_name": "Old age",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.pethealth.pet_disease_or_medical_condition.symptoms",
                    "friendly_name": "Symptoms"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "base.pethealth.pet_disease_or_medical_condition.symptoms",
                    "friendly_name": "Symptoms"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor",
                    "friendly_name": "Pet Diseases with this Risk Factor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.pethealth.symptom . \nVALUES ?x1 { :en.feline_infectious_peritonitis } \n?x2 :type.object.type :base.pethealth.pet_disease_or_medical_condition . \nVALUES ?x3 { :en.middle_aged_dog } \n?x1 :base.pethealth.pet_disease_or_medical_condition.symptoms ?x0 . \n?x2 :base.pethealth.pet_disease_or_medical_condition.symptoms ?x0 . \n?x3 :base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 23000300,
        "question": "which materials need to take at least 435.4 joules of heat to fuse for one mole?",
        "answer": [
            "Titanium",
            "Beryllium",
            "Aluminium oxide"
        ],
        "function": ">=",
        "commonness": -17.03884241302868,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.materials.solid_material",
                    "class": "base.materials.solid_material",
                    "friendly_name": "Solid Material",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "435.4^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "435.4",
                    "question_node": 0,
                    "function": ">="
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.materials.solid_material.heat_of_fusion",
                    "friendly_name": "Heat of Fusion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.materials.solid_material . \nFILTER (?x1 >= 435.4)\n?x0 :base.materials.solid_material.heat_of_fusion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 90000402,
        "question": "what comet group does the great march comet of 1843 fall under?",
        "answer": [
            "Kreutz Sungrazers"
        ],
        "function": "none",
        "commonness": -23.410432544467408,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.comet_group",
                    "class": "astronomy.comet_group",
                    "friendly_name": "Comet group",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.great_comet_of_1843",
                    "class": "astronomy.comet",
                    "friendly_name": "great march comet of 1843",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.comet.comet_group",
                    "friendly_name": "Comet group"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.comet_group . \nVALUES ?x1 { :en.great_comet_of_1843 } \n?x1 :astronomy.comet.comet_group ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 210000302,
        "question": "how many cities placed a bid on hosting the 2008 olympic games?",
        "answer": [
            "5"
        ],
        "function": "count",
        "commonness": -21.34560336979508,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "olympics.olympic_bidding_city",
                    "class": "olympics.olympic_bidding_city",
                    "friendly_name": "Olympic bidding city",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "olympics.olympic_city_bid",
                    "class": "olympics.olympic_city_bid",
                    "friendly_name": "Olympic city bid",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.2008_summer_olympics",
                    "class": "olympics.olympic_games",
                    "friendly_name": "2008 olympic games",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "olympics.olympic_bidding_city.olympics_bid_on",
                    "friendly_name": "Olympics bid on"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "olympics.olympic_city_bid.olympic_games",
                    "friendly_name": "Olympic games"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :olympics.olympic_bidding_city . \n?x1 :type.object.type :olympics.olympic_city_bid . \nVALUES ?x2 { :en.2008_summer_olympics } \n?x0 :olympics.olympic_bidding_city.olympics_bid_on ?x1 . \n?x1 :olympics.olympic_city_bid.olympic_games ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 186000501,
        "question": "what tea is grown in both china and jp?",
        "answer": [
            "Matcha"
        ],
        "function": "none",
        "commonness": -21.807589230994807,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "food.tea",
                    "class": "food.tea",
                    "friendly_name": "Tea",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.china",
                    "class": "location.location",
                    "friendly_name": "China",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.japan",
                    "class": "location.location",
                    "friendly_name": "jp",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "food.tea.regions_where_grown",
                    "friendly_name": "Regions where grown"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "food.tea.regions_where_grown",
                    "friendly_name": "Regions where grown"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.tea . \nVALUES ?x1 { :en.china } \nVALUES ?x2 { :en.japan } \n?x0 :food.tea.regions_where_grown ?x1 . \n?x0 :food.tea.regions_where_grown ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 97000402,
        "question": "adobe pdf is supported by how many computing platforms?",
        "answer": [
            "2"
        ],
        "function": "count",
        "commonness": -10.277873450647292,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.computing_platform",
                    "class": "computer.computing_platform",
                    "friendly_name": "Computing Platform",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.portable_document_format",
                    "class": "computer.file_format",
                    "friendly_name": "adobe pdf",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.file_format.used_on",
                    "friendly_name": "Used On"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computing_platform . \nVALUES ?x1 { :en.portable_document_format } \n?x1 :computer.file_format.used_on ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 126000101,
        "question": "in the panama channel how many locks are there?",
        "answer": [
            "3"
        ],
        "function": "count",
        "commonness": -18.049431392764877,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.engineering.canal_lock",
                    "class": "base.engineering.canal_lock",
                    "friendly_name": "Canal Lock",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.panama_canal",
                    "class": "base.engineering.canal",
                    "friendly_name": "panama channel",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.engineering.canal.locks",
                    "friendly_name": "Locks"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.engineering.canal_lock . \nVALUES ?x1 { :en.panama_canal } \n?x1 :base.engineering.canal.locks ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 163000302,
        "question": "what are the branch libraries of the new york library?",
        "answer": [
            "New York Public Library Main Branch",
            "Schomburg Center for Research in Black Culture"
        ],
        "function": "none",
        "commonness": -15.15155046132745,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "library.public_library",
                    "class": "library.public_library",
                    "friendly_name": "Public Library",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.new_york_public_library",
                    "class": "library.public_library_system",
                    "friendly_name": "new york library",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "library.public_library_system.branches",
                    "friendly_name": "Branch Libraries"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :library.public_library . \nVALUES ?x1 { :en.new_york_public_library } \n?x1 :library.public_library_system.branches ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 182000000,
        "question": "what can be found in the way of amenities at avi bikszer's restaurant?",
        "answer": [
            "Kid Friendly",
            "Take-out food"
        ],
        "function": "none",
        "commonness": -39.363870110303736,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.services.restaurant_amenities",
                    "class": "base.services.restaurant_amenities",
                    "friendly_name": "Restaurant amenities",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.services.restaurant_additions",
                    "class": "base.services.restaurant_additions",
                    "friendly_name": "Restaurant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0dl9dd6",
                    "class": "dining.chef",
                    "friendly_name": "Avi Bikszer",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.services.restaurant_amenities.restaurants_with_amenity",
                    "friendly_name": "Restaurants"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.services.restaurant_additions.chef",
                    "friendly_name": "Chef"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.services.restaurant_amenities . \n?x1 :type.object.type :base.services.restaurant_additions . \nVALUES ?x2 { :m.0dl9dd6 } \n?x0 :base.services.restaurant_amenities.restaurants_with_amenity ?x1 . \n?x1 :base.services.restaurant_additions.chef ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 130000402,
        "question": "how many diseases do chiroptera spread?",
        "answer": [
            "2"
        ],
        "function": "count",
        "commonness": -15.511404288060435,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.bat",
                    "class": "medicine.vector_of_disease",
                    "friendly_name": "chiroptera",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.vector_of_disease.disease",
                    "friendly_name": "Disease(s)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :en.bat } \n?x1 :medicine.vector_of_disease.disease ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 14000000,
        "question": "who wrote twilight?",
        "answer": [
            "Stephenie Meyer"
        ],
        "function": "none",
        "commonness": -11.10139189737362,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_story_contributor",
                    "class": "film.film_story_contributor",
                    "friendly_name": "Film story contributor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03nm_fh",
                    "class": "film.film",
                    "friendly_name": "Twilight",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.film.story_by",
                    "friendly_name": "Story by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_story_contributor . \nVALUES ?x1 { :m.03nm_fh } \n?x1 :film.film.story_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 18000301,
        "question": "which championships did the west indies win during tournament play?",
        "answer": [
            "2012 ICC World Twenty20",
            "1979 Cricket World Cup"
        ],
        "function": "none",
        "commonness": -16.18711506680925,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cricket.cricket_tournament_event",
                    "class": "cricket.cricket_tournament_event",
                    "friendly_name": "Cricket Tournament Event",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.west_indian_cricket_team",
                    "class": "sports.sports_team",
                    "friendly_name": "west indies",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.sports_championship_event.champion",
                    "friendly_name": "Champion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cricket.cricket_tournament_event . \nVALUES ?x1 { :en.west_indian_cricket_team } \n?x0 :sports.sports_championship_event.champion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 68000300,
        "question": "what categories does the australian bureau of meteorology use for tropical cyclones?",
        "answer": [
            "Tropical Low (BOM)",
            "Category 1 Tropical Cyclone (BOM)",
            "Category 4 Severe Tropical Cyclone (BOM)",
            "Category 3 Severe Tropical Cyclone (BOM)",
            "Category 2 Tropical Cyclone (BOM)",
            "Category 5 Severe Tropical Cyclone (BOM)"
        ],
        "function": "none",
        "commonness": -17.939991743423864,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone_category",
                    "class": "meteorology.tropical_cyclone_category",
                    "friendly_name": "Tropical cyclone category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.bureau_of_meteorology",
                    "class": "meteorology.meteorological_service",
                    "friendly_name": "Australian Bureau of Meteorology",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.meteorological_service.tropical_cyclone_categories",
                    "friendly_name": "Tropical Cyclone Categories"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone_category . \nVALUES ?x1 { :en.bureau_of_meteorology } \n?x1 :meteorology.meteorological_service.tropical_cyclone_categories ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 91000000,
        "question": "who appears in the story the joker?",
        "answer": [
            "Dick Grayson",
            "Judge Drake",
            "Henry Claridge",
            "James Gordon",
            "Joker",
            "Batman",
            "Brute Nelson",
            "Jay Wylde"
        ],
        "function": "none",
        "commonness": -14.244426718282405,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_character",
                    "class": "comic_books.comic_book_character",
                    "friendly_name": "Comic Book Character",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.030shcp",
                    "class": "comic_books.comic_book_story",
                    "friendly_name": "The Joker",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "comic_books.comic_book_character.story_specific_appearances",
                    "friendly_name": "Story Specific Appearances"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_character . \nVALUES ?x1 { :m.030shcp } \n?x0 :comic_books.comic_book_character.story_specific_appearances ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 239000200,
        "question": "what are some things that are believed by members of different religions that share common deity with christianity?",
        "answer": [
            "Sola fide",
            "Omnipotence",
            "Solus Christus",
            "Independent investigation of truth",
            "Unity of God",
            "Fall of man",
            "Salvation",
            "Transubstantiation",
            "Divine simplicity",
            "Original sin",
            "Equality between men and women",
            "Obedience to government and non-involvement in partisan politics",
            "Universal auxiliary language",
            "World peace",
            "Resurrection appearances of Jesus",
            "Unity of Religeon",
            "Elimination of all forms of prejudice",
            "Eastern Orthodox view of sin",
            "Tikkun olam",
            "Degrees of glory",
            "Premortality",
            "Monotheism",
            "Nontrinitarianism",
            "Unity of Mankind",
            "Families Can Be Forever",
            "Trinity",
            "Incarnation",
            "Elimination of extremes of wealth and poverty",
            "Marriage for Time and All Eternity",
            "Infallibility of the Church",
            "Sola gratia",
            "Universal compulsory education",
            "Creation",
            "Sola scriptura",
            "Virgin birth of Jesus",
            "Soli Deo gloria",
            "Harmony of religion and science",
            "God in Mormonism",
            "Omniscience",
            "Unitarian monotheism",
            "Papal infallibility"
        ],
        "function": "none",
        "commonness": -24.899294145777223,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.belief",
                    "class": "religion.belief",
                    "friendly_name": "Belief",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "religion.deity",
                    "class": "religion.deity",
                    "friendly_name": "Deity",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "en.christianity",
                    "class": "religion.religion",
                    "friendly_name": "Christianity",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.belief.belief_of",
                    "friendly_name": "Belief Of"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.belief . \n?x1 :type.object.type :religion.religion . \n?x2 :type.object.type :religion.deity . \nVALUES ?x3 { :en.christianity } \n?x0 :religion.belief.belief_of ?x1 . \n?x2 :religion.deity.deity_of ?x1 . \n?x2 :religion.deity.deity_of ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 135000302,
        "question": "how many different versions of video games are developed on ms windows?",
        "answer": [
            "5977"
        ],
        "function": "count",
        "commonness": -11.13681288636446,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.microsoft_windows",
                    "class": "cvg.cvg_platform",
                    "friendly_name": "ms windows",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.game_version.platform",
                    "friendly_name": "Platform"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :en.microsoft_windows } \n?x0 :cvg.game_version.platform ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 175000201,
        "question": "what is the flag of the us?",
        "answer": [
            "Flag of the United States"
        ],
        "function": "none",
        "commonness": -20.826569487157226,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.flag",
                    "class": "symbols.flag",
                    "friendly_name": "Flag",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.flag_use",
                    "class": "symbols.flag_use",
                    "friendly_name": "Flag use",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "symbols.flag_referent",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.flag_use.flag",
                    "friendly_name": "Flag"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.flag_use.flag_user",
                    "friendly_name": "Flag user"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.flag . \n?x1 :type.object.type :symbols.flag_use . \nVALUES ?x2 { :en.united_states_of_america } \n?x1 :symbols.flag_use.flag ?x0 . \n?x1 :symbols.flag_use.flag_user ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 249000201,
        "question": "which golf course designed by nicklaus in 2003 has the highest score for par?",
        "answer": [
            "Bull Golf Course",
            "Longview Golf Course",
            "The Sagamore Golf Course"
        ],
        "function": "argmax",
        "commonness": -36.10002195245568,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.golf_course",
                    "class": "sports.golf_course",
                    "friendly_name": "Golf Course",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.jack_nicklaus",
                    "class": "sports.golf_course_designer",
                    "friendly_name": "nicklaus",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "2003^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "2003",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.golf_course_designer.golf_courses",
                    "friendly_name": "Golf Courses Designed"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "sports.golf_course.year_built",
                    "friendly_name": "Year Built"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.golf_course.par",
                    "friendly_name": "Par"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.golf_course . \nVALUES ?x1 { :en.jack_nicklaus } \nVALUES ?x2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :sports.golf_course . \nVALUES ?y1 { :en.jack_nicklaus } \nVALUES ?y2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?y1 :sports.golf_course_designer.golf_courses ?y0 . \n?y0 :sports.golf_course.year_built ?y2 . \n?y0 :sports.golf_course.par ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :sports.golf_course_designer.golf_courses ?x0 . \n?x0 :sports.golf_course.year_built ?x2 . \n?x0 :sports.golf_course.par ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 159000000,
        "question": "can you list for me all of tourist attractions available in the united states of america?",
        "answer": [
            "Centennial Olympic Park",
            "Soak City",
            "USS Silversides",
            "Six Flags New England",
            "Waldameer Park",
            "Action Park",
            "Philadelphia Museum of Art",
            "Wild River Country",
            "Busch Gardens Tampa Bay",
            "Fun Spot Amusement Park & Zoo",
            "Forsyth Park",
            "Islands of Adventure",
            "Six Flags Fiesta Texas",
            "Fisher Building",
            "Bowcraft Amusement Park",
            "Squaw Valley",
            "Magic Springs and Crystal Falls",
            "Silver Dollar City",
            "Old Point Loma Lighthouse",
            "Brandywine Zoo",
            "Disney's Animal Kingdom",
            "Pullen Park",
            "Rapids Water Park",
            "Crown Center",
            "Asian Art Museum of San Francisco",
            "Mammoth Cave National Park",
            "Darien Lake",
            "Wet 'n Wild Orlando",
            "Mesa Verde National Park",
            "Clementon Amusement Park",
            "DelGrosso's Amusement Park",
            "Savannah Victorian Historic District",
            "Roger Williams Park Zoo",
            "Pleasure Island",
            "Hollywood Boulevard",
            "Indiana Beach",
            "Oceans of Fun",
            "Mount Hood",
            "Slater Mill Historic Site",
            "Alamo Mission in San Antonio",
            "Grand Canyon",
            "Georgia Aquarium",
            "Louisville Zoo",
            "Enchanted Forest",
            "Sesame Place",
            "Salem Willows",
            "Playland",
            "Woodruff Arts Center",
            "Hersheypark",
            "Barstow Route 66 Mother Road Museum",
            "New Haven Green",
            "Stevens Institute of Technology",
            "Thomas Jefferson Memorial",
            "Opryland USA",
            "Hollywood Sign",
            "Prickett's Fort State Park",
            "Delaware Art Museum",
            "Dorney Park & Wildwater Kingdom",
            "Harry P. Leu Gardens",
            "Ghost Town in the Sky",
            "Museum of Art of Puerto Rico",
            "Yosemite National Park",
            "Chinatown",
            "Alex Theatre",
            "Copper Harbor Light",
            "Universal Orlando",
            "Georgia Dome",
            "Luxor Las Vegas",
            "Land of Make Believe",
            "Nickelodeon Universe",
            "Splashtown San Antonio",
            "Fox Theatre",
            "DisneyQuest",
            "Great Escape",
            "Denver Botanic Gardens",
            "Six Flags Over Texas",
            "Fort Klock",
            "New England Aquarium",
            "Solomon R. Guggenheim Museum",
            "Twin Peaks",
            "Anacapa Island",
            "Discovery Cove",
            "Yellowstone National Park",
            "Angel Island",
            "Naomi Institute",
            "Peoria Civic Center",
            "Mary and Leigh Block Museum of Art",
            "Bodega Bay",
            "Magic Kingdom",
            "Splash Adventure",
            "Six Flags Great America",
            "Landmark Theatre",
            "Shedd Aquarium",
            "Discovery World",
            "Splish Splash",
            "Crissy Field",
            "Air Zoo",
            "Napa Valley AVA",
            "Disney's River Country",
            "Summer Waves",
            "Water Country",
            "Cannery Row",
            "Bunker Beach",
            "Six Flags Great Adventure",
            "Lakemont Park",
            "Idlewild and Soak Zone",
            "Statue of Liberty",
            "Mall of America",
            "Hawaiian Falls Roanoke",
            "Madison Square Garden",
            "Independence Pass",
            "Dolby Theatre",
            "Lake Winnepesaukah",
            "Pilot Butte",
            "Mazda Raceway Laguna Seca",
            "Land of Oz",
            "Daytona Lagoon",
            "Tweetsie Railroad",
            "Wet 'n Wild Emerald Pointe",
            "White House",
            "Flaming Gorge Reservoir",
            "Alcatraz Island",
            "Chesapeake and Ohio Canal National Historical Park",
            "Oregon Garden",
            "XIT Museum",
            "Aquatica",
            "Alaska Zoo",
            "Mystery Spot",
            "Adventureland",
            "Enchanted Forest",
            "Mount Mansfield",
            "Science Museum of Minnesota",
            "Bushnell Center for the Performing Arts",
            "Fun-World",
            "Palisades Amusement Park",
            "Eleutherian College",
            "Busch Gardens Williamsburg",
            "Las Cascadas Water Park",
            "Downtown Disney",
            "Elliott Museum",
            "Brooklyn Botanic Garden",
            "University of Louisiana at Lafayette",
            "Art Institute of Chicago",
            "Joyland Amusement Park",
            "Morey's Piers",
            "Revere Beach",
            "Savannah River",
            "Downtown Disney",
            "Space Needle",
            "MarineLand",
            "Institute of American Indian Arts",
            "USS Lionfish",
            "Cliff's Amusement Park",
            "Camden Park",
            "Wild Waves Theme Park",
            "Rhode Island Convention Center",
            "Liberty Bell",
            "Epcot",
            "Water Wizz",
            "Detroit Zoo",
            "Beech Bend Park",
            "Collegiate Peaks",
            "Splash in the Boro",
            "Zoo Atlanta",
            "Birmingham Zoo",
            "Michigan's Adventure",
            "Waterville USA",
            "Hollywood Walk of Fame",
            "Six Flags Over Georgia",
            "Carowinds",
            "Kentucky Kingdom",
            "Museum of Contemporary Art Detroit",
            "Adirondack Mountains",
            "Bailey House Museum",
            "Nu‘uanu Pali",
            "Geauga Lake",
            "Gunstock Mountain Resort",
            "Hilltop Ski Area",
            "Mendenhall Glacier",
            "Binder Park Zoo",
            "Luna Park, Coney Island",
            "Kenai Fjords National Park",
            "Tempe Town Lake",
            "Wild Waters",
            "ESPN Wide World of Sports Complex",
            "San Diego Zoo Safari Park",
            "Santa's Village",
            "Adventureland",
            "SplashTown Houston",
            "Six Flags White Water",
            "Lake Pepin",
            "Camelbeach Waterpark",
            "Holiday World & Splashin' Safari",
            "American Swedish Institute",
            "Kings Island",
            "San Francisco Museum of Modern Art",
            "Warner Theatre",
            "Jewish Theological Seminary of America Library",
            "Wannado City",
            "Pennsylvania Academy of the Fine Arts",
            "Victoria Theatre",
            "Six Flags America",
            "Pebble Beach Golf Links",
            "Arkansas Post National Memorial",
            "Funtown Splashtown USA",
            "Knoebels Amusement Resort",
            "Meaher State Park",
            "Grand Traverse Bay",
            "Disney's Hollywood Studios",
            "Zoombezi Bay",
            "Worlds of Fun",
            "Marine Corps War Memorial",
            "Knott's Berry Farm",
            "Fremont Street Experience",
            "Las Vegas Strip",
            "Cedar Point",
            "New Jersey Performing Arts Center",
            "Baker Beach",
            "Assateague Island National Seashore",
            "Ryman Auditorium",
            "TCL Chinese Theatre",
            "Dunkin' Donuts Center",
            "University of Wisconsin-Oshkosh",
            "NRH2O",
            "Amerind Foundation",
            "Dinosaur World",
            "Empire State Building",
            "Kings Dominion",
            "Disney's Blizzard Beach",
            "Belmont Park",
            "Comerica Park",
            "Newport Casino",
            "Disney's Typhoon Lagoon",
            "Hacienda Buena Vista",
            "Santana Row",
            "Sandcastle Waterpark",
            "Kemah Boardwalk",
            "Bay Beach Amusement Park",
            "Polynesian Cultural Center",
            "Hawk Mountain Sanctuary",
            "Memphis Kiddie Park",
            "Freedomland U.S.A.",
            "Olvera Street",
            "Walt Disney Concert Hall",
            "Mountain Park",
            "Lagoon Amusement Park",
            "Freestyle Music Park",
            "Big Powderhorn Mountain",
            "Sea Pines Resort",
            "Naval Air Station Pensacola",
            "Splash Down Waterpark",
            "Conneaut Lake Park",
            "Durango–La Plata County Airport",
            "Schlitterbahn New Braunfels",
            "Western American Railroad Museum",
            "Los Alamos",
            "Los Angeles County Museum of Art",
            "Canobie Lake Park",
            "Wild Adventures",
            "Myrtle Waves",
            "Santa Cruz Island",
            "Lookout Mountain",
            "Tillicum Village",
            "La Fortaleza",
            "Dallas Arboretum and Botanical Garden",
            "White Water Bay",
            "University of North Dakota"
        ],
        "function": "none",
        "commonness": -5.979262482193667,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "travel.tourist_attraction",
                    "class": "travel.tourist_attraction",
                    "friendly_name": "Tourist attraction",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "location.location",
                    "friendly_name": "United States of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "location.location.containedby",
                    "friendly_name": "Contained by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :travel.tourist_attraction . \nVALUES ?x1 { :en.united_states_of_america } \n?x0 :location.location.containedby ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 79000201,
        "question": "which film festivals are focused on republic of poland?",
        "answer": [
            "Polish Film Festival in America"
        ],
        "function": "none",
        "commonness": -14.122065316655178,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_festival",
                    "class": "film.film_festival",
                    "friendly_name": "Film festival",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.poland",
                    "class": "film.film_festival_focus",
                    "friendly_name": "republic of poland",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.film_festival_focus.festivals_with_this_focus",
                    "friendly_name": "Festivals with this focus"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_festival . \nVALUES ?x1 { :en.poland } \n?x1 :film.film_festival_focus.festivals_with_this_focus ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 205000301,
        "question": "which documentation type can be created by both visual paradigm for uml and magicdraw uml?",
        "answer": [
            "HTML"
        ],
        "function": "none",
        "commonness": -29.247633988326648,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.umltools.documentation_type",
                    "class": "base.umltools.documentation_type",
                    "friendly_name": "Documentation Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.visual_paradigm_for_uml",
                    "class": "base.umltools.uml_tool",
                    "friendly_name": "Visual Paradigm for UML",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.magicdraw_uml",
                    "class": "base.umltools.uml_tool",
                    "friendly_name": "magicdraw uml",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.umltools.documentation_type.tool",
                    "friendly_name": "Tool"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.umltools.documentation_type.tool",
                    "friendly_name": "Tool"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.umltools.documentation_type . \nVALUES ?x1 { :en.visual_paradigm_for_uml } \nVALUES ?x2 { :en.magicdraw_uml } \n?x0 :base.umltools.documentation_type.tool ?x1 . \n?x0 :base.umltools.documentation_type.tool ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 5000202,
        "question": "please name the place where the patent computer mouse filed at.",
        "answer": [
            "United States Patent and Trademark Office"
        ],
        "function": "none",
        "commonness": -15.489207396185584,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.patent_office",
                    "class": "law.patent_office",
                    "friendly_name": "Patent office",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.mouse",
                    "class": "law.us_patent",
                    "friendly_name": "computer mouse",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.us_patent.patent_office",
                    "friendly_name": "Patent office"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.patent_office . \nVALUES ?x1 { :en.mouse } \n?x1 :law.us_patent.patent_office ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 173000200,
        "question": "who made ares i and saturn v?",
        "answer": [
            "Boeing"
        ],
        "function": "none",
        "commonness": -26.108725625543638,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_manufacturer",
                    "class": "spaceflight.rocket_manufacturer",
                    "friendly_name": "Rocket Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.ares_i",
                    "class": "spaceflight.rocket",
                    "friendly_name": "Ares I",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.saturn_v",
                    "class": "spaceflight.rocket",
                    "friendly_name": "Saturn V",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "spaceflight.rocket_manufacturer.rockets_manufactured",
                    "friendly_name": "Rockets Manufactured"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket.manufacturer",
                    "friendly_name": "Manufacturer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_manufacturer . \nVALUES ?x1 { :en.ares_i } \nVALUES ?x2 { :en.saturn_v } \n?x0 :spaceflight.rocket_manufacturer.rockets_manufactured ?x1 . \n?x2 :spaceflight.rocket.manufacturer ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 186000102,
        "question": "in both people's republic of china and japan, what tea is grown?",
        "answer": [
            "Matcha"
        ],
        "function": "none",
        "commonness": -21.807589230994807,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "food.tea",
                    "class": "food.tea",
                    "friendly_name": "Tea",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.china",
                    "class": "location.location",
                    "friendly_name": "people's republic of china",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.japan",
                    "class": "location.location",
                    "friendly_name": "Japan",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "food.tea.regions_where_grown",
                    "friendly_name": "Regions where grown"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "food.tea.regions_where_grown",
                    "friendly_name": "Regions where grown"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.tea . \nVALUES ?x1 { :en.china } \nVALUES ?x2 { :en.japan } \n?x0 :food.tea.regions_where_grown ?x1 . \n?x0 :food.tea.regions_where_grown ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 194000602,
        "question": "what collectable items were released in 1984 and part of the star war collection?",
        "answer": [
            "1984 Lumat action figure"
        ],
        "function": "none",
        "commonness": -25.053423614903828,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "interests.collectable_item",
                    "class": "interests.collectable_item",
                    "friendly_name": "Collectable item",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.star_wars",
                    "class": "interests.collection_category",
                    "friendly_name": "star war",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "1984^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "1984",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "interests.collectable_item.collection_category",
                    "friendly_name": "Collection category"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "interests.collectable_item.release_date",
                    "friendly_name": "Release date"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :interests.collectable_item . \nVALUES ?x1 { :en.star_wars } \nVALUES ?x2 { \"1984\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?x0 :interests.collectable_item.collection_category ?x1 . \n?x0 :interests.collectable_item.release_date ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 27000000,
        "question": "what kind of activisms is nazism a part of?",
        "answer": [
            "Fascism",
            "Militarism",
            "Anti-communism",
            "Totalitarianism",
            "Collectivism",
            "Nationalism",
            "Antisemitism",
            "Anti-parliamentarism",
            "Racism"
        ],
        "function": "none",
        "commonness": -12.075511593165825,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.activism.activism_issue",
                    "class": "base.activism.activism_issue",
                    "friendly_name": "Activism issue",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.nazism",
                    "class": "base.activism.activism_issue",
                    "friendly_name": "Nazism",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.activism.activism_issue.includes_issues",
                    "friendly_name": "Includes issues"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.activism.activism_issue . \nVALUES ?x1 { :en.nazism } \n?x0 :base.activism.activism_issue.includes_issues ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 221000201,
        "question": "what audio equipment manufactured in the us weighs at most 31.7 kg?",
        "answer": [
            "Martin-Logan Vignette",
            "Zu Audio Druid",
            "Martin-Logan Vista",
            "Revel Performa F32",
            "Martin-Logan Source",
            "KEF Reference 201/2",
            "Zu Audio Druid Credenza",
            "Martin-Logan Purity",
            "Bel Canto e.One Dac3",
            "Zu Audio Essence",
            "Revel Performa M22",
            "Martin-Logan Spire",
            "Martin-Logan Vantage",
            "Revel Concerta F12",
            "Martin-Logan Preface",
            "Wilson Audio Duette",
            "Revel Concerta M12",
            "Revel Ultima Gem2"
        ],
        "function": "<=",
        "commonness": -26.730049215528396,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.audiobase.audio_equipment",
                    "class": "base.audiobase.audio_equipment",
                    "friendly_name": "Audio Equipment",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "31.7^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "31.7",
                    "question_node": 0,
                    "function": "<="
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "location.country",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.audiobase.audio_equipment.weight",
                    "friendly_name": "Weight"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.audiobase.audio_equipment.country_of_manufacture",
                    "friendly_name": "Country of Manufacture"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.audiobase.audio_equipment . \nFILTER (?x1 <= 31.7)\nVALUES ?x2 { :en.united_states_of_america } \n?x0 :base.audiobase.audio_equipment.weight ?x1 . \n?x0 :base.audiobase.audio_equipment.country_of_manufacture ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 53000102,
        "question": "what ad targeting methods does google ads use?",
        "answer": [
            "Contextual advertising"
        ],
        "function": "none",
        "commonness": -17.96881996053463,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.onlineadvertising.ad_targeting_method",
                    "class": "base.onlineadvertising.ad_targeting_method",
                    "friendly_name": "Ad Targeting Method",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.adsense",
                    "class": "base.onlineadvertising.ad_network",
                    "friendly_name": "google ads",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.onlineadvertising.ad_network.targeting_method",
                    "friendly_name": "Ad targeting method"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.onlineadvertising.ad_targeting_method . \nVALUES ?x1 { :en.adsense } \n?x1 :base.onlineadvertising.ad_network.targeting_method ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 169000301,
        "question": "the discovery of o was made by how many people?",
        "answer": [
            "2"
        ],
        "function": "count",
        "commonness": -15.228520790164248,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.element_discoverer",
                    "class": "chemistry.element_discoverer",
                    "friendly_name": "Chemical Element Discoverer",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.oxygen",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "o",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.element_discoverer . \nVALUES ?x1 { :en.oxygen } \n?x1 :chemistry.chemical_element.discoverer ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 187000302,
        "question": "vladimir v. putin used to work for which law enforcement agency?",
        "answer": [
            "Federal Security Service",
            "KGB"
        ],
        "function": "none",
        "commonness": -16.83908150009119,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.crime.law_enforcement_authority",
                    "class": "base.crime.law_enforcement_authority",
                    "friendly_name": "Law enforcement agency",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.employment_tenure",
                    "class": "business.employment_tenure",
                    "friendly_name": "Employment tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.vladimir_putin",
                    "class": "people.person",
                    "friendly_name": "vladimir v. putin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.employment_tenure.company",
                    "friendly_name": "Employer"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "business.employment_tenure.person",
                    "friendly_name": "Person"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.crime.law_enforcement_authority . \n?x1 :type.object.type :business.employment_tenure . \nVALUES ?x2 { :en.vladimir_putin } \n?x1 :business.employment_tenure.company ?x0 . \n?x1 :business.employment_tenure.person ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 224000202,
        "question": "which news organizations reported on the 2008 olympic games?",
        "answer": [
            "British Broadcasting Corporation"
        ],
        "function": "none",
        "commonness": -20.36633159288857,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.newsevents.news_reporting_organisation",
                    "class": "base.newsevents.news_reporting_organisation",
                    "friendly_name": "News-reporting organisation",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.newsevents.news_report",
                    "class": "base.newsevents.news_report",
                    "friendly_name": "News-report",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.2008_summer_olympics",
                    "class": "base.newsevents.news_reported_event",
                    "friendly_name": "2008 olympic games",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.newsevents.news_report.news_reporting_organisation",
                    "friendly_name": "News-reporting organisation"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.newsevents.news_report.event",
                    "friendly_name": "Event"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.newsevents.news_reporting_organisation . \n?x1 :type.object.type :base.newsevents.news_report . \nVALUES ?x2 { :en.2008_summer_olympics } \n?x1 :base.newsevents.news_report.news_reporting_organisation ?x0 . \n?x1 :base.newsevents.news_report.event ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 127000400,
        "question": "less than 12 major storms occurred in which tropical cyclone seasons?",
        "answer": [
            "1891 Atlantic hurricane season",
            "1903 Atlantic hurricane season",
            "1899 Atlantic hurricane season",
            "1992 Atlantic hurricane season",
            "1958 Atlantic hurricane season",
            "1935 Atlantic hurricane season",
            "2005 Atlantic hurricane season",
            "1877 Atlantic hurricane season",
            "1876 Atlantic hurricane season",
            "1879 Atlantic hurricane season",
            "1910 Atlantic hurricane season",
            "1905 Atlantic hurricane season",
            "1934 Atlantic hurricane season",
            "1957 Atlantic hurricane season",
            "1908 Atlantic hurricane season",
            "1875 Atlantic hurricane season",
            "1896 Atlantic hurricane season",
            "1912 Atlantic hurricane season"
        ],
        "function": "<",
        "commonness": -18.461893577025045,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone_season",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "Tropical cyclone season",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "12^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "12",
                    "question_node": 0,
                    "function": "<"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "meteorology.tropical_cyclone_season.major_storms",
                    "friendly_name": "Major storms (cat. 3 or higher)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone_season . \nFILTER (?x1 < 12)\n?x0 :meteorology.tropical_cyclone_season.major_storms ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 249000102,
        "question": "which golf course designed by jack william nicklaus in 2003 has the largest number of par?",
        "answer": [
            "Bull Golf Course",
            "Longview Golf Course",
            "The Sagamore Golf Course"
        ],
        "function": "argmax",
        "commonness": -36.10002195245568,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.golf_course",
                    "class": "sports.golf_course",
                    "friendly_name": "Golf Course",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.jack_nicklaus",
                    "class": "sports.golf_course_designer",
                    "friendly_name": "jack william nicklaus",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "2003^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "2003",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.golf_course_designer.golf_courses",
                    "friendly_name": "Golf Courses Designed"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "sports.golf_course.year_built",
                    "friendly_name": "Year Built"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.golf_course.par",
                    "friendly_name": "Par"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.golf_course . \nVALUES ?x1 { :en.jack_nicklaus } \nVALUES ?x2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :sports.golf_course . \nVALUES ?y1 { :en.jack_nicklaus } \nVALUES ?y2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?y1 :sports.golf_course_designer.golf_courses ?y0 . \n?y0 :sports.golf_course.year_built ?y2 . \n?y0 :sports.golf_course.par ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :sports.golf_course_designer.golf_courses ?x0 . \n?x0 :sports.golf_course.year_built ?x2 . \n?x0 :sports.golf_course.par ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 53000100,
        "question": "what ad targeting methods does adsense use?",
        "answer": [
            "Contextual advertising"
        ],
        "function": "none",
        "commonness": -17.96881996053463,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.onlineadvertising.ad_targeting_method",
                    "class": "base.onlineadvertising.ad_targeting_method",
                    "friendly_name": "Ad Targeting Method",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.adsense",
                    "class": "base.onlineadvertising.ad_network",
                    "friendly_name": "AdSense",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.onlineadvertising.ad_network.targeting_method",
                    "friendly_name": "Ad targeting method"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.onlineadvertising.ad_targeting_method . \nVALUES ?x1 { :en.adsense } \n?x1 :base.onlineadvertising.ad_network.targeting_method ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 221000100,
        "question": "find audio equipments manufactured in the united states of america and weighing no more than 31.7 kg.",
        "answer": [
            "Bel Canto e.One Dac3",
            "Martin-Logan Spire",
            "Wilson Audio Duette",
            "Martin-Logan Vignette",
            "Martin-Logan Source",
            "Martin-Logan Vantage",
            "Zu Audio Druid",
            "Revel Performa M22",
            "Martin-Logan Vista",
            "Revel Concerta M12",
            "Martin-Logan Purity",
            "Revel Concerta F12",
            "Zu Audio Druid Credenza",
            "Revel Ultima Gem2",
            "Martin-Logan Preface",
            "Revel Performa F32",
            "KEF Reference 201/2",
            "Zu Audio Essence"
        ],
        "function": "<=",
        "commonness": -26.730049215528396,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.audiobase.audio_equipment",
                    "class": "base.audiobase.audio_equipment",
                    "friendly_name": "Audio Equipment",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "31.7^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "31.7",
                    "question_node": 0,
                    "function": "<="
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "location.country",
                    "friendly_name": "United States of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.audiobase.audio_equipment.weight",
                    "friendly_name": "Weight"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.audiobase.audio_equipment.country_of_manufacture",
                    "friendly_name": "Country of Manufacture"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.audiobase.audio_equipment . \nFILTER (?x1 <= 31.7)\nVALUES ?x2 { :en.united_states_of_america } \n?x0 :base.audiobase.audio_equipment.weight ?x1 . \n?x0 :base.audiobase.audio_equipment.country_of_manufacture ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 191000401,
        "question": "which of chrysler's rockets are capable of low earth orbit?",
        "answer": [
            "Saturn IB",
            "Saturn I"
        ],
        "function": "none",
        "commonness": -25.76461195221662,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket",
                    "class": "spaceflight.rocket",
                    "friendly_name": "Rocket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.low_earth_orbit",
                    "class": "spaceflight.rocket_function",
                    "friendly_name": "Low Earth orbit",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.chrysler",
                    "class": "spaceflight.rocket_manufacturer",
                    "friendly_name": "chrysler",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.rocket_function.rockets_supporting_this_function",
                    "friendly_name": "Rockets supporting this function"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_manufacturer.rockets_manufactured",
                    "friendly_name": "Rockets Manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket . \nVALUES ?x1 { :en.low_earth_orbit } \nVALUES ?x2 { :en.chrysler } \n?x1 :spaceflight.rocket_function.rockets_supporting_this_function ?x0 . \n?x2 :spaceflight.rocket_manufacturer.rockets_manufactured ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 167000302,
        "question": "on 09/20/2008 which computer operating system was released?",
        "answer": [
            "Android"
        ],
        "function": "none",
        "commonness": -14.431244262021593,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.operating_system",
                    "class": "computer.operating_system",
                    "friendly_name": "Operating System",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "2008-09-20^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "09/20/2008",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.operating_system.release_date",
                    "friendly_name": "Release Date"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.operating_system . \nVALUES ?x1 { \"2008-09-20\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?x0 :computer.operating_system.release_date ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 22000300,
        "question": "what symbol does cheer bear have on her tummy?",
        "answer": [
            "Rainbow"
        ],
        "function": "none",
        "commonness": -19.666389387745287,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.carebears.care_bears_tummy_symbol",
                    "class": "base.carebears.care_bears_tummy_symbol",
                    "friendly_name": "Care Bears Tummy Symbol",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.cheer_bear",
                    "class": "base.carebears.care_bears_character",
                    "friendly_name": "Cheer Bear",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.carebears.care_bears_character.tummy_symbol",
                    "friendly_name": "Tummy Symbol"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.carebears.care_bears_tummy_symbol . \nVALUES ?x1 { :en.cheer_bear } \n?x1 :base.carebears.care_bears_character.tummy_symbol ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 127000100,
        "question": "in which seasons of tropical cyclone are there less than 12 major storms?",
        "answer": [
            "1958 Atlantic hurricane season",
            "1934 Atlantic hurricane season",
            "1903 Atlantic hurricane season",
            "1908 Atlantic hurricane season",
            "1992 Atlantic hurricane season",
            "1877 Atlantic hurricane season",
            "2005 Atlantic hurricane season",
            "1876 Atlantic hurricane season",
            "1935 Atlantic hurricane season",
            "1910 Atlantic hurricane season",
            "1891 Atlantic hurricane season",
            "1912 Atlantic hurricane season",
            "1899 Atlantic hurricane season",
            "1905 Atlantic hurricane season",
            "1957 Atlantic hurricane season",
            "1879 Atlantic hurricane season",
            "1896 Atlantic hurricane season",
            "1875 Atlantic hurricane season"
        ],
        "function": "<",
        "commonness": -18.461893577025045,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone_season",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "Tropical cyclone season",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "12^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "12",
                    "question_node": 0,
                    "function": "<"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "meteorology.tropical_cyclone_season.major_storms",
                    "friendly_name": "Major storms (cat. 3 or higher)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone_season . \nFILTER (?x1 < 12)\n?x0 :meteorology.tropical_cyclone_season.major_storms ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 249000500,
        "question": "of all golf courses designed by jack nicklaus in 2003, which has the largest number of par?",
        "answer": [
            "The Sagamore Golf Course",
            "Longview Golf Course",
            "Bull Golf Course"
        ],
        "function": "argmax",
        "commonness": -36.10002195245568,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.golf_course",
                    "class": "sports.golf_course",
                    "friendly_name": "Golf Course",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.jack_nicklaus",
                    "class": "sports.golf_course_designer",
                    "friendly_name": "Jack Nicklaus",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "2003^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "2003",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.golf_course_designer.golf_courses",
                    "friendly_name": "Golf Courses Designed"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "sports.golf_course.year_built",
                    "friendly_name": "Year Built"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.golf_course.par",
                    "friendly_name": "Par"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.golf_course . \nVALUES ?x1 { :en.jack_nicklaus } \nVALUES ?x2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :sports.golf_course . \nVALUES ?y1 { :en.jack_nicklaus } \nVALUES ?y2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?y1 :sports.golf_course_designer.golf_courses ?y0 . \n?y0 :sports.golf_course.year_built ?y2 . \n?y0 :sports.golf_course.par ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :sports.golf_course_designer.golf_courses ?x0 . \n?x0 :sports.golf_course.year_built ?x2 . \n?x0 :sports.golf_course.par ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 175000302,
        "question": "the united states uses which flag?",
        "answer": [
            "Flag of the United States"
        ],
        "function": "none",
        "commonness": -20.826569487157226,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.flag",
                    "class": "symbols.flag",
                    "friendly_name": "Flag",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.flag_use",
                    "class": "symbols.flag_use",
                    "friendly_name": "Flag use",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "symbols.flag_referent",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.flag_use.flag",
                    "friendly_name": "Flag"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.flag_use.flag_user",
                    "friendly_name": "Flag user"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.flag . \n?x1 :type.object.type :symbols.flag_use . \nVALUES ?x2 { :en.united_states_of_america } \n?x1 :symbols.flag_use.flag ?x0 . \n?x1 :symbols.flag_use.flag_user ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 194000100,
        "question": "list any and all collectable star wars items that came out in 1984.",
        "answer": [
            "1984 Lumat action figure"
        ],
        "function": "none",
        "commonness": -25.053423614903828,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "interests.collectable_item",
                    "class": "interests.collectable_item",
                    "friendly_name": "Collectable item",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.star_wars",
                    "class": "interests.collection_category",
                    "friendly_name": "Star Wars",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "1984^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "1984",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "interests.collectable_item.collection_category",
                    "friendly_name": "Collection category"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "interests.collectable_item.release_date",
                    "friendly_name": "Release date"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :interests.collectable_item . \nVALUES ?x1 { :en.star_wars } \nVALUES ?x2 { \"1984\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?x0 :interests.collectable_item.collection_category ?x1 . \n?x0 :interests.collectable_item.release_date ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 160000302,
        "question": "who developed the os ms windows?",
        "answer": [
            "Microsoft"
        ],
        "function": "none",
        "commonness": -9.49162595443204,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.operating_system_developer",
                    "class": "computer.operating_system_developer",
                    "friendly_name": "Operating System Developer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.microsoft_windows",
                    "class": "computer.operating_system",
                    "friendly_name": "ms windows",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.operating_system_developer.operating_systems_developed",
                    "friendly_name": "Operating Systems Developed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.operating_system_developer . \nVALUES ?x1 { :en.microsoft_windows } \n?x0 :computer.operating_system_developer.operating_systems_developed ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 166000300,
        "question": "what's the name of the cancer center of massachusetts institute of technology?",
        "answer": [
            "David H. Koch Institute for Integrative Cancer Research at MIT"
        ],
        "function": "none",
        "commonness": -14.64262530660993,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.cancer_center",
                    "class": "medicine.cancer_center",
                    "friendly_name": "Cancer Center",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.massachusetts_institute_of_technology",
                    "class": "medicine.cancer_center_constituent",
                    "friendly_name": "Massachusetts Institute of Technology",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.cancer_center.constituents",
                    "friendly_name": "Constituents"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.cancer_center . \nVALUES ?x1 { :en.massachusetts_institute_of_technology } \n?x0 :medicine.cancer_center.constituents ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 160000000,
        "question": "who are the developers of the microsoft windows operating system?",
        "answer": [
            "Microsoft"
        ],
        "function": "none",
        "commonness": -9.49162595443204,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.operating_system_developer",
                    "class": "computer.operating_system_developer",
                    "friendly_name": "Operating System Developer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.microsoft_windows",
                    "class": "computer.operating_system",
                    "friendly_name": "Microsoft Windows",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.operating_system_developer.operating_systems_developed",
                    "friendly_name": "Operating Systems Developed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.operating_system_developer . \nVALUES ?x1 { :en.microsoft_windows } \n?x0 :computer.operating_system_developer.operating_systems_developed ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 136000401,
        "question": "with a different coat color, how many kinds of german shepherd can be found?",
        "answer": [
            "9"
        ],
        "function": "count",
        "commonness": -15.224960082952293,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.petbreeds.dog_coat_color",
                    "class": "base.petbreeds.dog_coat_color",
                    "friendly_name": "Dog Coat Color",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.east_german_shepherd_dog",
                    "class": "base.petbreeds.dog_breed",
                    "friendly_name": "german shepherd",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.petbreeds.dog_breed.color",
                    "friendly_name": "Color"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.petbreeds.dog_coat_color . \nVALUES ?x1 { :en.east_german_shepherd_dog } \n?x1 :base.petbreeds.dog_breed.color ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 199000000,
        "question": "what radio programs share the same genre with grand ole opry?",
        "answer": [
            "A Prairie Home Companion"
        ],
        "function": "none",
        "commonness": -23.568853346576827,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "radio.radio_program",
                    "class": "radio.radio_program",
                    "friendly_name": "Radio program",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "broadcast.genre",
                    "class": "broadcast.genre",
                    "friendly_name": "Broadcast Genre",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.grand_ole_opry",
                    "class": "broadcast.content",
                    "friendly_name": "Grand Ole Opry",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.content.genre",
                    "friendly_name": "Genres"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "broadcast.content.genre",
                    "friendly_name": "Genres"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program . \n?x1 :type.object.type :broadcast.genre . \nVALUES ?x2 { :en.grand_ole_opry } \n?x0 :broadcast.content.genre ?x1 . \n?x2 :broadcast.content.genre ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 200000300,
        "question": "which astronomical discovery was made using same techniques as for discovering pluto?",
        "answer": [
            "Neptune"
        ],
        "function": "none",
        "commonness": -30.78749144639272,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.astronomical_discovery",
                    "class": "astronomy.astronomical_discovery",
                    "friendly_name": "Astronomical Discovery",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.astronomical_discovery_technique",
                    "class": "astronomy.astronomical_discovery_technique",
                    "friendly_name": "Astronomical Discovery Technique",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.pluto",
                    "class": "astronomy.astronomical_discovery",
                    "friendly_name": "Pluto",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.astronomical_discovery.discovery_technique",
                    "friendly_name": "Discovery Technique"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "astronomy.astronomical_discovery_technique.astronomical_discoveries_by_this_method",
                    "friendly_name": "Astronomical discoveries by this method"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.astronomical_discovery . \n?x1 :type.object.type :astronomy.astronomical_discovery_technique . \nVALUES ?x2 { :en.pluto } \n?x0 :astronomy.astronomical_discovery.discovery_technique ?x1 . \n?x1 :astronomy.astronomical_discovery_technique.astronomical_discoveries_by_this_method ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 243000101,
        "question": "which radio programs broadcasted in the english deal with the same topics as schizophrenia: voices of an illness?",
        "answer": [
            "A Disaster Called Schizophrenia"
        ],
        "function": "none",
        "commonness": -39.718054108462916,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "radio.radio_program",
                    "class": "radio.radio_program",
                    "friendly_name": "Radio program",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.english",
                    "class": "language.human_language",
                    "friendly_name": "english",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "radio.radio_subject",
                    "class": "radio.radio_subject",
                    "friendly_name": "Radio subject",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.05v48n2",
                    "class": "radio.radio_program_episode",
                    "friendly_name": "Schizophrenia: Voices of an Illness",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.content.language",
                    "friendly_name": "Language"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "radio.radio_program.subjects",
                    "friendly_name": "Subject"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "radio.radio_program_episode.subjects",
                    "friendly_name": "Subjects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program . \nVALUES ?x1 { :en.english } \n?x2 :type.object.type :radio.radio_subject . \nVALUES ?x3 { :m.05v48n2 } \n?x0 :broadcast.content.language ?x1 . \n?x0 :radio.radio_program.subjects ?x2 . \n?x3 :radio.radio_program_episode.subjects ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 249000200,
        "question": "which golf course designed by jack nicklaus in 2003 has the highest score for par?",
        "answer": [
            "The Sagamore Golf Course",
            "Longview Golf Course",
            "Bull Golf Course"
        ],
        "function": "argmax",
        "commonness": -36.10002195245568,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.golf_course",
                    "class": "sports.golf_course",
                    "friendly_name": "Golf Course",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.jack_nicklaus",
                    "class": "sports.golf_course_designer",
                    "friendly_name": "Jack Nicklaus",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "2003^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "2003",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.golf_course_designer.golf_courses",
                    "friendly_name": "Golf Courses Designed"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "sports.golf_course.year_built",
                    "friendly_name": "Year Built"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.golf_course.par",
                    "friendly_name": "Par"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.golf_course . \nVALUES ?x1 { :en.jack_nicklaus } \nVALUES ?x2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :sports.golf_course . \nVALUES ?y1 { :en.jack_nicklaus } \nVALUES ?y2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?y1 :sports.golf_course_designer.golf_courses ?y0 . \n?y0 :sports.golf_course.year_built ?y2 . \n?y0 :sports.golf_course.par ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :sports.golf_course_designer.golf_courses ?x0 . \n?x0 :sports.golf_course.year_built ?x2 . \n?x0 :sports.golf_course.par ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 109000100,
        "question": "search for venues with a minimum seating capacity of 1417.",
        "answer": [
            "Estádio do Bessa",
            "Buck Shaw Stadium",
            "Spartan Stadium",
            "St. Augustine Amphitheatre",
            "Maples Pavilion",
            "Cow Palace",
            "Gerald J. Ford Stadium",
            "Pacific Coliseum",
            "Goodman Stadium",
            "Hartwall Areena",
            "Chester Fritz Auditorium",
            "Riviera Theatre",
            "Auburn Arena",
            "Palais des Sports",
            "Saitama Super Arena",
            "Uptown Theater",
            "Ewood Park",
            "Convocation Center",
            "Kingfield Stadium",
            "Gachibowli Athletic Stadium",
            "Nikon at Jones Beach Theater",
            "Stadthalle Hagen",
            "Estadio José Jorge Conte",
            "Tatran Handball Arena",
            "Carlson Center",
            "Cotton Bowl",
            "Estádio da Luz",
            "Mosaic Place",
            "Lynah Rink",
            "Griffin Park",
            "Soldier Field",
            "Royal Festival Hall",
            "Orpheum Theatre",
            "Congress Theater",
            "Al-Hamadaniah Stadium",
            "Rice-Eccles Stadium",
            "Reed Arena",
            "Edward Jones Dome",
            "Sydney Entertainment Centre",
            "Roundhouse",
            "Memorial Stadium",
            "Von Braun Center",
            "Stade Sébastien Charléty",
            "Town Toyota Center",
            "Huish Park",
            "Methodist Central Hall Westminster",
            "Oracle Arena",
            "Lucas Oil Stadium",
            "Doak Field",
            "St Andrew's",
            "Symphony Hall",
            "Melbourne Multi Purpose Venue",
            "Palais Omnisports de Paris-Bercy",
            "GelreDome",
            "Camp Nou",
            "Robina Stadium",
            "Chacarita Juniors Stadium",
            "O2 Arena",
            "Aggie Stadium",
            "State Theatre",
            "Harris Theater",
            "Cam Henderson Center",
            "Her Majesty's Theatre, Melbourne",
            "Estádio José Alvalade",
            "Carter Barron Amphitheatre",
            "Estadio Alberto J. Armando",
            "Whistler Sliding Centre",
            "Curry Hicks Cage",
            "Swedbank Stadion",
            "Magness Arena",
            "Beijing National Aquatics Center",
            "LDS Conference Center",
            "Stamford Bridge",
            "Charleston Civic Center",
            "Barabati Stadium",
            "Davis Wade Stadium",
            "Rio Tinto Stadium",
            "Civic Arena",
            "1stBank Center",
            "Florence Civic Center",
            "Ottawa Auditorium",
            "Miami Arena",
            "Arena di Verona",
            "Palais Garnier",
            "Colonial Life Arena",
            "Manchester Central Convention Complex",
            "Emirates Stadium",
            "Carrier Dome",
            "Bass Performance Hall",
            "Comerica Theatre",
            "Southampton Guildhall",
            "Minute Maid Park",
            "Krannert Center for the Performing Arts",
            "Yubileyny Sports Palace",
            "New Road, Worcester",
            "CenturyLink Field",
            "Sullivan Arena",
            "Lawlor Events Center",
            "Gillette Stadium",
            "Olympic Stadium",
            "K-Rock Centre",
            "St James' Park",
            "Manchester Opera House",
            "Harvard Stadium",
            "Cambria County War Memorial Arena",
            "Sonny Lubick Field at Hughes Stadium",
            "UNF Arena",
            "Four Seasons Centre for the Performing Arts",
            "Target Center",
            "Credicard Hall",
            "Estadio Monumental Antonio Vespucio Liberti",
            "Boardwalk Hall",
            "Jordan–Hare Stadium",
            "FC Dallas Stadium",
            "Bob Carpenter Center",
            "William \"Dick\" Price Stadium",
            "Alamodome",
            "Rajamangala Stadium",
            "Motorpoint Arena Cardiff",
            "5th Avenue Theatre",
            "Don Haskins Center",
            "BI-LO Center",
            "RiverCenter for the Performing Arts",
            "Paul E. Tsongas Center at UMass Lowell",
            "Asim Ferhatović Hase Stadium",
            "Calvin Gilmore Theater",
            "Washington–Grizzly Stadium",
            "Embassy Theatre",
            "World Arena, Colorado Springs",
            "Tonhalle",
            "Phoenix Municipal Stadium",
            "Royal Bafokeng Stadium",
            "National Auditorium of Music",
            "Orpheum Theatre",
            "Hallenstadion",
            "Ed Mirvish Theatre",
            "E Werk",
            "Ottawa Civic Centre",
            "Bridgestone Arena",
            "Jeld-Wen Field",
            "Vanderbilt Stadium",
            "US Airways Center",
            "Beijing National Stadium",
            "Bud Walton Arena",
            "Stadion An der Alten Försterei",
            "Princess Theatre, Torquay",
            "OlympiaWorld Innsbruck",
            "Holy Name Cathedral, Chicago",
            "EnergyAustralia Stadium",
            "Golden Gate Theatre",
            "Edinburgh Playhouse",
            "Maverik Center",
            "KSU Convocation Center",
            "McArthur Court",
            "Ulster Performing Arts Center",
            "The Egg",
            "Riverbend Music Center",
            "The Valley",
            "Avery Fisher Hall",
            "Wolverhampton Civic Hall",
            "BOK Center",
            "TD Bank Garden",
            "Sun Life Stadium",
            "Drayton McLane Baseball Stadium at John H. Kobs Field",
            "William D. Mullins Memorial Center",
            "Marriott Center",
            "Target Field",
            "INB Performing Arts Center",
            "Save-On-Foods Memorial Centre",
            "New Theatre Oxford",
            "Germain Arena",
            "Boston Opera House",
            "JQH Arena",
            "Benjamin and Marian Schuster Performing Arts Center",
            "Winthrop Coliseum",
            "Lord's Cricket Ground",
            "DCU Center",
            "Toyota Park",
            "Niaz Stadium",
            "Nassau Veterans Memorial Coliseum",
            "Chicago Stadium",
            "Sandia Resort and Casino",
            "Pauley Pavilion",
            "Frederiksberghallen",
            "Anfield",
            "Sleep Train Amphitheatre",
            "Ashton Gate Stadium",
            "Percival Molson Memorial Stadium",
            "Quicken Loans Arena",
            "Angel Stadium of Anaheim",
            "The Broadway Theatre",
            "Raleigh Convention Center",
            "Hokkaido Prefectural Sports Center",
            "Wembley Arena",
            "Maple Leaf Gardens",
            "Soldiers and Sailors Memorial Auditorium",
            "Docklands Stadium",
            "Fatorda Stadium",
            "Bowers Stadium",
            "War Memorial Stadium",
            "Expo Square Pavilion",
            "Palais Theatre",
            "Brighton Centre",
            "Rose Bowl",
            "Nationwide Arena",
            "High Point Solutions Stadium",
            "Gold Coast Convention and Exhibition Centre",
            "Gigg Lane",
            "KeyArena",
            "Zénith d'Orléans",
            "The Concert Hall in Aarhus",
            "Stadio Olimpico",
            "Neyland Stadium",
            "Atletion",
            "Salem Civic Center",
            "Petersen Events Center",
            "Warner Theatre",
            "ShoWare Center",
            "USF Sun Dome",
            "Gayfield Park",
            "Cowboys Stadium",
            "Toyota Stadium",
            "Tokyo Dome City",
            "Rhein-Neckar Arena",
            "Bushnell Center for the Performing Arts",
            "Mage Solar Stadion",
            "Yankee Stadium",
            "Western Hall",
            "Estadio Marcelo Bielsa",
            "Giants Stadium",
            "Creighton Orpheum Theater",
            "Roxy Theatre",
            "Colston Hall",
            "San Siro Stadium",
            "Estadio de La Cartuja",
            "Városi Sportcsarnok",
            "National Hockey Stadium",
            "Lyric Theatre, Sydney",
            "Capitol Theatre, Sydney",
            "Three Rivers Stadium",
            "Gershwin Theatre",
            "WVU Coliseum",
            "Thomas Wolfe Auditorium",
            "Ferguson Center for the Arts",
            "Georgia Dome",
            "Odyssey Arena",
            "Mile High Stadium",
            "California Memorial Stadium",
            "Tulalip Resort Casino",
            "Durham Bulls Athletic Park",
            "Rose Garden",
            "AWD-Arena",
            "Craven Cottage",
            "El Paso County Coliseum",
            "Estadi Ciutat de València",
            "Wicomico Youth and Civic Center",
            "The Louisville Palace",
            "U.S. Cellular Field",
            "Miami Beach Convention Center",
            "Tokyo Dome",
            "Alaska Airlines Arena at Hec Edmundson Pavilion",
            "David A. Straz Jr. Center for the Performing Arts",
            "Brisbane Entertainment Centre",
            "Floyd Casey Stadium",
            "Value City Arena at the Jerome Schottenstein Center",
            "Princeton University Stadium",
            "Memorial Stadium",
            "Safeco Field",
            "Tad Smith Coliseum",
            "Hyde Park Picture House, Leeds",
            "Bill Snyder Family Football Stadium",
            "TD Ameritrade Park Omaha",
            "Fenway Park",
            "Memorial Stadium",
            "Mackay Stadium",
            "Deltaplex Arena & Conference Center",
            "Vaught–Hemingway Stadium",
            "Comerica Park",
            "CFSB Center",
            "Subiaco Oval",
            "Centre Court",
            "AT&T Performing Arts Center",
            "Mahalia Jackson Theater of the Performing Arts",
            "Sears Centre Arena",
            "Reitz Arena",
            "Regent Theatre",
            "Alabama Theatre",
            "MDCC-Arena",
            "The Fillmore Detroit",
            "Bronco Stadium",
            "Elliott Hall of Music",
            "Hofburg Palace",
            "Rittal Arena Wetzlar",
            "Bridgeforth Stadium and Zane Showker Field",
            "Budweiser Gardens",
            "BJK İnönü Stadium",
            "The Shay",
            "Cliffs Pavilion",
            "BMO Harris Bradley Center",
            "Liverpool Empire Theatre",
            "Qualcomm Stadium",
            "Cypress Mountain Ski Area",
            "Allianz Stadium",
            "Arrowhead Stadium",
            "Comédie-Française",
            "Benteler Arena",
            "Arsenal Stadium",
            "Estadio Tetelo Vargas",
            "Gaiety Theatre, Dublin",
            "Eintracht-Stadion",
            "Peace and Friendship Stadium",
            "Dee Events Center",
            "Swayze Field",
            "New Jersey Performing Arts Center",
            "Venue Cymru",
            "Auditorium Parco della Musica",
            "Ordway Center for the Performing Arts",
            "The Coronet",
            "HoHoKam Stadium",
            "Duluth Entertainment Convention Center",
            "Bobby Dodd Stadium",
            "The Palace of Auburn Hills",
            "Utica Memorial Auditorium",
            "Al Hirschfeld Theatre",
            "Cheltenham Racecourse",
            "BB&T Center",
            "Donald L. Tucker Center",
            "Los Angeles Memorial Coliseum",
            "Wang Theatre",
            "Miller Park",
            "New Orleans Arena",
            "Taco Bell Arena",
            "Academy of Music",
            "Abe Lenstra Stadion",
            "Beacon Theatre, New York",
            "UIC Pavilion",
            "Rimrock Auto Arena at MetraPark",
            "John E. Worthen Arena",
            "Pepsi Center",
            "Camille Chamoun Sports City Stadium",
            "Ikast-Brande Arena",
            "Doak Campbell Stadium",
            "Stadio San Paolo",
            "Reliant Astrodome",
            "Oslo Opera House",
            "Anoeta Stadium",
            "Westfalenstadion",
            "Honda Center",
            "HK Arena",
            "Zénith de Strasbourg",
            "Fox Theatre",
            "Cardiff Arena",
            "Ussishkin",
            "TipsArena",
            "Sleuyter Arena",
            "Futurist Theatre",
            "Amway Center",
            "Fox Theatre",
            "Oslo Spektrum",
            "Alfond Arena",
            "Hilton Coliseum",
            "Gallagher-Iba Arena",
            "McMahon Stadium",
            "Goodison Park",
            "Soccer City",
            "Daytona International Speedway",
            "The Times Union Center",
            "Conte Forum",
            "Coors Events Center",
            "Crisler Center",
            "Singapore Indoor Stadium",
            "Memorial Stadium, Clemson",
            "Tilles Center for the Performing Arts",
            "Busch Stadium",
            "MaxiparkArena",
            "Kyle Field",
            "Goss Stadium at Coleman Field",
            "National Concert Hall, Dublin",
            "National Arts Centre, Ottawa",
            "Broward Center for the Performing Arts",
            "Orleans Arena",
            "The Centre",
            "Suncorp Stadium",
            "Galen Center",
            "Coronado Performing Arts Center",
            "Event Center Arena",
            "Oakdale Theatre",
            "Hollywood Bowl",
            "AT&T Park",
            "Kombank Arena",
            "Veterans Memorial Auditorium",
            "Tacoma Dome",
            "Legion Field",
            "War Memorial Auditorium",
            "Tampa Stadium",
            "Charles E. Smith Athletic Center",
            "Eden Gardens",
            "Shakespeare's Globe",
            "Underhill Stadium",
            "Grand Ole Opry",
            "Heinz Field",
            "Kiel Auditorium",
            "Alerus Center",
            "Durham Performing Arts Center",
            "Norva Theatre",
            "Morton H. Meyerson Symphony Center, Dallas",
            "Holt Arena",
            "Central Park, Cowdenbeath",
            "Fillmore Auditorium",
            "Pabellón Polideportivo Artaleku",
            "Spokane Veterans Memorial Arena",
            "Manchester Arena",
            "Robertson Stadium",
            "Melching Field at Conrad Park",
            "Råsunda Stadium",
            "Estadio Nuevo José Zorrilla",
            "Lane Stadium",
            "Alexandra Palace",
            "Freedom Hall",
            "Stadio Giovanni Zini",
            "Veterans Stadium",
            "East Fremantle Oval",
            "Lotto Arena",
            "Valley View Casino Center",
            "Redbird Arena",
            "Sanford Center",
            "WesBanco Arena",
            "U.S. Cellular Center",
            "Stadio Renato Curi",
            "National Aquatic Centre",
            "Philips Stadion",
            "Kingsmeadow",
            "Michigan Stadium",
            "Estádio Olímpico João Havelange",
            "Estadio Riazor",
            "Tennessee Theatre",
            "Estadio Nuevo Los Cármenes",
            "Stadio Renato Dall'Ara",
            "Coleman Coliseum",
            "Bahrain National Stadium",
            "Somerset Park",
            "Nutter Center",
            "Abbotsford Entertainment & Sports Centre",
            "Brown Stadium",
            "Cadillac Palace Theatre",
            "Adriatic Arena",
            "Chase Field",
            "Kitchener Memorial Auditorium",
            "Carter–Finley Stadium",
            "Campo de Fútbol de Vallecas",
            "Mitsubishi Electric Halle",
            "Faurot Field",
            "Verizon Theatre at Grand Prairie",
            "Olympic Stadium",
            "Amon G. Carter Stadium",
            "Rose Bowl",
            "Gaylord Family Oklahoma Memorial Stadium",
            "Sawyer Center",
            "Saint Paul RiverCentre",
            "Osaka Dome",
            "Kitchener Memorial Auditorium Complex",
            "Shanghai Stadium",
            "Motorpoint Arena Sheffield",
            "Estadio Racing Club",
            "Nippert Stadium",
            "Wrigley Field",
            "PalaLottomatica",
            "State Theatre",
            "Scheels Arena",
            "Shea Stadium",
            "Pennsylvania Convention Center",
            "Gibson Amphitheatre",
            "Capitol Theatre",
            "Credit Union Centre",
            "Richmond Coliseum",
            "Proctors",
            "New World Stages",
            "Donald W. Reynolds Razorback Stadium",
            "Riverside Stadium",
            "Rhodes Stadium",
            "Community Arts Center",
            "Vines Center",
            "Chavez Theatre",
            "Ericsson Globe",
            "Schermerhorn Symphony Center",
            "Estadio Fortunato Bonelli",
            "Canad Inns Stadium",
            "Birmingham–Jefferson Convention Complex",
            "Lloyd Noble Center",
            "American Music Theatre",
            "Barclays Center",
            "Lake Elsinore Diamond",
            "Old Trafford",
            "Kungliga tennishallen",
            "Miller Outdoor Theatre",
            "Memorial Stadium, Lincoln",
            "Lambeau Field",
            "Vancouver Forum",
            "The Oval",
            "Hillsborough Stadium",
            "Rabobank Arena",
            "Neil Simon Theatre",
            "GCS Ballpark",
            "Lakewood Church Central Campus",
            "Mile One Centre",
            "North Shore Music Theatre",
            "Ems-Hölle",
            "Tampa Bay Times Forum",
            "Gill Coliseum",
            "The Bell Auditorium",
            "Candlestick Park",
            "MacInnes Student Ice Arena",
            "King's Theatre, Glasgow",
            "Nationals Park",
            "Richard E. Berry Educational Support Center",
            "Whistler Olympic Park",
            "Beaver Stadium",
            "KFC Yum! Center",
            "Montgomery Performing Arts Centre",
            "Robinson Center, Little Rock",
            "American Airlines Center",
            "Louis Brown Athletic Center",
            "King Power Stadium",
            "Yale Bowl",
            "Bondi Beach",
            "Old Trafford Cricket Ground",
            "Rogers Arena",
            "Bright House Networks Stadium",
            "National Ice Centre",
            "Sun Devil Stadium",
            "Saban Theatre",
            "Citizens Business Bank Arena",
            "Ford Center",
            "Autzen Stadium",
            "Fox Theater",
            "New York Hippodrome",
            "Alpine Valley Music Theatre",
            "Newcastle Entertainment Centre",
            "Gachibowli Indoor Stadium",
            "Cícero Pompeu de Toledo Stadium",
            "Admiralspalast",
            "Van Andel Arena",
            "Red Rocks Amphitheatre",
            "Viejas Arena",
            "Ralph Engelstad Arena",
            "Aggie Stadium",
            "Glücksgas Stadium",
            "Chrysler Hall",
            "Zenith Arena",
            "Gaillard Municipal Auditorium",
            "Save Mart Center",
            "Al-Aqsa Mosque",
            "Long Beach Convention and Entertainment Center",
            "Penydarren Park",
            "Toyota Center",
            "Jon M. Huntsman Center",
            "The Bank of Kentucky Center",
            "The O2",
            "Whittemore Center",
            "McDiarmid Park",
            "Beijing National Aquatics Center",
            "Popejoy Hall",
            "Churchill Downs",
            "Sacramento Convention Center Complex",
            "Sudbury Community Arena",
            "Gigantium",
            "Veterans Memorial Coliseum",
            "Bellerive Oval",
            "Kezar Stadium",
            "Westpac Stadium",
            "Newcastle City Hall",
            "Salvus-Stadion am Grevener Damm",
            "Melbourne Cricket Ground",
            "Paramount Theatre",
            "Allen County War Memorial Coliseum",
            "Dow Event Center",
            "AT&T Center",
            "Ohio Stadium",
            "Comcast Arena",
            "Cintas Center",
            "Prudential Center",
            "Stadium of Light",
            "Turner Field",
            "Landmark Theatre",
            "Palladium Ballroom",
            "König Pilsener Arena",
            "Stadium Australia",
            "Summum",
            "Giant Center",
            "Regent Theatre",
            "Ellis Park Stadium",
            "Astana Arena",
            "Foreman Field",
            "Cricket Wireless Amphitheatre",
            "Oakland-Alameda County Coliseum",
            "Wiener Stadthalle Hall D",
            "Williams-Brice Stadium",
            "O'Connell Center",
            "Stadio delle Alpi",
            "Adelphi Theatre",
            "Cumberland County Civic Center",
            "Love Street",
            "Jazz at Lincoln Center",
            "Joe Louis Arena",
            "Boleyn Ground",
            "Sun Bowl Stadium",
            "Liberty Bowl Memorial Stadium",
            "Michie Stadium",
            "Orange County Convention Center",
            "Hill 16",
            "Prince Edward Theatre",
            "Radio City Music Hall",
            "Apollo Victoria Theatre",
            "Braly Municipal Stadium",
            "Welsh-Ryan Arena",
            "Majestic Theatre",
            "Carnie Smith Stadium",
            "Commerzbank-Arena",
            "Le Grand Rex",
            "Moncton Coliseum",
            "Hampden Park",
            "Richmond Olympic Oval",
            "Stroh Center",
            "Morris Performing Arts Center",
            "Hofheinz Pavilion",
            "RCA Dome",
            "Edgbaston Cricket Ground",
            "Fox Theater Pomona",
            "Ross–Ade Stadium",
            "Tampereen jäähalli",
            "Miami Orange Bowl",
            "First Arena",
            "Theodoros Kolokotronis Stadium",
            "Broome County Veterans Memorial Arena",
            "Qemal Stafa Stadium",
            "Denver Coliseum",
            "Martin Stadium",
            "Carrara Stadium",
            "Best Buy Theater",
            "Falkirk Stadium",
            "Cheney Stadium",
            "Stadio Antonio Bianco",
            "Stadio Artemio Franchi – Montepaschi Arena",
            "Peoria Civic Center",
            "Ralph Wilson Stadium",
            "Marlins Park",
            "Fargodome",
            "Preußenstadion",
            "Koning Willem II Stadion",
            "Stade de Gerland",
            "Darrell K Royal–Texas Memorial Stadium",
            "FedExField",
            "Nelson Mandela Bay Stadium",
            "The Time Warner Cable Arena",
            "Congress Theatre",
            "Consol Energy Center",
            "Great American Ball Park",
            "Kenan Memorial Stadium",
            "Folsom Field",
            "Winnipeg Arena",
            "Ryan Field",
            "Stadion Oberwerth",
            "Keller Auditorium",
            "Spiroudome",
            "Shea's Performing Arts Center",
            "BayArena",
            "Byrd Stadium",
            "Los Angeles Theatre",
            "WACA Ground",
            "Fife Ice Arena",
            "Petco Park",
            "Doug Mitchell Thunderbird Sports Centre",
            "Vicarage Road",
            "M&T Bank Stadium",
            "Haas Pavilion",
            "Stade Auguste Bonal",
            "Mountaineer Field at Milan Puskar Stadium",
            "Resch Center",
            "Gersten Pavilion",
            "American Airlines Arena",
            "Allianz Arena",
            "Columbiahalle",
            "El Sadar Stadium",
            "Stabler Arena",
            "Dolby Theatre",
            "Verizon Wireless Amphitheater",
            "Lincoln Financial Field",
            "Parc des Sports",
            "Estadio De Béisbol Héctor Espino",
            "The Elgin Theatre",
            "Dunkin' Donuts Center",
            "Estadio Julio Humberto Grondona",
            "Stranahan Theater",
            "Centennial Stadium",
            "Cleveland Stadium",
            "U.S. Bank Arena",
            "San Diego Civic Theatre",
            "AWD Hall",
            "Kidd Brewer Stadium",
            "Stade de France",
            "De Doelen",
            "North Charleston Coliseum",
            "Comcast Center",
            "Surprise Stadium",
            "White Hart Lane",
            "Copps Coliseum",
            "National Theatre",
            "Stockton Arena",
            "Arena Theatre",
            "Memorial Gymnasium",
            "Capitol Theatre",
            "Pete Maravich Assembly Center",
            "Stadio Alberto Braglia",
            "Metro Radio Arena",
            "HMV Forum",
            "Rugby Park",
            "Arlene Schnitzer Concert Hall, Portland",
            "Reno Events Center",
            "United Spirit Arena",
            "Sleep Train Arena",
            "Ivor Wynne Stadium",
            "Memorial Stadium",
            "Grand Olympic Auditorium",
            "Maverick Baseball Stadium",
            "Munn Ice Arena",
            "Spartak Stadium",
            "Palacio Vistalegre",
            "Donau Arena",
            "Sydney Cricket Ground",
            "Riverfront Stadium",
            "The Gabba",
            "Eisstadion Weißwasser",
            "Gatorade Garden City Complex",
            "Ricoh Arena",
            "Sam Boyd Stadium",
            "Palau Sant Jordi",
            "Bill Graham Civic Auditorium",
            "Estadio Universitario",
            "Star Plaza Theatre",
            "Olsen Field at Blue Bell Park",
            "War Memorial Stadium",
            "Putra Indoor Stadium",
            "Pioneer Center for the Performing Arts",
            "Palace Theatre, Manchester",
            "The Lighthouse",
            "Phoenix Symphony Hall",
            "Spreckels Theater",
            "Veltins-Arena",
            "Reliant Stadium",
            "Huntington Avenue Grounds",
            "Cobo Center",
            "Auditorium-Orchestre National de Lyon",
            "Harry A. Gampel Pavilion",
            "Roberts Municipal Stadium",
            "FirstEnergy Stadium",
            "Jorgensen Center for the Performing Arts",
            "Stadio Artemio Franchi",
            "New Wimbledon Theatre",
            "Camelback Ranch",
            "Edmund P. Joyce Center",
            "Amman International Stadium",
            "Comanche County Fairgrounds",
            "Apollo Theater",
            "Scotiabank Place",
            "Luis Conde Arena",
            "Fifth Third Arena",
            "Rentschler Field",
            "Tuacahn",
            "Thompson–Boling Arena",
            "Estadio Olímpico Andrés Quintana Roo",
            "Palace Theatre",
            "Arena at Gwinnett Center",
            "Fir Park",
            "Fisher Field",
            "Romney Stadium",
            "Morrison Center",
            "Foxboro Stadium",
            "Wankhede Stadium",
            "Olympic Stadium Munich",
            "Saoud bin Abdulrahman Stadium",
            "Hearst Greek Theatre",
            "D.C. Armory",
            "The Den",
            "Teatro dell'Opera di Roma",
            "First Niagara Center",
            "Lyceum Theatre",
            "Huntington Center",
            "HP Pavilion at San Jose",
            "Olympia Ice Center",
            "Ebbets Field",
            "Crystal Cathedral",
            "Johnny Unitas Stadium",
            "Sullivan Athletic Center",
            "Volkswagen Arena",
            "ENMAX Centre",
            "Flens-Arena",
            "Marina Civic Center",
            "Amsterdam Arena",
            "Jim Patterson Stadium",
            "Bobcat Stadium",
            "Forrest Theatre",
            "Daniel–Meyer Coliseum",
            "Metalist Oblast Sports Complex",
            "Air Canada Centre",
            "McKenzie Arena",
            "Verizon Arena",
            "Pensacola Civic Center",
            "Laredo Energy Arena",
            "Five Flags Center",
            "Palladium Theater",
            "Lander's Center",
            "Stade Francis-Le Blé",
            "Wellmont Theatre",
            "Cole Field House",
            "Regent Theatre, Melbourne",
            "Wolstein Center",
            "Polideportivo Islas Malvinas",
            "LaVell Edwards Stadium",
            "Festival Hall",
            "Millennium Stadium",
            "Victoria Hall, Hanley",
            "Tynecastle Stadium",
            "Lanxess Arena",
            "Foxwoods Theatre",
            "University of Dayton Arena",
            "EnergySolutions Arena",
            "Stadthalle Graz",
            "Citi Field",
            "BB&T Field",
            "San Jose Center For The Performing Arts",
            "Hammerstein Ballroom",
            "Peabody Opera House",
            "Weserstadion",
            "Scott Stadium",
            "Nuremberg Arena",
            "London Velopark",
            "Auditorio Telmex",
            "Savannah Civic Center",
            "Texas Stadium",
            "Tiger Stadium",
            "Calihan Hall",
            "Charles C. Hughes Stadium",
            "Coface Arena",
            "Aviva Stadium",
            "Matthews Arena",
            "Alex Box Stadium/Skip Bertman Field",
            "Loftus Road",
            "Stadium Municipal",
            "Madejski Stadium",
            "Oriole Park at Camden Yards",
            "Liberty Bank Stadium",
            "Mosaic Stadium at Taylor Field",
            "The Muny",
            "Allen Fieldhouse",
            "Santiago Bernabéu Stadium",
            "Moody Coliseum",
            "Murrayfield Ice Rink",
            "Britannia Stadium",
            "Wells Fargo Center",
            "Dominion Theatre",
            "Usher Hall, Edinburgh",
            "Volleyball Sportiv Complex",
            "FedExForum",
            "Green Point Stadium",
            "ABB Arena Syd",
            "Frankfurter Volksbank Stadion",
            "Olympic Stadium",
            "United Palace Theater",
            "Williams Arena",
            "Harbour Station",
            "Yokohama Arena",
            "Velodrom",
            "Durham County Stadium",
            "Juventus Stadium",
            "Bell Centre",
            "Izod Center",
            "Stanford Stadium",
            "Sprint Center",
            "Kay Bailey Hutchison Convention Center",
            "Dodger Stadium",
            "Orpheum Theatre",
            "Minskoff Theatre",
            "Princess Theatre, Melbourne",
            "Pavilion Theatre",
            "PNC Park",
            "Pellissier Building and Wiltern Theatre",
            "Nelson W. Wolff Municipal Stadium",
            "Bord Gáis Energy Theatre",
            "Tucson Convention Center",
            "Canberra Stadium",
            "Carver–Hawkeye Arena",
            "Mercedes-Benz Superdome",
            "Deva Stadium",
            "Massey Hall",
            "Hard Rock Hotel and Casino",
            "PNC Arena",
            "Portsmouth Guildhall",
            "Alumni Stadium",
            "Capitol Theatre",
            "Sanford Stadium",
            "The Lowry",
            "Wortham Theater Center",
            "Verizon Center",
            "Tiger Stadium",
            "Ted Constant Convocation Center",
            "Teatro Colón, Buenos Aires",
            "Peter Mokaba Stadium",
            "University at Buffalo Stadium",
            "Municipal Auditorium",
            "Knoxville Civic Auditorium and Coliseum",
            "Thani bin Jassim Stadium",
            "The Centre In Vancouver for Performing Arts",
            "Taft Theatre",
            "Mestalla Stadium",
            "Thebarton Theatre",
            "Grand Theatre, Leeds",
            "Stade du Moustoir",
            "Türk Telekom Arena",
            "Vicente Calderón Stadium",
            "Swedbank Park",
            "Scandinavium",
            "Cameron Indoor Stadium",
            "Firhill Stadium",
            "Ottawa Convention Centre",
            "Kinnick Stadium",
            "Bethel Woods Center for the Arts",
            "John F. Kennedy Stadium",
            "Uptown Theatre",
            "Tyson Events Center",
            "Wings Stadium",
            "Ralph Engelstad Arena",
            "Liberty Stadium",
            "Hershey Centre",
            "Cobb Energy Performing Arts Centre",
            "Hult Center for the Performing Arts",
            "Alamo Stadium",
            "Goggin Ice Arena",
            "BMO Field",
            "University of Phoenix Stadium",
            "Olympia Bruno Coquatrix",
            "Estadio Cubierto Newell's Old Boys",
            "Redondo Beach Performing Arts Center",
            "Columbus Civic Center",
            "Commonwealth Stadium",
            "Mohegan Sun Arena at Casey Plaza",
            "Comcast Center",
            "Auditorio Banamex",
            "EverBank Field",
            "Cajundome",
            "Scotiabank Saddledome",
            "Glens Falls Civic Center",
            "Citizens Bank Park",
            "Stade Geoffroy-Guichard",
            "Hanover Theatre for the Performing Arts",
            "Waldo Stadium",
            "CenturyLink Center Omaha",
            "Stade de la Route de Lorient",
            "CenturyLink Center",
            "Go Dau Stadium",
            "Moses Mabhida Stadium",
            "Toyota Center",
            "Hampton Convocation Center",
            "EWE Arena",
            "The Hawthorns",
            "Hammersmith Palais",
            "Iberostar Stadium",
            "The Pit",
            "Grugahalle",
            "Cowtown Coliseum",
            "MassMutual Center",
            "Joseph P. Riley, Jr. Park",
            "Hanns-Martin-Schleyer-Halle",
            "Palace Theatre, Melbourne",
            "Arizona Stadium",
            "Prospera Place",
            "E. A. Diddle Arena",
            "Mohegan Sun Arena",
            "BMO Harris Bank Center",
            "Echo Arena Liverpool",
            "Adelaide Oval",
            "Millerntor-Stadion",
            "Ninian Park",
            "Royal Theatre Carré",
            "Budweiser Events Center",
            "XL Center",
            "Hubert H. Humphrey Metrodome",
            "Canton Memorial Civic Center",
            "Knapp Center",
            "Mayo Civic Center",
            "Allstate Arena",
            "Stade Vélodrome",
            "Víctor Jara Stadium",
            "Philips Arena",
            "Fox Theatre",
            "Saratoga Performing Arts Center",
            "Victoria Theatre",
            "Big Sandy Superstore Arena",
            "Sioux Falls Arena",
            "KC Stadium",
            "Elland Road",
            "Roy Wilkins Auditorium",
            "Stockholm Olympic Stadium",
            "Bristol Hippodrome",
            "Shotwell Stadium",
            "Bob Devaney Sports Center",
            "Verizon Wireless Arena",
            "PNC Bank Arts Center",
            "Jenny Craig Pavilion",
            "Columbus Crew Stadium",
            "Peterborough Memorial Centre",
            "Beethovenhalle",
            "Bangalore Football Stadium",
            "New I-Mobile Stadium",
            "Boone Pickens Stadium",
            "The Joint",
            "Warner Theatre",
            "AFAS Stadion",
            "Birmingham Hippodrome",
            "Scottrade Center",
            "National Auditorium",
            "Charline McCombs Empire Theatre",
            "Empire, Leicester Square",
            "Pauley Pavilion",
            "Busch Memorial Stadium",
            "Symphony Hall, Birmingham",
            "Rupp Arena",
            "Wales Millennium Centre",
            "Ullevi",
            "Marina Bay Sands",
            "Croke Park",
            "Anaheim Convention Center",
            "Mackey Arena",
            "Yankee Stadium",
            "Luna Park, Buenos Aires",
            "Seminole Hard Rock Hotel and Casino Hollywood",
            "Notre Dame Stadium",
            "State Theatre",
            "Ahmanson Theatre",
            "Nokia Theatre L.A. Live",
            "PPL Park",
            "Show Me Center",
            "Vienna State Opera",
            "Verizon Wireless Amphitheatre",
            "Marin County Civic Center",
            "Winspear Opera House, Dallas",
            "Theatre Royal, Glasgow",
            "Frost Arena",
            "Bloomfield Road",
            "Andrew Jackson Hall",
            "Paul Brown Stadium",
            "Celebrity Theatre",
            "Rogers Centre",
            "Palestra",
            "Lipperlandhalle",
            "Liacouras Center",
            "Eriksdalshallen",
            "SIU Arena",
            "James A. Rhodes Arena",
            "Edinburgh Festival Theatre",
            "Yakima SunDome",
            "Boston Garden",
            "Marquis Theatre",
            "Rialto Square Theatre",
            "Cassell Coliseum",
            "Agora Theatre and Ballroom",
            "Matthew Knight Arena",
            "Kimmel Arena",
            "Easter Road",
            "Independence Stadium",
            "Javelina Stadium",
            "Osceola County Stadium",
            "Aronoff Center",
            "Braehead Arena",
            "Centennial Concert Hall, Winnipeg",
            "Hancock Stadium",
            "Shoreline Amphitheatre",
            "Ajinomoto Stadium",
            "Bramall Lane",
            "Papa John's Cardinal Stadium",
            "Estádio do Pacaembu",
            "Peabody Auditorium",
            "Estadio Ciudad de Santiago del Estero",
            "Estadio Benito Villamarín",
            "General Motors Centre",
            "Robert F. Kennedy Memorial Stadium",
            "O2 World",
            "Pittodrie Stadium",
            "Maui Arts & Cultural Center",
            "Stanley Park Stadium",
            "Hill Auditorium",
            "O2 Academy Glasgow",
            "Stadion der Freundschaft",
            "Minneapolis Convention Center",
            "Louise M. Davies Symphony Hall",
            "Ladd Peebles Stadium",
            "Teatro Real, Madrid",
            "Susquehanna Bank Center",
            "Orpheum Theatre",
            "Lawrence Joel Veterans Memorial Coliseum",
            "Eastman Theatre",
            "U.S. Cellular Coliseum",
            "Agganis Arena",
            "Tulane Stadium",
            "ARCO Arena I",
            "Achilles Rink",
            "Riverside Theater",
            "Lakefront Arena",
            "Ford Field",
            "Barrie Molson Centre",
            "Royal Melbourne Showgrounds",
            "O2 Academy Liverpool",
            "City National Grove of Anaheim",
            "Western Springs Stadium",
            "Rangers Ballpark in Arlington",
            "Rice Stadium",
            "National Indoor Arena",
            "Cynthia Woods Mitchell Pavilion",
            "Eastern Kentucky Expo Center",
            "Chicago Theatre",
            "Cajun Field",
            "Headingley Stadium",
            "Mediolanum Forum",
            "Cruzan Amphitheatre",
            "Charlotte Coliseum",
            "Estadio Azteca",
            "Sheikh Khalifa International Stadium",
            "Eisarena Salzburg",
            "Curb Event Center",
            "Wembley Stadium",
            "Skelly Field at H. A. Chapman Stadium",
            "Aloha Stadium",
            "Akoo Theatre at Rosemont",
            "Breslin Student Events Center",
            "Kölner Philharmonie",
            "Winter Gardens, Blackpool",
            "Stade Armand Cesari",
            "Sadler's Wells Theatre",
            "Norfolk Scope Arena",
            "Alex G. Spanos Center",
            "Pitt Stadium",
            "Stade du Hameau",
            "The Orbit Room",
            "Kelly/Shorts Stadium",
            "Cape Town Stadium",
            "Mid-America Center",
            "U.S. Cellular Arena",
            "De Grolsch Veste",
            "Stadio Olimpico di Torino",
            "Perth Concert Hall",
            "Vector Arena",
            "Royal Opera House, London",
            "Sunderland Empire Theatre",
            "Smith Center for the Performing Arts",
            "Jalan Besar Stadium",
            "Jobing.com Arena",
            "Old National Centre",
            "TD Waterhouse Stadium",
            "Metropolitan Opera House",
            "Palau d'Esports de Granollers",
            "Tropicana Field",
            "City of Manchester Stadium",
            "Franklin Field",
            "Twickenham Stadium",
            "The Pavilion",
            "Lawson Arena",
            "Ice Palace \"Ural Lightning\"",
            "Max-Schmeling-Halle",
            "Thomas & Mack Center",
            "Kauffman Center for the Performing Arts",
            "Cumberland County Crown Coliseum",
            "Tad Gormley Stadium",
            "Consol Energy Center",
            "Dowdy–Ficklen Stadium",
            "Pharr International Convention Center",
            "Allphones Arena",
            "Dom Sportova",
            "Hinkle Fieldhouse",
            "Estadio José María Bértora",
            "State Farm Center",
            "John Paul Jones Arena",
            "Pantages Theatre",
            "Strahan Coliseum",
            "Granada Theater",
            "Wiener Musikverein",
            "Clark–LeClair Stadium",
            "TSB Bank Arena",
            "The O2 Arena",
            "La Romareda",
            "Lunt-Fontanne Theatre",
            "Bryce Jordan Center",
            "Perth Arena",
            "Xcel Energy Center",
            "Mizzou Arena",
            "Principal Park",
            "Towson Center",
            "Princess of Wales Theatre",
            "Androscoggin Bank Colisée",
            "London Palladium",
            "St David's Hall",
            "Plymouth Pavilions",
            "Hampton Coliseum",
            "St. James Theatre, Wellington",
            "Estádio do Maracanã",
            "Camp Randall Stadium",
            "Queen Elizabeth Theatre",
            "Thunder Bay Community Auditorium",
            "Crystal Palace National Sports Centre",
            "Greensboro Coliseum Complex",
            "McCoy Stadium",
            "Chaifetz Arena",
            "W. L. Zorn Arena",
            "Alabama Theatre",
            "Regent Theatre, Dunedin",
            "FIU Stadium",
            "Packard Stadium",
            "Challenge Stadium",
            "The Home Depot Center",
            "The Florida Citrus Bowl Stadium",
            "Madison Square Garden",
            "Teatro alla Scala",
            "Estadio de Béisbol Monterrey",
            "Hi Corbett Field",
            "Nashville Municipal Auditorium",
            "Dean Smith Center",
            "O2 World",
            "York Park",
            "Red Star Stadium",
            "Majestic Theater",
            "Cox Convention Center",
            "Red Rock Resort Spa and Casino",
            "Bank of America Stadium",
            "Grand Lake Theater",
            "Jacksonville Veterans Memorial Arena",
            "Dvorana Mirza Delibašić",
            "Theater des Westens",
            "MGM Grand Garden Arena",
            "Salle Wilfrid-Pelletier, Montreal",
            "Brooklyn Academy of Music",
            "Shrine Auditorium",
            "State Theatre",
            "Bartow Arena",
            "Sports Ground, Woodbridge Road, Guildford",
            "BC Place",
            "Donbass Arena",
            "Sovereign Center",
            "I Wireless Center",
            "McKale Center",
            "Bojangles' Coliseum",
            "Football Park",
            "Kibbie Dome",
            "Opéra Bastille",
            "San Francisco Airport Marriott Waterfront",
            "Vikings Stadium",
            "Yost Ice Arena",
            "Le Transbordeur",
            "Baum Stadium",
            "Stuart C. Siegel Center",
            "Orpheum Theatre",
            "Reebok Stadium",
            "Arena Nova",
            "Reser Stadium",
            "Victoria Palace Theatre",
            "Bramlage Coliseum",
            "Wells Fargo Arena",
            "New Amsterdam Theatre",
            "Esprit Arena",
            "Pride Park Stadium",
            "Amway Arena",
            "Ben Hill Griffin Stadium",
            "Independence Events Center",
            "Racquet Club of Memphis",
            "Tannadice Park",
            "Teatro di San Carlo, Naples",
            "Palace Theatre",
            "Şükrü Saracoğlu Stadium",
            "Centre In The Square",
            "Staples Center",
            "Hobby Center for the Performing Arts",
            "Sports Authority Field at Mile High",
            "Brandt Centre",
            "The Arches",
            "Stade de la Mosson",
            "Owensboro Sports Center",
            "HR Commitment Arena",
            "Eden Park",
            "London Coliseum",
            "Estádio Vila Capanema",
            "Hagan Arena",
            "River Center Arena",
            "Benedum Center",
            "Zellerbach Hall",
            "Ferrell Center",
            "The Music Hall",
            "Estadi Olímpic Lluís Companys",
            "Gerry Weber Stadion",
            "Pershing Center",
            "Sun National Bank Center",
            "London Astoria",
            "Citi Performing Arts Center",
            "Chiles Center",
            "Cedar Park Center",
            "Covelli Centre",
            "Stechert Arena",
            "Kohl Center",
            "Assembly Hall",
            "Mississippi Coliseum",
            "Foro Sol",
            "Los Angeles Memorial Sports Arena",
            "Manchester Central Convention Complex",
            "Selhurst Park",
            "Meadow Park",
            "Coliseum Alfonso Pérez",
            "De Montfort Hall",
            "Balaídos",
            "Spartan Stadium",
            "Walt Disney Concert Hall",
            "Arlington Stadium",
            "Megasport Arena",
            "Loftus Versfeld Stadium",
            "Falcon Stadium",
            "Lyric Opera House",
            "Arena do Grêmio",
            "North Harbour Stadium",
            "Cannon Center-Performing Arts",
            "Theatre Royal, Drury Lane",
            "The Forum",
            "Pan American Center",
            "Pavilion Theatre",
            "Carnesecca Arena",
            "Bryant–Denny Stadium",
            "Raymond James Stadium",
            "Celtic Park",
            "MTS Centre",
            "Suheim Bin Hamad Stadium",
            "Orpheum",
            "Rexall Centre",
            "Dahlberg Arena",
            "Antarès",
            "Patriot Center",
            "Jiffy Lube Live",
            "Fratton Park",
            "Halifax Metro Centre",
            "Adler Theatre",
            "Lansdowne Road",
            "Reynolds Coliseum",
            "Molson Canadian Amphitheatre",
            "Austin Convention Center",
            "Faliro Coastal Zone Olympic Complex",
            "Kauffman Stadium",
            "TCF Bank Stadium",
            "Rec Hall",
            "Anhalt Arena",
            "Detroit Opera House",
            "The Whiting",
            "UFCU Disch–Falk Field",
            "UCF Arena",
            "Count Basie Theatre",
            "Savoy Cinema",
            "Glasgow Royal Concert Hall",
            "The Dome Leisure Centre",
            "Rexall Place",
            "Charles Koch Arena",
            "Tower Theater",
            "Coors Field",
            "Stadio Ennio Tardini",
            "FAU Stadium",
            "Kemper Arena",
            "Ibrox Stadium",
            "Allen Event Center",
            "Sleep Train Pavilion",
            "Paulson Stadium",
            "DakotaDome",
            "Marion Palace Theatre",
            "Elispace",
            "Conexus Arts Centre",
            "Roanoke Civic Center",
            "Royal Agricultural Hall",
            "Ponds Forge International Sports Centre",
            "Lahaina Civic Center",
            "New York City Center",
            "Sony Centre for the Performing Arts",
            "LP Field",
            "Stadion im. Tadeusza Ślusarskiego",
            "Salt River Fields at Talking Stick",
            "Family Arena",
            "Wallace Wade Stadium",
            "Waterfront Hall",
            "Estadio El Madrigal",
            "Lone Star Amphitheater",
            "BancorpSouth Arena",
            "Apollo Theater",
            "National Stadium, Bukit Jalil",
            "Jack Trice Stadium",
            "Esplanade - Theatres on the Bay, Singapore",
            "Mariucci Arena",
            "Red Bull Arena",
            "Blue Cross Arena",
            "Vancouver Convention Centre",
            "Heartland Events Center",
            "İzmir Atatürk Stadium",
            "Clyde Auditorium",
            "Perth Oval",
            "Viaero Event Center",
            "Stade Marcel Picot",
            "Kress Events Center",
            "Palaran Stadium",
            "Sparkassen-Erzgebirgsstadion",
            "Majestic Theatre",
            "Husky Stadium",
            "MetLife Stadium",
            "Sleeman Centre",
            "Auckland Civic Theatre",
            "Jones AT&T Stadium",
            "Winter Garden Theatre",
            "American Bank Center",
            "The Sage Gateshead",
            "Olympic Stadium",
            "Rialto Theatre",
            "László Papp Budapest Sports Arena",
            "Peden Stadium",
            "Salt Lake Stadium",
            "Concertgebouw, Amsterdam",
            "Molineux Stadium",
            "Tate Rink",
            "Smart Araneta Coliseum",
            "Twickenham Stoop",
            "Cameron Stadium",
            "Emens Auditorium, Ball State University",
            "Majestic Theatre",
            "Dale F. Halton Arena",
            "Cedar Rapids Ice Arena",
            "Ricoh Coliseum",
            "The Helix",
            "Frank Erwin Center",
            "DTE Energy Music Theatre",
            "Nya Parken",
            "Progressive Field",
            "Sydney Opera House",
            "BankUnited Center",
            "1st Mariner Arena",
            "Belmore Sports Ground",
            "Ryan Center",
            "Palais des congrès de Paris",
            "Enmore Theatre",
            "Point Theatre",
            "Littlejohn Coliseum",
            "Bankers Life Fieldhouse",
            "Washington Avenue Armory",
            "Silverdome",
            "Estádio do Dragão",
            "Medicine Hat Arena",
            "Compuware Arena",
            "Ethias Arena",
            "Robins Center",
            "Wells Fargo Arena",
            "Rod Laver Arena",
            "Kampa-Halle",
            "Intrust Bank Arena",
            "Jay Pritzker Pavilion",
            "Town Hall",
            "Dorton Arena",
            "UNI-Dome",
            "Wagner Noel Performing Arts Center",
            "Estadio Ciudad de La Plata",
            "Chesapeake Energy Arena",
            "Worthington Arena",
            "Bridgewater Hall, Manchester",
            "Villa Park",
            "Nippon Budokan",
            "East End Park",
            "Stan Sheriff Center",
            "Indiana University Auditorium",
            "Webster Bank Arena",
            "Wembley Stadium",
            "Palace Theatre",
            "United Center",
            "Commonwealth Stadium",
            "Teatro degli Arcimboldi"
        ],
        "function": ">",
        "commonness": -13.143543406313972,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "architecture.venue",
                    "class": "architecture.venue",
                    "friendly_name": "Venue",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1417^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "1417",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.venue.capacity",
                    "friendly_name": "Seating capacity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :architecture.venue . \nFILTER (?x1 > 1417)\n?x0 :architecture.venue.capacity ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 92000000,
        "question": "what are some soccer pitches available in england?",
        "answer": [
            "Wembley Stadium",
            "Wembley Stadium"
        ],
        "function": "none",
        "commonness": -8.958977424702248,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "soccer.football_pitch",
                    "class": "soccer.football_pitch",
                    "friendly_name": "Football Pitch",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.england",
                    "class": "location.location",
                    "friendly_name": "England",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "location.location.containedby",
                    "friendly_name": "Contained by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :soccer.football_pitch . \nVALUES ?x1 { :en.england } \n?x0 :location.location.containedby ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 25000300,
        "question": "where are botanical gardens located in washington, d.c.?",
        "answer": [
            "United States Botanic Garden"
        ],
        "function": "none",
        "commonness": -14.241838854470409,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.greatgardens.botanical_garden",
                    "class": "base.greatgardens.botanical_garden",
                    "friendly_name": "Botanical garden",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.washington_united_states",
                    "class": "location.location",
                    "friendly_name": "Washington, D.C.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.greatgardens.botanical_garden.location",
                    "friendly_name": "Location"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.greatgardens.botanical_garden . \nVALUES ?x1 { :en.washington_united_states } \n?x0 :base.greatgardens.botanical_garden.location ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 163000201,
        "question": "nypl includes which branches?",
        "answer": [
            "Schomburg Center for Research in Black Culture",
            "New York Public Library Main Branch"
        ],
        "function": "none",
        "commonness": -15.15155046132745,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "library.public_library",
                    "class": "library.public_library",
                    "friendly_name": "Public Library",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.new_york_public_library",
                    "class": "library.public_library_system",
                    "friendly_name": "nypl",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "library.public_library_system.branches",
                    "friendly_name": "Branch Libraries"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :library.public_library . \nVALUES ?x1 { :en.new_york_public_library } \n?x1 :library.public_library_system.branches ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 178000100,
        "question": "symphony no.9 is used as a theme song for what types of television programs?",
        "answer": [
            "Sitcom",
            "Comedy film",
            "Comedy"
        ],
        "function": "none",
        "commonness": -22.50492187100238,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "tv.tv_genre",
                    "class": "tv.tv_genre",
                    "friendly_name": "TV Genre",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "tv.tv_program",
                    "class": "tv.tv_program",
                    "friendly_name": "TV Program",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.symphony_no_9",
                    "class": "tv.tv_theme_song",
                    "friendly_name": "Symphony No.9",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.tv_program.genre",
                    "friendly_name": "Genre"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_theme_song.theme_song_for",
                    "friendly_name": "Theme Song For"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tv.tv_genre . \n?x1 :type.object.type :tv.tv_program . \nVALUES ?x2 { :en.symphony_no_9 } \n?x1 :tv.tv_program.genre ?x0 . \n?x2 :tv.tv_theme_song.theme_song_for ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 110000101,
        "question": "how many different spacecrafts has national aeronautics and space administration made?",
        "answer": [
            "2"
        ],
        "function": "count",
        "commonness": -13.42642065655897,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.spacecraft",
                    "class": "spaceflight.spacecraft",
                    "friendly_name": "Spacecraft",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.nasa",
                    "class": "spaceflight.satellite_manufacturer",
                    "friendly_name": "national aeronautics and space administration",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.satellite_manufacturer.spacecraft_manufactured",
                    "friendly_name": "Spacecraft manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.spacecraft . \nVALUES ?x1 { :en.nasa } \n?x1 :spaceflight.satellite_manufacturer.spacecraft_manufactured ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 223000100,
        "question": "batman is featured in which frank miller comic book series?",
        "answer": [
            "Batman: The Dark Knight Returns"
        ],
        "function": "none",
        "commonness": -21.89634449799579,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_series",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "Comic Book Series",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.frank_miller",
                    "class": "comic_books.comic_book_creator",
                    "friendly_name": "Frank Miller",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.batman",
                    "class": "comic_books.comic_book_character",
                    "friendly_name": "Batman",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "comic_books.comic_book_creator.series_created",
                    "friendly_name": "Series Created"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "comic_books.comic_book_series.featured_characters",
                    "friendly_name": "Featured Characters"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_series . \nVALUES ?x1 { :en.frank_miller } \nVALUES ?x2 { :en.batman } \n?x1 :comic_books.comic_book_creator.series_created ?x0 . \n?x0 :comic_books.comic_book_series.featured_characters ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 96000400,
        "question": "what venue seats the most people.",
        "answer": [
            "Daytona International Speedway"
        ],
        "function": "argmax",
        "commonness": -13.143543406313972,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "architecture.venue",
                    "class": "architecture.venue",
                    "friendly_name": "Venue",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1417^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "1417",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.venue.capacity",
                    "friendly_name": "Seating capacity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :architecture.venue . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :architecture.venue . \n?y0 :architecture.venue.capacity ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :architecture.venue.capacity ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 205000001,
        "question": "visual paradigm for uml and magicdraw uml create which documentation?",
        "answer": [
            "HTML"
        ],
        "function": "none",
        "commonness": -29.247633988326648,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.umltools.documentation_type",
                    "class": "base.umltools.documentation_type",
                    "friendly_name": "Documentation Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.visual_paradigm_for_uml",
                    "class": "base.umltools.uml_tool",
                    "friendly_name": "Visual Paradigm for UML",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.magicdraw_uml",
                    "class": "base.umltools.uml_tool",
                    "friendly_name": "magicdraw uml",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.umltools.documentation_type.tool",
                    "friendly_name": "Tool"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.umltools.documentation_type.tool",
                    "friendly_name": "Tool"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.umltools.documentation_type . \nVALUES ?x1 { :en.visual_paradigm_for_uml } \nVALUES ?x2 { :en.magicdraw_uml } \n?x0 :base.umltools.documentation_type.tool ?x1 . \n?x0 :base.umltools.documentation_type.tool ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 148000400,
        "question": "how many aviation incidents did less than 55 survivors make it through?",
        "answer": [
            "TWA Flight 800",
            "TWA Flight 128",
            "TWA Flight 903",
            "UTair Flight 471",
            "TWA Flight 277",
            "Cyprus Airways Flight 284",
            "China Southwest Airlines Flight 4509",
            "United Airlines Flight 175",
            "Royal Air Force Nimrod XV230",
            "2007 Paramount Airlines Mil Mi-8 crash",
            "Braathens SAFE Flight 239",
            "Vietnam Airlines Flight 815",
            "Holtaheia Accident",
            "Japan Airlines Flight 715",
            "British European Airways Flight 706",
            "Iraqi Airways Flight 163",
            "1977 Israeli Air Force Sikorsky CH-53 Sea Stallion crash",
            "Turkish Airlines Flight 5904",
            "Air Vietnam Flight 706",
            "Turkish Airlines Flight 278",
            "Miss Macao",
            "Lufthansa Flight 005",
            "Air China Flight 129",
            "China Northern Airlines Flight 6136",
            "LOT Flight 7",
            "2007 Mogadishu TransAVIAexport Airlines Il-76 crash",
            "Varig Airlines Flight 837",
            "United Airlines Flight 389",
            "Pakistan International Airlines Flight 631",
            "Avensa Flight 358",
            "China Southern Airlines Flight 3943",
            "PIA Flight 268",
            "Avianca Flight 410",
            "Sabena OO-AUB Ostend crash",
            "Widerøe Flight 710",
            "2010 Polish Air Force Tu-154 crash",
            "Sikorsky S-61N G-BEID crash",
            "BOAC Flight 712",
            "United Airlines Flight 823",
            "1956 Scottish Airlines Malta air disaster",
            "Divi Divi Air Flight 014",
            "Dan-Air Flight 0034",
            "Pan Am Flight 1-10",
            "Capital Airlines Flight 20",
            "Kam Air Flight 904",
            "1995 Trans Service Airlift Electra crash",
            "Los Angeles Airways Flight 841",
            "Air Rhodesia Flight 825",
            "Delta Air Lines Flight 9570",
            "Avianca Flight 203",
            "TWA Flight 513",
            "Bellview Airlines Flight 210",
            "Corporate Airlines Flight 5966",
            "Thai Airways International Flight 311",
            "Air Moorea Flight 1121",
            "Aeroflot Flight 411",
            "China Airlines Flight 206",
            "PSA Flight 182",
            "KLM Cityhopper Flight 433",
            "Turkish Airlines Flight 158",
            "Pan Am Flight 7",
            "Garuda Indonesia Flight 152",
            "United Airlines Flight 6",
            "Atlantic Southeast Airlines Flight 529",
            "Cameroon Airlines Flight 3701",
            "1972 Königs Wusterhausen air disaster",
            "2008 Spain Pilatus PC-6 crash",
            "2001 Avjet Aspen crash",
            "Santa Bárbara Airlines Flight 518",
            "China Southern Airlines Flight 3456",
            "1981 Panamanian Air Force Twin Otter crash",
            "Flying Tiger Line Flight 739",
            "1996 Air Africa crash",
            "PIA Flight 544",
            "Saudia Flight 163",
            "Aeroflot Flight 7425",
            "Iberia Airlines Flight 062",
            "United Airlines Flight 553",
            "United Airlines Flight 297",
            "Eastern Air Lines Flight 375",
            "Pan Am Flight 103",
            "2006 Falsterbo Swedish Coast Guard crash",
            "PauknAir Flight 4101",
            "2010 Romanian Air Force Antonov An-2 crash",
            "United Airlines Flight 2860",
            "Agadir air disaster",
            "Sonic Blue Airways Flight 604",
            "LOT Polish Airlines Flight 165",
            "Linjeflyg Flight 277",
            "Braniff Flight 250",
            "The Day the Music Died",
            "One-Two-GO Airlines Flight 269",
            "KLM Flight 633",
            "Pan Am Flight 845/26",
            "R101 crash",
            "Quebecair Flight 255",
            "United Airlines Trip 34",
            "2009 Indonesian Air Force C-130H Hercules crash",
            "Korean Air Flight 801",
            "2002 Khankala Mi-26 crash",
            "Pan Am Flight 217",
            "United Airlines Flight 585",
            "VASP Flight 168",
            "Comair Flight 3272",
            "China Northwest Airlines Flight 2303",
            "Varig Flight 254",
            "American Airlines Flight 625",
            "1959 Turkish Airlines Gatwick crash",
            "2008 Biggin Hill Cessna Citation crash",
            "Mohawk Airlines Flight 405",
            "Kano air disaster",
            "Ethiopian Airlines Flight 961",
            "Asian Spirit Flight 100",
            "2009 Montana Pilatus PC-12 crash",
            "Stockport air disaster",
            "Heerodden helicopter accident",
            "Northwest Orient Airlines Flight 710",
            "Northeast Airlines Flight 946",
            "Binter Mediterráneo Flight 8261",
            "China Airlines Flight 611",
            "Prinair Flight 191",
            "John F. Kennedy, Jr. plane crash",
            "Pulkovo Aviation Enterprise Flight 612",
            "Swissair Flight 111",
            "National Airlines Flight 2511",
            "Lovettsville air disaster",
            "United Airlines Flight 629",
            "Ariana Afghan Airlines Flight 202",
            "US Airways Flight 1016",
            "Trans-Canada Air Lines Flight 831",
            "EgyptAir Flight 763",
            "University of Evansville men's basketball team plane crash",
            "Flight 19",
            "Armavia Flight 967",
            "Henan Airlines Flight 8387",
            "Luxair Flight 9642",
            "1983 Avensa Douglas DC-9 crash",
            "Lufthansa CityLine Flight 5634",
            "XL Airways Germany Flight 888T",
            "Armed Forces of the Russian Federation Flight 9064",
            "Pan Am Flight 151",
            "Polar 3",
            "BOAC Flight 911",
            "Comair Flight 5191",
            "Bar Harbor Airlines Flight 1808",
            "Sosoliso Airlines Flight 1145",
            "El Al Flight 402",
            "Pan Am Flight 806",
            "Oklahoma State University men's basketball team plane crash",
            "Canadian Pacific Air Lines Flight 402",
            "Japan Airlines Flight 123",
            "West Coast Airlines Flight 956",
            "Thai Airways International Flight 261",
            "TWA Flight 3",
            "Mohawk Airlines Flight 411",
            "Braniff Flight 352",
            "Lionair Flight 602",
            "LAN Chile Flight 107",
            "Air Rhodesia Flight 827",
            "CAAC Flight 3303",
            "Siberia Airlines Flight 1812",
            "2010 Bandundu Filair Let L-410 crash",
            "Turkish Airlines Flight 452",
            "Florida Commuter Airlines crash",
            "Pan Am Flight 202",
            "1956 Trans-Canada Air Lines accident",
            "Air Florida Flight 90",
            "Dominicana DC-9 air disaster",
            "EgyptAir Flight 990",
            "1979 Turkish Airlines Ankara crash",
            "Dana Air Flight 992",
            "Spanair Flight 5022",
            "Assassination of Juvénal Habyarimana and Cyprien Ntaryamira",
            "Vladivostok Air Flight 352",
            "Kashmir Princess",
            "Mohawk Airlines Flight 121",
            "Northwest Orient Airlines Flight 2",
            "Alitalia Flight 4128",
            "Garuda Indonesia Flight 150",
            "TWA Flight 400",
            "1974 Turkish Airlines Izmir crash",
            "Civil Air Transport Flight B-908",
            "1963 BAC One-Eleven test crash",
            "Argo 16",
            "Delta Air Lines Flight 191",
            "Texas International Airlines Flight 655",
            "TWA Flight 529",
            "Malév Flight 240",
            "Cubana de Aviación Flight 455",
            "Aerosvit Flight 241",
            "PMTair Flight 241",
            "Caledonian Airways Flight 153",
            "Air Midwest Flight 5481",
            "Atlantic Southeast Airlines Flight 2311",
            "Libyan Arab Airlines Flight 114",
            "1949 Manchester DC-3 accident",
            "Agni Air Flight 101",
            "LANSA Flight 508",
            "Asiana Airlines Flight 733",
            "Surinam Airways Flight 764",
            "Atlantic Airways Flight 670",
            "Eastern Air Lines Flight 21",
            "United Airlines Flight 521",
            "SilkAir Flight 185",
            "Aeroflot Flight 418",
            "United Airlines Cheyenne Crash",
            "Asiana Airlines Flight 991",
            "Turkish Airlines Flight 634",
            "Aeroflot Flight 821",
            "National Airlines Flight 967",
            "2004 Russian aircraft bombings",
            "Northwest Airlines Flight 2",
            "Arrow Air Flight 1285",
            "1958 Central African Airways plane crash",
            "Far Eastern Air Transport Flight 103",
            "Aeroflot Flight 3352",
            "PIA Flight 705",
            "Aerocaribe Flight 7831",
            "Air Algérie Flight 6289",
            "Indian Airlines Flight 257",
            "United Airlines Flight 608",
            "Winter Hill air disaster",
            "SAETA Flight 232",
            "KLM Flight 607-E",
            "Galaxy Airlines Flight 203",
            "Southern Cloud",
            "Cambrian Airways Liverpool crash",
            "Crossair Flight 3597",
            "Kaleva",
            "1998 Ariana Afghan Airlines crash",
            "Widerøe Flight 744",
            "Alaska Airlines Flight 1866",
            "Linjeflyg Flight 618",
            "American Eagle Flight 4184",
            "New Zealand National Airways Corporation Flight 441",
            "2008 Los Roques archipelago Transaven Let L-410 crash",
            "Eastern Air Lines Flight 304",
            "PIA Flight 688",
            "BOAC Flight 781",
            "Pinnacle Airlines Flight 3701",
            "Royal Air Maroc Flight 630",
            "1950 Tête de l'Obiou C-54 crash",
            "Indian Airlines Flight 113",
            "American Eagle Flight 5456",
            "Korean Air Lines Flight 007",
            "USAir Flight 499",
            "China Airlines Flight 140",
            "EgyptAir Flight 864",
            "Air New England Flight 248",
            "Hurum air disaster",
            "Gulf Air Flight 771",
            "United Airlines Flight 227",
            "Los Angeles Airways Flight 417",
            "Azerbaijan Airlines Flight 217",
            "TAME Flight 120",
            "United Airlines Flight 266",
            "1954 Cathay Pacific Douglas DC-4 shootdown",
            "Mimika Air Flight 514",
            "Braniff Flight 542",
            "Iberia Airlines Flight 401",
            "1958 Bristol Britannia 312 crash",
            "1983 TAAG Angola Airlines Boeing 737 crash",
            "Vnukovo Airlines Flight 2801",
            "1987 Indianapolis Ramada Inn A-7D Corsair II Crash",
            "Colgan Air Flight 3407",
            "China Eastern Airlines Flight 5210",
            "Canadian Pacific Air Lines Flight 21",
            "United Airlines Flight 615",
            "Havørn Accident",
            "South African Airways Flight 201",
            "Copa Airlines Flight 201",
            "Japan Airlines Flight 446",
            "United Airlines Flight 409",
            "American Airlines Flight 383",
            "American Airlines Flight 320",
            "Mandala Airlines Flight 091",
            "Atlasjet Flight 4203",
            "TWA Flight 841 of 1974",
            "Crossair Flight 498",
            "Transbrasil Flight 303",
            "British United Airways Flight 1030X",
            "China Airlines Flight 676",
            "American Airlines Flight 157",
            "Air Ontario Flight 1363",
            "LAPA Flight 3142",
            "Sudan Airways Flight 139",
            "USAir Flight 427",
            "American Airlines Flight 1",
            "1946 Antarctica PBM Mariner crash",
            "Tuninter Flight 1153",
            "UTAGE Flight 141",
            "1933 United Airlines Boeing 247 mid-air explosion",
            "Alas Chiricanas Flight 901",
            "Northwest Airlines Flight 255",
            "2009 Andhra Pradesh Chief Minister helicopter crash",
            "United Airlines Flight 610",
            "JAT Airways Flight 769",
            "Kvitbjørn disaster",
            "Ansett New Zealand Flight 703",
            "Pan Am Flight 812",
            "Aeroflot Flight 331",
            "Imperial Airlines Flight 201/8",
            "Northwest Orient Airlines Flight 706",
            "Swissair Flight 330",
            "Flying Tiger Line Flight 282",
            "2008 Guam B-52 crash",
            "Philippine Airlines Flight 158",
            "1983 British Airways Sikorsky S-61 crash",
            "SA de Transport Aérien Flight 730",
            "TAROM Flight 371",
            "Eastern Air Lines Flight 66",
            "TWA Flight 514",
            "Capital Airlines Flight 75",
            "Pan Am Flight 708",
            "1994 Scotland RAF Chinook crash",
            "Northwest Airlines Flight 4422",
            "Turkish Airlines Flight 345",
            "B-25 Empire State Building crash",
            "2011 Tawang Town Mil Mi-17 crash",
            "1961 Turkish Airlines Ankara crash",
            "PBA Flight 1039",
            "Rico Linhas Aéreas Flight 4815",
            "PP-VLU",
            "USAir Flight 405",
            "Turkish Airlines Flight 981",
            "Iran Aseman Airlines Flight 746",
            "Atlantic Coast Airlines Flight 6291",
            "Eastern Air Lines Flight 980",
            "Avianca Flight 011",
            "Cal Poly football team plane crash",
            "1950 Heathrow BEA Viking accident",
            "Iberia Airlines Flight 610",
            "2007 Balad aircraft crash",
            "LOT Flight 5055",
            "Bukken Bruse disaster",
            "Continental Express Flight 2574",
            "Pan Am Flight 214",
            "Inex-Adria Aviopromet Flight 1308",
            "Widerøe Flight 839",
            "TAM Transportes Aéreos Regionais Flight 402",
            "1933 Imperial Airways Diksmuide crash",
            "TANS Perú Flight 222",
            "Air Tahoma Flight 185",
            "2006 Vladikavkaz Mi-8 crash",
            "Scandinavian Airlines System Flight 933",
            "1986 Mozambican Tupolev Tu-134 crash",
            "2009 Makhachkala Il-76 collision",
            "Flash Airlines Flight 604",
            "1972 Andes flight disaster",
            "Pan Am Flight 759",
            "United States Air Force SR-71 crash",
            "1951 Ringway Dakota accident",
            "2010 Interisland Airlines Crash",
            "West Caribbean Airways Flight 708",
            "Varig Flight 820",
            "TWA Flight 260",
            "Pacific Western Airlines Flight 314",
            "American Airlines Flight 587",
            "Spair Airlines Flight PAR-3601",
            "Kenya Airways Flight 431",
            "Downend air crash",
            "Dash 8 landing gear incidents",
            "2009 Kenyan Beechcraft 1900D crash",
            "Lauda Air Flight 004",
            "1979 Garuda Fokker F28 crash",
            "2010 Okhaldhunga Twin Otter crash",
            "Trans-Canada Air Lines Flight 810",
            "Southern Airways Flight 242",
            "LANSA Flight 502",
            "JAT Flight 367",
            "TAP Portugal Flight 425",
            "1972 Thandwe crash",
            "EgyptAir Flight 648",
            "Air New Zealand Flight 901",
            "Indian Airlines Flight 605",
            "Sabena Flight 548",
            "2007 Blue Angels South Carolina crash",
            "ALM Flight 980",
            "PIA Flight 740",
            "1986 British International Helicopters Chinook crash",
            "Llandow air disaster",
            "Capital Airlines Flight 67",
            "China General Aviation Flight 7552",
            "American Airlines Flight 11",
            "China Airlines Flight 358",
            "Mirosławiec air disaster",
            "Continental Airlines Flight 1713",
            "1936 KLM Croydon accident",
            "American Airlines Flight 965",
            "2011 Pointe-Noire Trans Air Congo An-12 crash",
            "UTA Flight 772",
            "Advance Airlines Flight DR4210",
            "Pacific Air Lines Flight 773",
            "Varig Flight 797",
            "Yeti Airlines Flight 103"
        ],
        "function": "<",
        "commonness": -15.930320602093794,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.airliner_accident",
                    "class": "aviation.airliner_accident",
                    "friendly_name": "Aviation incident",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "55^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "55",
                    "question_node": 0,
                    "function": "<"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "aviation.airliner_accident.survivors",
                    "friendly_name": "Survivors"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.airliner_accident . \nFILTER (?x1 < 55)\n?x0 :aviation.airliner_accident.survivors ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 174000300,
        "question": "which deceased characters have the same rank with zuko?",
        "answer": [
            "Vegeta",
            "Troilus"
        ],
        "function": "none",
        "commonness": -23.94775446705927,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.fictionaluniverse.deceased_fictional_character",
                    "class": "base.fictionaluniverse.deceased_fictional_character",
                    "friendly_name": "Deceased Fictional Character",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "fictional_universe.character_rank",
                    "class": "fictional_universe.character_rank",
                    "friendly_name": "Character Rank",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.prince_zuko",
                    "class": "fictional_universe.fictional_character",
                    "friendly_name": "Zuko",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.character_rank.characters_of_this_rank",
                    "friendly_name": "Characters of This Rank"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "fictional_universe.fictional_character.rank",
                    "friendly_name": "Rank"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.fictionaluniverse.deceased_fictional_character . \n?x1 :type.object.type :fictional_universe.character_rank . \nVALUES ?x2 { :en.prince_zuko } \n?x1 :fictional_universe.character_rank.characters_of_this_rank ?x0 . \n?x2 :fictional_universe.fictional_character.rank ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 190000200,
        "question": "who has ever coached an ice hockey team in canada?",
        "answer": [
            "Ken Hitchcock"
        ],
        "function": "none",
        "commonness": -21.05028879602097,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "ice_hockey.hockey_coach",
                    "class": "ice_hockey.hockey_coach",
                    "friendly_name": "Ice hockey coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "ice_hockey.hockey_team",
                    "class": "ice_hockey.hockey_team",
                    "friendly_name": "Ice hockey team",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.canada",
                    "class": "sports.sports_team_location",
                    "friendly_name": "Canada",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "ice_hockey.hockey_team.coach",
                    "friendly_name": "Coach"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.sports_team_location.teams",
                    "friendly_name": "Teams"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :ice_hockey.hockey_coach . \n?x1 :type.object.type :ice_hockey.hockey_team . \nVALUES ?x2 { :en.canada } \n?x1 :ice_hockey.hockey_team.coach ?x0 . \n?x2 :sports.sports_team_location.teams ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 195000000,
        "question": "what are the snl seasons that tina fey is in the cast?",
        "answer": [
            "Saturday Night Live - Season 31",
            "Saturday Night Live - Season 30"
        ],
        "function": "none",
        "commonness": -31.334357186793028,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.saturdaynightlive.snl_season",
                    "class": "base.saturdaynightlive.snl_season",
                    "friendly_name": "SNL season",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.saturdaynightlive.snl_season_tenure",
                    "class": "base.saturdaynightlive.snl_season_tenure",
                    "friendly_name": "SNL season tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.tina_fey",
                    "class": "base.saturdaynightlive.snl_cast_member",
                    "friendly_name": "Tina Fey",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.saturdaynightlive.snl_season.cast",
                    "friendly_name": "Cast"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.saturdaynightlive.snl_season_tenure.cast_members",
                    "friendly_name": "Cast members"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.saturdaynightlive.snl_season . \n?x1 :type.object.type :base.saturdaynightlive.snl_season_tenure . \nVALUES ?x2 { :en.tina_fey } \n?x0 :base.saturdaynightlive.snl_season.cast ?x1 . \n?x1 :base.saturdaynightlive.snl_season_tenure.cast_members ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 175000300,
        "question": "the united states of america uses which flag?",
        "answer": [
            "Flag of the United States"
        ],
        "function": "none",
        "commonness": -20.826569487157226,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.flag",
                    "class": "symbols.flag",
                    "friendly_name": "Flag",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.flag_use",
                    "class": "symbols.flag_use",
                    "friendly_name": "Flag use",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "symbols.flag_referent",
                    "friendly_name": "United States of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.flag_use.flag",
                    "friendly_name": "Flag"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.flag_use.flag_user",
                    "friendly_name": "Flag user"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.flag . \n?x1 :type.object.type :symbols.flag_use . \nVALUES ?x2 { :en.united_states_of_america } \n?x1 :symbols.flag_use.flag ?x0 . \n?x1 :symbols.flag_use.flag_user ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 193000400,
        "question": "computers running wii remote use what type of cpu?",
        "answer": [
            "PowerPC"
        ],
        "function": "none",
        "commonness": -22.67361534912766,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.computer_processor",
                    "class": "computer.computer_processor",
                    "friendly_name": "Computer Processor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "computer.computer",
                    "class": "computer.computer",
                    "friendly_name": "Computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.wii_remote",
                    "class": "computer.computer_peripheral",
                    "friendly_name": "Wii Remote",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.computer.processor",
                    "friendly_name": "Processor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "computer.computer.peripherals",
                    "friendly_name": "Peripherals"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computer_processor . \n?x1 :type.object.type :computer.computer . \nVALUES ?x2 { :en.wii_remote } \n?x1 :computer.computer.processor ?x0 . \n?x1 :computer.computer.peripherals ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 103000200,
        "question": "what is the landing zone of big sky with the highest altitude?",
        "answer": [
            "Rose Meadows LZ"
        ],
        "function": "argmax",
        "commonness": -19.016960745117075,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.bigsky.landing_zone",
                    "class": "base.bigsky.landing_zone",
                    "friendly_name": "Landing Zone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "400^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "400",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.bigsky.landing_zone.altitude_msl_ft",
                    "friendly_name": "Altitude (MSL, ft)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.bigsky.landing_zone . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :base.bigsky.landing_zone . \n?y0 :base.bigsky.landing_zone.altitude_msl_ft ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :base.bigsky.landing_zone.altitude_msl_ft ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 44000000,
        "question": "what's the classification of the bmw m10 engine?",
        "answer": [
            "Straight-4"
        ],
        "function": "none",
        "commonness": -17.380666736546644,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "automotive.engine_type",
                    "class": "automotive.engine_type",
                    "friendly_name": "Engine Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.bmw_m10",
                    "class": "automotive.engine",
                    "friendly_name": "BMW M10",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "automotive.engine_type.used_in",
                    "friendly_name": "Used In"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :automotive.engine_type . \nVALUES ?x1 { :en.bmw_m10 } \n?x0 :automotive.engine_type.used_in ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 178000001,
        "question": "what kinds of tv programs use beethoven's ninth symphony as theme song?",
        "answer": [
            "Comedy",
            "Comedy film",
            "Sitcom"
        ],
        "function": "none",
        "commonness": -22.50492187100238,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "tv.tv_genre",
                    "class": "tv.tv_genre",
                    "friendly_name": "TV Genre",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "tv.tv_program",
                    "class": "tv.tv_program",
                    "friendly_name": "TV Program",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.symphony_no_9",
                    "class": "tv.tv_theme_song",
                    "friendly_name": "beethoven's ninth symphony",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.tv_program.genre",
                    "friendly_name": "Genre"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_theme_song.theme_song_for",
                    "friendly_name": "Theme Song For"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tv.tv_genre . \n?x1 :type.object.type :tv.tv_program . \nVALUES ?x2 { :en.symphony_no_9 } \n?x1 :tv.tv_program.genre ?x0 . \n?x2 :tv.tv_theme_song.theme_song_for ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 249000301,
        "question": "nicklaus had created a few golf courses in 2003, which of them has the largest number of par?",
        "answer": [
            "The Sagamore Golf Course",
            "Bull Golf Course",
            "Longview Golf Course"
        ],
        "function": "argmax",
        "commonness": -36.10002195245568,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.golf_course",
                    "class": "sports.golf_course",
                    "friendly_name": "Golf Course",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.jack_nicklaus",
                    "class": "sports.golf_course_designer",
                    "friendly_name": "nicklaus",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "2003^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "2003",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.golf_course_designer.golf_courses",
                    "friendly_name": "Golf Courses Designed"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "sports.golf_course.year_built",
                    "friendly_name": "Year Built"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.golf_course.par",
                    "friendly_name": "Par"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.golf_course . \nVALUES ?x1 { :en.jack_nicklaus } \nVALUES ?x2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :sports.golf_course . \nVALUES ?y1 { :en.jack_nicklaus } \nVALUES ?y2 { \"2003\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?y1 :sports.golf_course_designer.golf_courses ?y0 . \n?y0 :sports.golf_course.year_built ?y2 . \n?y0 :sports.golf_course.par ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :sports.golf_course_designer.golf_courses ?x0 . \n?x0 :sports.golf_course.year_built ?x2 . \n?x0 :sports.golf_course.par ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 7000202,
        "question": "which drug legal classifications originate from the united states?",
        "answer": [
            "Investigational New Drug",
            "Schedule II (CSA)",
            "Dietary supplement",
            "Schedule III (CSA)",
            "Schedule IV (CSA)",
            "Legal",
            "Non-controlled substance",
            "Illegal",
            "Prescription drug",
            "Schedule V (CSA)",
            "Schedule I (CSA)",
            "Not evaluated by FDA",
            "Over-the-counter drug"
        ],
        "function": "none",
        "commonness": -12.149463404471973,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.drug_legal_status",
                    "class": "medicine.drug_legal_status",
                    "friendly_name": "Drug legal status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.united_states_of_america",
                    "class": "location.country",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.drug_legal_status.country",
                    "friendly_name": "Country"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.drug_legal_status . \nVALUES ?x1 { :en.united_states_of_america } \n?x0 :medicine.drug_legal_status.country ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 2000201,
        "question": "find the breeder of barbaro the horse.",
        "answer": [
            "Lael Stables"
        ],
        "function": "none",
        "commonness": -15.725646079343788,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.thoroughbredracing.thoroughbred_racehorse_breeder",
                    "class": "base.thoroughbredracing.thoroughbred_racehorse_breeder",
                    "friendly_name": "Thoroughbred racehorse breeder",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.barbaro",
                    "class": "base.thoroughbredracing.thoroughbred_racehorse",
                    "friendly_name": "barbaro the horse",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.thoroughbredracing.thoroughbred_racehorse_breeder.horses_bred",
                    "friendly_name": "Horses bred"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.thoroughbredracing.thoroughbred_racehorse_breeder . \nVALUES ?x1 { :en.barbaro } \n?x0 :base.thoroughbredracing.thoroughbred_racehorse_breeder.horses_bred ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 157000501,
        "question": "who produced idol?",
        "answer": [
            "19 Entertainment"
        ],
        "function": "none",
        "commonness": -11.985498092691113,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "broadcast.producer",
                    "class": "broadcast.producer",
                    "friendly_name": "Broadcast Producer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.american_idol",
                    "class": "broadcast.content",
                    "friendly_name": "idol",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.producer.produces",
                    "friendly_name": "Produces"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.producer . \nVALUES ?x1 { :en.american_idol } \n?x0 :broadcast.producer.produces ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 117000100,
        "question": "find the longest ship in the american civil war.",
        "answer": [
            "CSS Virginia"
        ],
        "function": "argmax",
        "commonness": -17.061329211024695,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.americancivilwar.ship",
                    "class": "base.americancivilwar.ship",
                    "friendly_name": "Ship",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "83.8^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "83.8",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "boats.ship.length_overall",
                    "friendly_name": "Length overall"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.americancivilwar.ship . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :base.americancivilwar.ship . \n?y0 :boats.ship.length_overall ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :boats.ship.length_overall ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 219000400,
        "question": "where was the dam of the racehorse secretariat from?",
        "answer": [
            "United States of America"
        ],
        "function": "none",
        "commonness": -23.988373848532063,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.thoroughbredracing.thoroughbred_racehorse_origin",
                    "class": "base.thoroughbredracing.thoroughbred_racehorse_origin",
                    "friendly_name": "Thoroughbred racehorse origin",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.thoroughbredracing.thoroughbred_racehorse",
                    "class": "base.thoroughbredracing.thoroughbred_racehorse",
                    "friendly_name": "Thoroughbred racehorse",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.secretariat",
                    "class": "base.thoroughbredracing.thoroughbred_racehorse",
                    "friendly_name": "Secretariat",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.thoroughbredracing.thoroughbred_racehorse_origin.horses_from_this_location",
                    "friendly_name": "Horses from this location"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam",
                    "friendly_name": "Foal (if this horse is Dam)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.thoroughbredracing.thoroughbred_racehorse_origin . \n?x1 :type.object.type :base.thoroughbredracing.thoroughbred_racehorse . \nVALUES ?x2 { :en.secretariat } \n?x0 :base.thoroughbredracing.thoroughbred_racehorse_origin.horses_from_this_location ?x1 . \n?x1 :base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 239000002,
        "question": "for the religions share the same god with christian religion, what are their beliefs?",
        "answer": [
            "Elimination of extremes of wealth and poverty",
            "Incarnation",
            "Harmony of religion and science",
            "Sola scriptura",
            "World peace",
            "Virgin birth of Jesus",
            "Sola gratia",
            "Soli Deo gloria",
            "Resurrection appearances of Jesus",
            "Creation",
            "Eastern Orthodox view of sin",
            "Independent investigation of truth",
            "Sola fide",
            "Marriage for Time and All Eternity",
            "Elimination of all forms of prejudice",
            "Unity of God",
            "Original sin",
            "Omnipotence",
            "Monotheism",
            "Unitarian monotheism",
            "Degrees of glory",
            "God in Mormonism",
            "Papal infallibility",
            "Omniscience",
            "Tikkun olam",
            "Families Can Be Forever",
            "Salvation",
            "Solus Christus",
            "Trinity",
            "Unity of Mankind",
            "Unity of Religeon",
            "Divine simplicity",
            "Universal compulsory education",
            "Universal auxiliary language",
            "Nontrinitarianism",
            "Obedience to government and non-involvement in partisan politics",
            "Infallibility of the Church",
            "Fall of man",
            "Transubstantiation",
            "Equality between men and women",
            "Premortality"
        ],
        "function": "none",
        "commonness": -24.899294145777223,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.belief",
                    "class": "religion.belief",
                    "friendly_name": "Belief",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "religion.deity",
                    "class": "religion.deity",
                    "friendly_name": "Deity",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "en.christianity",
                    "class": "religion.religion",
                    "friendly_name": "christian religion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.belief.belief_of",
                    "friendly_name": "Belief Of"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.belief . \n?x1 :type.object.type :religion.religion . \n?x2 :type.object.type :religion.deity . \nVALUES ?x3 { :en.christianity } \n?x0 :religion.belief.belief_of ?x1 . \n?x2 :religion.deity.deity_of ?x1 . \n?x2 :religion.deity.deity_of ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 31000200,
        "question": "where is wicked staged?",
        "answer": [
            "Apollo Victoria Theatre"
        ],
        "function": "none",
        "commonness": -17.747953270109736,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "theater.theater",
                    "class": "theater.theater",
                    "friendly_name": "Theater",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05nl6wh",
                    "class": "theater.theater_production",
                    "friendly_name": "Wicked",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "theater.theater.theatrical_productions_staged_here",
                    "friendly_name": "Theatrical productions staged here"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :theater.theater . \nVALUES ?x1 { :m.05nl6wh } \n?x0 :theater.theater.theatrical_productions_staged_here ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 93000300,
        "question": "how would the venus flytrap be categorized?",
        "answer": [
            "Carnivorous plant"
        ],
        "function": "none",
        "commonness": -17.043342741001418,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.informal_biological_grouping",
                    "class": "biology.informal_biological_grouping",
                    "friendly_name": "Informal biological grouping",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.venus_flytrap",
                    "class": "biology.organism_classification",
                    "friendly_name": "Venus flytrap",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "biology.informal_biological_grouping.included_classifications",
                    "friendly_name": "Included classifications"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.informal_biological_grouping . \nVALUES ?x1 { :en.venus_flytrap } \n?x0 :biology.informal_biological_grouping.included_classifications ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 247000300,
        "question": "which is the tallest athlete who has fluency in the silent night carol's language?",
        "answer": [
            "Dwight Howard"
        ],
        "function": "argmax",
        "commonness": -30.49627091141824,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.pro_athlete",
                    "class": "sports.pro_athlete",
                    "friendly_name": "Athlete",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "language.human_language",
                    "class": "language.human_language",
                    "friendly_name": "Human Language",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "en.silent_night",
                    "class": "base.christmas.christmas_carol",
                    "friendly_name": "Silent Night",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.languages",
                    "friendly_name": "Languages"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "people.person.height_meters",
                    "friendly_name": "Height"
                },
                {
                    "start": 3,
                    "end": 1,
                    "relation": "base.christmas.christmas_carol.language",
                    "friendly_name": "Language"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.pro_athlete . \n?x1 :type.object.type :language.human_language . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :sports.pro_athlete . \n?y1 :type.object.type :language.human_language . \nVALUES ?y3 { :en.silent_night } \n?y0 :people.person.languages ?y1 . \n?y0 :people.person.height_meters ?y2 . \n?y3 :base.christmas.christmas_carol.language ?y1 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :en.silent_night } \n?x0 :people.person.languages ?x1 . \n?x0 :people.person.height_meters ?x2 . \n?x3 :base.christmas.christmas_carol.language ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 172000502,
        "question": "which nobel prize winner shared an award with joseph e. stiglitz?",
        "answer": [
            "George Akerlof"
        ],
        "function": "none",
        "commonness": -19.2903221770605,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.yalebase.nobel_prize_winner",
                    "class": "base.yalebase.nobel_prize_winner",
                    "friendly_name": "Nobel prize winner",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "award.award_honor",
                    "class": "award.award_honor",
                    "friendly_name": "Award Honor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.joseph_e_stiglitz",
                    "class": "award.award_winner",
                    "friendly_name": "joseph e. stiglitz",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "award.award_honor.award_winner",
                    "friendly_name": "Award winner"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "award.award_winner.awards_won",
                    "friendly_name": "Awards Won"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.yalebase.nobel_prize_winner . \n?x1 :type.object.type :award.award_honor . \nVALUES ?x2 { :en.joseph_e_stiglitz } \n?x1 :award.award_honor.award_winner ?x0 . \n?x2 :award.award_winner.awards_won ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 43000102,
        "question": "which military radio program episodes focus on the us army?",
        "answer": [
            "Mental Anguish and the Military"
        ],
        "function": "none",
        "commonness": -18.730993072803155,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "radio.radio_program_episode",
                    "class": "radio.radio_program_episode",
                    "friendly_name": "Radio program episode",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.u_army",
                    "class": "radio.radio_subject",
                    "friendly_name": "us army",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "radio.radio_subject.episodes_with_this_subject",
                    "friendly_name": "Episodes with this subject"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program_episode . \nVALUES ?x1 { :en.u_army } \n?x1 :radio.radio_subject.episodes_with_this_subject ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 171000100,
        "question": "in 2000, what roller coaster began operations and then stopped all in the same year?",
        "answer": [
            "Tom y Jerry"
        ],
        "function": "none",
        "commonness": -22.39014663901147,
        "num_node": 2,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.roller_coaster",
                    "class": "amusement_parks.roller_coaster",
                    "friendly_name": "Roller Coaster",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "2000^^http://www.w3.org/2001/XMLSchema#datetime",
                    "class": "type.datetime",
                    "friendly_name": "2000",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.closed",
                    "friendly_name": "Closed"
                },
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.opened",
                    "friendly_name": "Opened"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.roller_coaster . \nVALUES ?x1 { \"2000\"^^<http://www.w3.org/2001/XMLSchema#datetime> } \n?x0 :amusement_parks.ride.closed ?x1 . \n?x0 :amusement_parks.ride.opened ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 29000200,
        "question": "which commercial brand is associated with the ipod?",
        "answer": [
            "Apple"
        ],
        "function": "none",
        "commonness": -12.135613916614275,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.gadgets.brand",
                    "class": "base.gadgets.brand",
                    "friendly_name": "Brand",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.ipod",
                    "class": "base.gadgets.gadget",
                    "friendly_name": "iPod",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.gadgets.gadget.brand",
                    "friendly_name": "Brand"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.gadgets.brand . \nVALUES ?x1 { :en.ipod } \n?x1 :base.gadgets.gadget.brand ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 210000402,
        "question": "how many cities bid for the 2008 olympic games?",
        "answer": [
            "5"
        ],
        "function": "count",
        "commonness": -21.34560336979508,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "olympics.olympic_bidding_city",
                    "class": "olympics.olympic_bidding_city",
                    "friendly_name": "Olympic bidding city",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "olympics.olympic_city_bid",
                    "class": "olympics.olympic_city_bid",
                    "friendly_name": "Olympic city bid",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.2008_summer_olympics",
                    "class": "olympics.olympic_games",
                    "friendly_name": "2008 olympic games",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "olympics.olympic_bidding_city.olympics_bid_on",
                    "friendly_name": "Olympics bid on"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "olympics.olympic_city_bid.olympic_games",
                    "friendly_name": "Olympic games"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :olympics.olympic_bidding_city . \n?x1 :type.object.type :olympics.olympic_city_bid . \nVALUES ?x2 { :en.2008_summer_olympics } \n?x0 :olympics.olympic_bidding_city.olympics_bid_on ?x1 . \n?x1 :olympics.olympic_city_bid.olympic_games ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 88000501,
        "question": "what movies were edited by spielberg?",
        "answer": [
            "The Goonies"
        ],
        "function": "none",
        "commonness": -13.224318035448787,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.americancomedy.movie",
                    "class": "base.americancomedy.movie",
                    "friendly_name": "Movie",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.steven_spielberg",
                    "class": "film.editor",
                    "friendly_name": "spielberg",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.editor.film",
                    "friendly_name": "Films edited"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.americancomedy.movie . \nVALUES ?x1 { :en.steven_spielberg } \n?x1 :film.editor.film ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 137000100,
        "question": "how many works did william shakespeare write lyrics for?",
        "answer": [
            "53"
        ],
        "function": "count",
        "commonness": -11.676454221015156,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.composition",
                    "class": "music.composition",
                    "friendly_name": "Composition",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.william_shakespeare",
                    "class": "music.lyricist",
                    "friendly_name": "William Shakespeare",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.lyricist.lyrics_written",
                    "friendly_name": "Lyrics Written"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.composition . \nVALUES ?x1 { :en.william_shakespeare } \n?x1 :music.lyricist.lyrics_written ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 69000100,
        "question": "what christmas carols are incorporated in the hplhs solstice carol songbook?",
        "answer": [
            "Carol of the Old Ones"
        ],
        "function": "none",
        "commonness": -21.291252265270323,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.christmas.christmas_carol",
                    "class": "base.christmas.christmas_carol",
                    "friendly_name": "Christmas carol",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.hplhs_solstice_carol_songbook",
                    "class": "music.composition",
                    "friendly_name": "HPLHS Solstice Carol Songbook",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "music.composition.part_of",
                    "friendly_name": "Part of"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.christmas.christmas_carol . \nVALUES ?x1 { :en.hplhs_solstice_carol_songbook } \n?x0 :music.composition.part_of ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 231000400,
        "question": "which pet diseases that result from an infection can be detected through electrocardiography?",
        "answer": [
            "Congestive Heart Failure in Dogs"
        ],
        "function": "none",
        "commonness": -29.219105976291093,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.pethealth.pet_disease_or_medical_condition",
                    "class": "base.pethealth.pet_disease_or_medical_condition",
                    "friendly_name": "Pet disease or medical condition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.infection",
                    "class": "base.pethealth.pet_disease_risk_factor",
                    "friendly_name": "Infection",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.electrocardiogram",
                    "class": "base.pethealth.diagnosis",
                    "friendly_name": "Electrocardiography",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor",
                    "friendly_name": "Pet Diseases with this Risk Factor"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.pethealth.pet_disease_or_medical_condition.diagnosis",
                    "friendly_name": "Diagnostic Tests"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.pethealth.pet_disease_or_medical_condition . \nVALUES ?x1 { :en.infection } \nVALUES ?x2 { :en.electrocardiogram } \n?x1 :base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor ?x0 . \n?x0 :base.pethealth.pet_disease_or_medical_condition.diagnosis ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 15000300,
        "question": "justerini & brooks is which type of distilled spirit?",
        "answer": [
            "Grain whisky",
            "Single malt Scotch whisky"
        ],
        "function": "none",
        "commonness": -19.489905632213564,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.distilled_spirit_type",
                    "class": "distilled_spirits.distilled_spirit_type",
                    "friendly_name": "Distilled spirit type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.justerini_brooks_whisky",
                    "class": "distilled_spirits.blended_spirit",
                    "friendly_name": "Justerini & Brooks",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "distilled_spirits.distilled_spirit_type.blends",
                    "friendly_name": "Blends using this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.distilled_spirit_type . \nVALUES ?x1 { :en.justerini_brooks_whisky } \n?x0 :distilled_spirits.distilled_spirit_type.blends ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 244000500,
        "question": "what is the name of the manager of the second-place baseball team in the 2007 world series?",
        "answer": [
            "Jim Leyland",
            "Don Baylor",
            "Clint Hurdle"
        ],
        "function": "none",
        "commonness": -33.313388228157265,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "baseball.baseball_manager",
                    "class": "baseball.baseball_manager",
                    "friendly_name": "Baseball Manager",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "baseball.baseball_historical_managerial_position",
                    "class": "baseball.baseball_historical_managerial_position",
                    "friendly_name": "Baseball Historical Managerial Position",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "baseball.baseball_team",
                    "class": "baseball.baseball_team",
                    "friendly_name": "Baseball Team",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "en.2007_world_series",
                    "class": "sports.sports_championship_event",
                    "friendly_name": "2007 World Series",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "baseball.baseball_historical_managerial_position.manager",
                    "friendly_name": "Manager"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "baseball.baseball_historical_managerial_position.team",
                    "friendly_name": "Team"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "sports.sports_championship_event.runner_up",
                    "friendly_name": "Runner-up"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :baseball.baseball_manager . \n?x1 :type.object.type :baseball.baseball_historical_managerial_position . \n?x2 :type.object.type :baseball.baseball_team . \nVALUES ?x3 { :en.2007_world_series } \n?x1 :baseball.baseball_historical_managerial_position.manager ?x0 . \n?x1 :baseball.baseball_historical_managerial_position.team ?x2 . \n?x3 :sports.sports_championship_event.runner_up ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 241000102,
        "question": "who made a ride that is like the haunted manison ride?",
        "answer": [
            "Walt Disney Imagineering"
        ],
        "function": "none",
        "commonness": -35.55893972064999,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "amusement_parks.ride_theme",
                    "class": "amusement_parks.ride_theme",
                    "friendly_name": "Amusement Ride Theme",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "en.haunted_mansion",
                    "class": "amusement_parks.ride",
                    "friendly_name": "haunted manison",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "amusement_parks.ride.designer",
                    "friendly_name": "Designer"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "amusement_parks.ride.theme",
                    "friendly_name": "Theme"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.ride.theme",
                    "friendly_name": "Theme"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride_designer . \n?x1 :type.object.type :amusement_parks.ride . \n?x2 :type.object.type :amusement_parks.ride_theme . \nVALUES ?x3 { :en.haunted_mansion } \n?x1 :amusement_parks.ride.designer ?x0 . \n?x3 :amusement_parks.ride.theme ?x2 . \n?x1 :amusement_parks.ride.theme ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 183000200,
        "question": "what is the nutritional composition of coca-cola soda?",
        "answer": [
            "Carbohydrate",
            "Sodium",
            "Lipid",
            "Water",
            "Protein",
            "Caffeine",
            "Fluoride",
            "Iron",
            "Phosphorus",
            "Choline",
            "Potassium",
            "Betaine",
            "Selenium",
            "Copper",
            "Zinc",
            "Sugar",
            "Ash",
            "Manganese",
            "Calcium"
        ],
        "function": "none",
        "commonness": -18.343663156106537,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "food.nutrient",
                    "class": "food.nutrient",
                    "friendly_name": "Nutrient",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "food.nutrition_fact",
                    "class": "food.nutrition_fact",
                    "friendly_name": "Nutrition Fact",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.coca-cola",
                    "class": "food.food",
                    "friendly_name": "Coca-Cola",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "food.nutrition_fact.nutrient",
                    "friendly_name": "Nutrient"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "food.nutrition_fact.food",
                    "friendly_name": "Food"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.nutrient . \n?x1 :type.object.type :food.nutrition_fact . \nVALUES ?x2 { :en.coca-cola } \n?x1 :food.nutrition_fact.nutrient ?x0 . \n?x1 :food.nutrition_fact.food ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 18000002,
        "question": "in which tournaments did windies win the championship?",
        "answer": [
            "2012 ICC World Twenty20",
            "1979 Cricket World Cup"
        ],
        "function": "none",
        "commonness": -16.18711506680925,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cricket.cricket_tournament_event",
                    "class": "cricket.cricket_tournament_event",
                    "friendly_name": "Cricket Tournament Event",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.west_indian_cricket_team",
                    "class": "sports.sports_team",
                    "friendly_name": "windies",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.sports_championship_event.champion",
                    "friendly_name": "Champion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cricket.cricket_tournament_event . \nVALUES ?x1 { :en.west_indian_cricket_team } \n?x0 :sports.sports_championship_event.champion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 164000102,
        "question": "how many songs has celine performed for films?",
        "answer": [
            "3"
        ],
        "function": "count",
        "commonness": -14.252318701819185,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_featured_song",
                    "class": "film.film_featured_song",
                    "friendly_name": "Film featured song",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.celine_dion",
                    "class": "music.artist",
                    "friendly_name": "celine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "film.film_featured_song.performed_by",
                    "friendly_name": "Performed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_featured_song . \nVALUES ?x1 { :en.celine_dion } \n?x0 :film.film_featured_song.performed_by ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 147000502,
        "question": "what's the number of buildings in the twin towers.",
        "answer": [
            "8"
        ],
        "function": "count",
        "commonness": -12.331540563847096,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "architecture.building",
                    "class": "architecture.building",
                    "friendly_name": "Building",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.world_trade_center",
                    "class": "architecture.building_complex",
                    "friendly_name": "twin towers",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.building.building_complex",
                    "friendly_name": "Building Complex"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :architecture.building . \nVALUES ?x1 { :en.world_trade_center } \n?x0 :architecture.building.building_complex ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 68000201,
        "question": "the bom uses which categories of tropical cyclones?",
        "answer": [
            "Category 4 Severe Tropical Cyclone (BOM)",
            "Category 5 Severe Tropical Cyclone (BOM)",
            "Category 2 Tropical Cyclone (BOM)",
            "Tropical Low (BOM)",
            "Category 1 Tropical Cyclone (BOM)",
            "Category 3 Severe Tropical Cyclone (BOM)"
        ],
        "function": "none",
        "commonness": -17.939991743423864,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone_category",
                    "class": "meteorology.tropical_cyclone_category",
                    "friendly_name": "Tropical cyclone category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.bureau_of_meteorology",
                    "class": "meteorology.meteorological_service",
                    "friendly_name": "bom",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.meteorological_service.tropical_cyclone_categories",
                    "friendly_name": "Tropical Cyclone Categories"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone_category . \nVALUES ?x1 { :en.bureau_of_meteorology } \n?x1 :meteorology.meteorological_service.tropical_cyclone_categories ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 222000100,
        "question": "who designed the rocket engine with the highest sea level thrust?",
        "answer": [
            "KBKHA (KB Khimavtomatiki)"
        ],
        "function": "argmax",
        "commonness": -30.03505371928707,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_designer",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "Rocket engine designer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "778120.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "778120.0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "spaceflight.rocket_engine.thrust_sea_level",
                    "friendly_name": "Thrust (sea level)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_designer . \n?x1 :type.object.type :spaceflight.rocket_engine . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :spaceflight.rocket_engine_designer . \n?y1 :type.object.type :spaceflight.rocket_engine . \n?y1 :spaceflight.rocket_engine.designed_by ?y0 . \n?y1 :spaceflight.rocket_engine.thrust_sea_level ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :spaceflight.rocket_engine.designed_by ?x0 . \n?x1 :spaceflight.rocket_engine.thrust_sea_level ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 5000302,
        "question": "where was the patent computer mouse filed?",
        "answer": [
            "United States Patent and Trademark Office"
        ],
        "function": "none",
        "commonness": -15.489207396185584,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.patent_office",
                    "class": "law.patent_office",
                    "friendly_name": "Patent office",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.mouse",
                    "class": "law.us_patent",
                    "friendly_name": "computer mouse",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.us_patent.patent_office",
                    "friendly_name": "Patent office"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.patent_office . \nVALUES ?x1 { :en.mouse } \n?x1 :law.us_patent.patent_office ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 89000401,
        "question": "who is currently coaching buffalo?",
        "answer": [
            "Ron Rolston"
        ],
        "function": "none",
        "commonness": -15.280293643752703,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "ice_hockey.hockey_coach",
                    "class": "ice_hockey.hockey_coach",
                    "friendly_name": "Ice hockey coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.buffalo_sabres",
                    "class": "ice_hockey.hockey_team",
                    "friendly_name": "buffalo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "ice_hockey.hockey_coach.current_team",
                    "friendly_name": "Current Team Coached"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :ice_hockey.hockey_coach . \nVALUES ?x1 { :en.buffalo_sabres } \n?x0 :ice_hockey.hockey_coach.current_team ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 83000101,
        "question": "who does ferrell do impersonations of?",
        "answer": [
            "Janet Reno",
            "James Lipton",
            "Ted Kaczynski",
            "Jesse Ventura",
            "George Bush",
            "Alex Trebek",
            "Robert Goulet",
            "Ted Kennedy",
            "Neil Diamond",
            "Harry Caray"
        ],
        "function": "none",
        "commonness": -13.473996990538954,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.americancomedy.impersonated_celebrity",
                    "class": "base.americancomedy.impersonated_celebrity",
                    "friendly_name": "Impersonated celebrity",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.will_ferrell",
                    "class": "base.americancomedy.celebrity_impressionist",
                    "friendly_name": "ferrell",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.americancomedy.impersonated_celebrity.impersonated_by",
                    "friendly_name": "Impersonated by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.americancomedy.impersonated_celebrity . \nVALUES ?x1 { :en.will_ferrell } \n?x0 :base.americancomedy.impersonated_celebrity.impersonated_by ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 54000200,
        "question": "morgan dollar is made from what?",
        "answer": [
            "Silver .900 silver .100 copper"
        ],
        "function": "none",
        "commonness": -17.09280212420446,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.coinsdaily.composition",
                    "class": "base.coinsdaily.composition",
                    "friendly_name": "coin composition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.morgan_dollar",
                    "class": "base.coinsdaily.coin_type",
                    "friendly_name": "Morgan dollar",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.coinsdaily.coin_type.composition",
                    "friendly_name": "composition"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.coinsdaily.composition . \nVALUES ?x1 { :en.morgan_dollar } \n?x1 :base.coinsdaily.coin_type.composition ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 205000302,
        "question": "which documentation type can be created by both visual paradigm for uml and magic draw?",
        "answer": [
            "HTML"
        ],
        "function": "none",
        "commonness": -29.247633988326648,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.umltools.documentation_type",
                    "class": "base.umltools.documentation_type",
                    "friendly_name": "Documentation Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.visual_paradigm_for_uml",
                    "class": "base.umltools.uml_tool",
                    "friendly_name": "Visual Paradigm for UML",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.magicdraw_uml",
                    "class": "base.umltools.uml_tool",
                    "friendly_name": "magic draw",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.umltools.documentation_type.tool",
                    "friendly_name": "Tool"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.umltools.documentation_type.tool",
                    "friendly_name": "Tool"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.umltools.documentation_type . \nVALUES ?x1 { :en.visual_paradigm_for_uml } \nVALUES ?x2 { :en.magicdraw_uml } \n?x0 :base.umltools.documentation_type.tool ?x1 . \n?x0 :base.umltools.documentation_type.tool ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 152000300,
        "question": "how many tracks are on the album anne?",
        "answer": [
            "15"
        ],
        "function": "count",
        "commonness": -11.490447809019981,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.release_track",
                    "class": "music.release_track",
                    "friendly_name": "Release track",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03b7wt1",
                    "class": "music.release",
                    "friendly_name": "Anne",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.release.track_list",
                    "friendly_name": "Track list"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.release_track . \nVALUES ?x1 { :m.03b7wt1 } \n?x1 :music.release.track_list ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 210000701,
        "question": "how many cities applied to host the beijing olympics?",
        "answer": [
            "5"
        ],
        "function": "count",
        "commonness": -21.34560336979508,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "olympics.olympic_bidding_city",
                    "class": "olympics.olympic_bidding_city",
                    "friendly_name": "Olympic bidding city",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "olympics.olympic_city_bid",
                    "class": "olympics.olympic_city_bid",
                    "friendly_name": "Olympic city bid",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.2008_summer_olympics",
                    "class": "olympics.olympic_games",
                    "friendly_name": "beijing olympics",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "olympics.olympic_bidding_city.olympics_bid_on",
                    "friendly_name": "Olympics bid on"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "olympics.olympic_city_bid.olympic_games",
                    "friendly_name": "Olympic games"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :olympics.olympic_bidding_city . \n?x1 :type.object.type :olympics.olympic_city_bid . \nVALUES ?x2 { :en.2008_summer_olympics } \n?x0 :olympics.olympic_bidding_city.olympics_bid_on ?x1 . \n?x1 :olympics.olympic_city_bid.olympic_games ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 114000400,
        "question": "which nascar race runs the fewest laps?",
        "answer": [
            "Pocono Mountains 125",
            "Johnsonville Sausage 200"
        ],
        "function": "argmin",
        "commonness": -16.379526435471583,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.nascar.nascar_race",
                    "class": "base.nascar.nascar_race",
                    "friendly_name": "NASCAR Race",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "188^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "188",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.nascar.nascar_race.laps",
                    "friendly_name": "Laps"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.nascar.nascar_race . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :base.nascar.nascar_race . \n?y0 :base.nascar.nascar_race.laps ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :base.nascar.nascar_race.laps ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 234000100,
        "question": "sidney crosby is the captain of a team wthin which ice hockey conference?",
        "answer": [
            "Eastern Conference"
        ],
        "function": "none",
        "commonness": -24.589948835793344,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "ice_hockey.hockey_conference",
                    "class": "ice_hockey.hockey_conference",
                    "friendly_name": "Ice hockey conference",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "ice_hockey.hockey_team",
                    "class": "ice_hockey.hockey_team",
                    "friendly_name": "Ice hockey team",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.sidney_crosby",
                    "class": "ice_hockey.hockey_player",
                    "friendly_name": "Sidney Crosby",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "ice_hockey.hockey_team.conference",
                    "friendly_name": "Conference"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "ice_hockey.hockey_team.captain",
                    "friendly_name": "Captain"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :ice_hockey.hockey_conference . \n?x1 :type.object.type :ice_hockey.hockey_team . \nVALUES ?x2 { :en.sidney_crosby } \n?x1 :ice_hockey.hockey_team.conference ?x0 . \n?x1 :ice_hockey.hockey_team.captain ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 96000100,
        "question": "the largest capacity of any entertainment venue can be found in what structure?",
        "answer": [
            "Daytona International Speedway"
        ],
        "function": "argmax",
        "commonness": -13.143543406313972,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "architecture.venue",
                    "class": "architecture.venue",
                    "friendly_name": "Venue",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1417^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "1417",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.venue.capacity",
                    "friendly_name": "Seating capacity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :architecture.venue . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :architecture.venue . \n?y0 :architecture.venue.capacity ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :architecture.venue.capacity ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 165000400,
        "question": "what's the shape of the point montara light?",
        "answer": [
            "Conical"
        ],
        "function": "none",
        "commonness": -22.066595221884075,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "architecture.tower_shape",
                    "class": "architecture.tower_shape",
                    "friendly_name": "Tower shape",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.point_montara_light",
                    "class": "architecture.lighthouse",
                    "friendly_name": "Point Montara Light",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.tower_shape.lighthouse_has_shape",
                    "friendly_name": "Lighthouse having shape"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :architecture.tower_shape . \nVALUES ?x1 { :en.point_montara_light } \n?x0 :architecture.tower_shape.lighthouse_has_shape ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 245000000,
        "question": "who made an aircraft needing a crew of more than 16 ?",
        "answer": [
            "Joe Sutter",
            "Alan Mulally"
        ],
        "function": ">",
        "commonness": -33.23829354806152,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.aircraft_designer",
                    "class": "aviation.aircraft_designer",
                    "friendly_name": "Aircraft designer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "aviation.aircraft_model",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Aircraft model",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "aviation.aviation_incident_aircraft_relationship",
                    "class": "aviation.aviation_incident_aircraft_relationship",
                    "friendly_name": "Aviation incident/aircraft relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "16^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "16",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "aviation.aircraft_model.designed_by",
                    "friendly_name": "Designed by"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "aviation.aviation_incident_aircraft_relationship.aircraft_model",
                    "friendly_name": "Aircraft model"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "aviation.aviation_incident_aircraft_relationship.crew",
                    "friendly_name": "Crew"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.aircraft_designer . \n?x1 :type.object.type :aviation.aircraft_model . \n?x2 :type.object.type :aviation.aviation_incident_aircraft_relationship . \nFILTER (?x3 > 16)\n?x1 :aviation.aircraft_model.designed_by ?x0 . \n?x2 :aviation.aviation_incident_aircraft_relationship.aircraft_model ?x1 . \n?x2 :aviation.aviation_incident_aircraft_relationship.crew ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 229000500,
        "question": "who was the publisher of the comics books of alan moore?",
        "answer": [
            "WildStorm",
            "Avatar Press",
            "DC Comics",
            "Vertigo",
            "Top Shelf Productions",
            "Dark Horse Comics"
        ],
        "function": "none",
        "commonness": -22.0274509335855,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_publisher",
                    "class": "comic_books.comic_book_publisher",
                    "friendly_name": "Comic Book Publisher",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "comic_books.comic_book_series",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "Comic Book Series",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.alan_moore",
                    "class": "comic_books.comic_book_creator",
                    "friendly_name": "Alan Moore",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "comic_books.comic_book_publisher.comic_book_series_published",
                    "friendly_name": "Comic Book Series Published"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "comic_books.comic_book_creator.series_created",
                    "friendly_name": "Series Created"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_publisher . \n?x1 :type.object.type :comic_books.comic_book_series . \nVALUES ?x2 { :en.alan_moore } \n?x0 :comic_books.comic_book_publisher.comic_book_series_published ?x1 . \n?x2 :comic_books.comic_book_creator.series_created ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 179000100,
        "question": "which casino has common shows with wynn las vegas?",
        "answer": [
            "The Mirage",
            "Encore Las Vegas"
        ],
        "function": "none",
        "commonness": -27.209408049585555,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.casinos.casino",
                    "class": "base.casinos.casino",
                    "friendly_name": "Casino",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.casinos.casino_show",
                    "class": "base.casinos.casino_show",
                    "friendly_name": "Casino Show",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.wynn_las_vegas",
                    "class": "base.casinos.casino",
                    "friendly_name": "Wynn Las Vegas",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.casinos.casino_show.in_casino",
                    "friendly_name": "In casino"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.casinos.casino_show.in_casino",
                    "friendly_name": "In casino"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.casinos.casino . \n?x1 :type.object.type :base.casinos.casino_show . \nVALUES ?x2 { :en.wynn_las_vegas } \n?x1 :base.casinos.casino_show.in_casino ?x0 . \n?x1 :base.casinos.casino_show.in_casino ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 109000300,
        "question": "find venues with a seating capacity larger than 1417.",
        "answer": [
            "Richmond Olympic Oval",
            "Reynolds Coliseum",
            "5th Avenue Theatre",
            "Churchill Downs",
            "Swayze Field",
            "Griffin Park",
            "Keller Auditorium",
            "Regent Theatre",
            "Stade du Hameau",
            "Robina Stadium",
            "Lakefront Arena",
            "Falcon Stadium",
            "William \"Dick\" Price Stadium",
            "Allen Fieldhouse",
            "Comcast Arena",
            "Seminole Hard Rock Hotel and Casino Hollywood",
            "Stadion der Freundschaft",
            "Pete Maravich Assembly Center",
            "Raymond James Stadium",
            "Stadio Artemio Franchi",
            "Ford Center",
            "Dunkin' Donuts Center",
            "Ebbets Field",
            "Cajundome",
            "Avery Fisher Hall",
            "Sadler's Wells Theatre",
            "Maui Arts & Cultural Center",
            "Achilles Rink",
            "Perth Oval",
            "Stanley Park Stadium",
            "O2 Academy Glasgow",
            "Assembly Hall",
            "Capitol Theatre",
            "Alpine Valley Music Theatre",
            "National Aquatic Centre",
            "United Palace Theater",
            "Millennium Stadium",
            "Memorial Stadium",
            "Victoria Palace Theatre",
            "Scotiabank Saddledome",
            "Independence Stadium",
            "Suheim Bin Hamad Stadium",
            "Estádio do Dragão",
            "Theatre Royal, Glasgow",
            "Lahaina Civic Center",
            "Beethovenhalle",
            "Richard E. Berry Educational Support Center",
            "Ralph Engelstad Arena",
            "Tilles Center for the Performing Arts",
            "Lawson Arena",
            "Pitt Stadium",
            "Royal Agricultural Hall",
            "Tiger Stadium",
            "Luna Park, Buenos Aires",
            "General Motors Centre",
            "East End Park",
            "Halifax Metro Centre",
            "Birmingham Hippodrome",
            "Hancock Stadium",
            "Odyssey Arena",
            "Estadio Riazor",
            "Ethias Arena",
            "Royal Festival Hall",
            "Bill Graham Civic Auditorium",
            "Donald L. Tucker Center",
            "Alaska Airlines Arena at Hec Edmundson Pavilion",
            "Paulson Stadium",
            "Wang Theatre",
            "Chester Fritz Auditorium",
            "Worthington Arena",
            "Nya Parken",
            "River Center Arena",
            "Estadio Universitario",
            "CenturyLink Center Omaha",
            "Bord Gáis Energy Theatre",
            "Sullivan Arena",
            "Los Angeles Memorial Sports Arena",
            "Utica Memorial Auditorium",
            "CenturyLink Center",
            "Donbass Arena",
            "Nassau Veterans Memorial Coliseum",
            "Hill Auditorium",
            "Louis Brown Athletic Center",
            "Yale Bowl",
            "Glasgow Royal Concert Hall",
            "Chacarita Juniors Stadium",
            "Kiel Auditorium",
            "Convocation Center",
            "Santiago Bernabéu Stadium",
            "Portsmouth Guildhall",
            "Chicago Stadium",
            "Popejoy Hall",
            "Reliant Astrodome",
            "Hartwall Areena",
            "Gill Coliseum",
            "Lakewood Church Central Campus",
            "Palladium Theater",
            "Credicard Hall",
            "De Montfort Hall",
            "Long Beach Convention and Entertainment Center",
            "Conte Forum",
            "Tampa Stadium",
            "Rec Hall",
            "Amman International Stadium",
            "Hard Rock Hotel and Casino",
            "The O2 Arena",
            "HK Arena",
            "The Whiting",
            "Scott Stadium",
            "Gold Coast Convention and Exhibition Centre",
            "Vaught–Hemingway Stadium",
            "Massey Hall",
            "Marina Civic Center",
            "Grand Lake Theater",
            "Gerald J. Ford Stadium",
            "BI-LO Center",
            "Parc des Sports",
            "Le Transbordeur",
            "Stade Armand Cesari",
            "BJK İnönü Stadium",
            "Loftus Road",
            "Bahrain National Stadium",
            "AWD-Arena",
            "London Palladium",
            "Palace Theatre, Manchester",
            "Morris Performing Arts Center",
            "Dowdy–Ficklen Stadium",
            "St. James Theatre, Wellington",
            "War Memorial Stadium",
            "Vikings Stadium",
            "The Arches",
            "Marquis Theatre",
            "Red Rock Resort Spa and Casino",
            "Holy Name Cathedral, Chicago",
            "Warner Theatre",
            "Lunt-Fontanne Theatre",
            "Comerica Park",
            "Chaifetz Arena",
            "Stockholm Olympic Stadium",
            "Fargodome",
            "Hofheinz Pavilion",
            "Koning Willem II Stadion",
            "Estadio Marcelo Bielsa",
            "Hampden Park",
            "Pennsylvania Convention Center",
            "Lander's Center",
            "Ibrox Stadium",
            "Hinkle Fieldhouse",
            "Peabody Opera House",
            "Riviera Theatre",
            "National Ice Centre",
            "Nutter Center",
            "Allen County War Memorial Coliseum",
            "Symphony Hall",
            "Sovereign Center",
            "Stadio Antonio Bianco",
            "Theater des Westens",
            "Oracle Arena",
            "East Fremantle Oval",
            "Maverick Baseball Stadium",
            "London Astoria",
            "Antarès",
            "Angel Stadium of Anaheim",
            "WVU Coliseum",
            "Tucson Convention Center",
            "Anoeta Stadium",
            "American Bank Center",
            "Orpheum Theatre",
            "The Bell Auditorium",
            "Camp Nou",
            "Redbird Arena",
            "Quicken Loans Arena",
            "Chiles Center",
            "Bellerive Oval",
            "High Point Solutions Stadium",
            "National Theatre",
            "JQH Arena",
            "Olympia Ice Center",
            "Beacon Theatre, New York",
            "Boone Pickens Stadium",
            "Sioux Falls Arena",
            "O2 Academy Liverpool",
            "Elliott Hall of Music",
            "Adler Theatre",
            "Peace and Friendship Stadium",
            "TCF Bank Stadium",
            "The O2",
            "Vicarage Road",
            "Bill Snyder Family Football Stadium",
            "Sony Centre for the Performing Arts",
            "Gayfield Park",
            "National Indoor Arena",
            "TD Bank Garden",
            "Donau Arena",
            "Saoud bin Abdulrahman Stadium",
            "Polideportivo Islas Malvinas",
            "Mediolanum Forum",
            "MDCC-Arena",
            "Volkswagen Arena",
            "Sleep Train Pavilion",
            "Kimmel Arena",
            "Four Seasons Centre for the Performing Arts",
            "I Wireless Center",
            "Sparkassen-Erzgebirgsstadion",
            "Sheikh Khalifa International Stadium",
            "Cobo Center",
            "Cumberland County Civic Center",
            "Wrigley Field",
            "The Pit",
            "Hanns-Martin-Schleyer-Halle",
            "Broward Center for the Performing Arts",
            "Memorial Gymnasium",
            "Towson Center",
            "Roxy Theatre",
            "Hammerstein Ballroom",
            "Lloyd Noble Center",
            "Tad Smith Coliseum",
            "LaVell Edwards Stadium",
            "Olympic Stadium",
            "Teatro di San Carlo, Naples",
            "Frankfurter Volksbank Stadion",
            "Tad Gormley Stadium",
            "HoHoKam Stadium",
            "Estadio Azteca",
            "Usher Hall, Edinburgh",
            "Joseph P. Riley, Jr. Park",
            "Elispace",
            "Fratton Park",
            "Scotiabank Place",
            "De Grolsch Veste",
            "Copps Coliseum",
            "Jones AT&T Stadium",
            "Percival Molson Memorial Stadium",
            "Teatro dell'Opera di Roma",
            "Susquehanna Bank Center",
            "Jack Trice Stadium",
            "New York City Center",
            "Marriott Center",
            "Petersen Events Center",
            "Smith Center for the Performing Arts",
            "Ellis Park Stadium",
            "Royal Bafokeng Stadium",
            "Thomas & Mack Center",
            "Memorial Stadium",
            "Wembley Stadium",
            "Bushnell Center for the Performing Arts",
            "INB Performing Arts Center",
            "Glücksgas Stadium",
            "Cricket Wireless Amphitheatre",
            "Stadion im. Tadeusza Ślusarskiego",
            "Firhill Stadium",
            "Nationwide Arena",
            "Georgia Dome",
            "Cowtown Coliseum",
            "Nikon at Jones Beach Theater",
            "Doak Campbell Stadium",
            "Bright House Networks Stadium",
            "Pan American Center",
            "Savoy Cinema",
            "Olympic Stadium",
            "North Shore Music Theatre",
            "MTS Centre",
            "Gillette Stadium",
            "BMO Field",
            "László Papp Budapest Sports Arena",
            "Hearst Greek Theatre",
            "Olympic Stadium",
            "Cassell Coliseum",
            "Singapore Indoor Stadium",
            "Winspear Opera House, Dallas",
            "Prospera Place",
            "The Hawthorns",
            "Ferrell Center",
            "Putra Indoor Stadium",
            "Spokane Veterans Memorial Arena",
            "Alabama Theatre",
            "Miami Orange Bowl",
            "Allphones Arena",
            "Peoria Civic Center",
            "O2 World",
            "Raleigh Convention Center",
            "Hubert H. Humphrey Metrodome",
            "Summum",
            "Echo Arena Liverpool",
            "Pensacola Civic Center",
            "McMahon Stadium",
            "Sonny Lubick Field at Hughes Stadium",
            "Chrysler Hall",
            "Miller Park",
            "HP Pavilion at San Jose",
            "Cruzan Amphitheatre",
            "König Pilsener Arena",
            "Victoria Theatre",
            "Bell Centre",
            "Somerset Park",
            "Frank Erwin Center",
            "Kidd Brewer Stadium",
            "Pride Park Stadium",
            "Star Plaza Theatre",
            "Arrowhead Stadium",
            "Al-Hamadaniah Stadium",
            "Saratoga Performing Arts Center",
            "Dominion Theatre",
            "Toyota Center",
            "The Lighthouse",
            "Benteler Arena",
            "John E. Worthen Arena",
            "Rittal Arena Wetzlar",
            "Verizon Wireless Arena",
            "Harbour Station",
            "Wales Millennium Centre",
            "Rice Stadium",
            "Dvorana Mirza Delibašić",
            "Marlins Park",
            "Lincoln Financial Field",
            "Kampa-Halle",
            "Norva Theatre",
            "Shakespeare's Globe",
            "CenturyLink Field",
            "Harry A. Gampel Pavilion",
            "Oakdale Theatre",
            "Aggie Stadium",
            "Jon M. Huntsman Center",
            "Mackey Arena",
            "Newcastle City Hall",
            "Valley View Casino Center",
            "DTE Energy Music Theatre",
            "Eisstadion Weißwasser",
            "Kenan Memorial Stadium",
            "Atletion",
            "EnergyAustralia Stadium",
            "Jeld-Wen Field",
            "Winter Gardens, Blackpool",
            "UNI-Dome",
            "Robinson Center, Little Rock",
            "Moody Coliseum",
            "Shea Stadium",
            "Shrine Auditorium",
            "Foreman Field",
            "Majestic Theatre",
            "Toyota Center",
            "Lane Stadium",
            "Spartan Stadium",
            "Alerus Center",
            "Alex G. Spanos Center",
            "Byrd Stadium",
            "Sun Devil Stadium",
            "American Airlines Arena",
            "The Shay",
            "Five Flags Center",
            "Comcast Center",
            "Deltaplex Arena & Conference Center",
            "Jim Patterson Stadium",
            "Fox Theatre",
            "York Park",
            "Cliffs Pavilion",
            "Durham Performing Arts Center",
            "Városi Sportcsarnok",
            "Hershey Centre",
            "Stade Vélodrome",
            "Zénith de Strasbourg",
            "Greensboro Coliseum Complex",
            "Fox Theatre",
            "Auburn Arena",
            "Dodger Stadium",
            "Phoenix Municipal Stadium",
            "United Center",
            "Wings Stadium",
            "Kauffman Center for the Performing Arts",
            "University of Phoenix Stadium",
            "Hallenstadion",
            "The Lowry",
            "Vienna State Opera",
            "Teatro degli Arcimboldi",
            "Methodist Central Hall Westminster",
            "Hanover Theatre for the Performing Arts",
            "Embassy Theatre",
            "Nashville Municipal Auditorium",
            "Bobcat Stadium",
            "Boston Opera House",
            "Kauffman Stadium",
            "Petco Park",
            "Salt River Fields at Talking Stick",
            "Pershing Center",
            "Glens Falls Civic Center",
            "Stadio Olimpico",
            "Wellmont Theatre",
            "Target Field",
            "Wells Fargo Arena",
            "Thani bin Jassim Stadium",
            "Citi Field",
            "Taco Bell Arena",
            "Consol Energy Center",
            "Columbus Civic Center",
            "Regent Theatre, Dunedin",
            "The Den",
            "Edward Jones Dome",
            "King's Theatre, Glasgow",
            "Centre In The Square",
            "Palace Theatre",
            "Loftus Versfeld Stadium",
            "Kitchener Memorial Auditorium",
            "Melching Field at Conrad Park",
            "Peden Stadium",
            "Dow Event Center",
            "Kombank Arena",
            "Bartow Arena",
            "Cedar Rapids Ice Arena",
            "Sunderland Empire Theatre",
            "Estadio de Béisbol Monterrey",
            "Tower Theater",
            "Palais Omnisports de Paris-Bercy",
            "FirstEnergy Stadium",
            "Aviva Stadium",
            "Ninian Park",
            "Sleep Train Amphitheatre",
            "Racquet Club of Memphis",
            "Perth Concert Hall",
            "Strahan Coliseum",
            "Los Angeles Theatre",
            "UIC Pavilion",
            "Newcastle Entertainment Centre",
            "Sydney Opera House",
            "Maverik Center",
            "Barrie Molson Centre",
            "Princeton University Stadium",
            "Waldo Stadium",
            "Cow Palace",
            "University of Dayton Arena",
            "The Helix",
            "Balaídos",
            "Ottawa Auditorium",
            "Teatro Colón, Buenos Aires",
            "Toyota Park",
            "Frost Arena",
            "Kress Events Center",
            "XL Center",
            "Galen Center",
            "Minskoff Theatre",
            "Palaran Stadium",
            "İzmir Atatürk Stadium",
            "Fife Ice Arena",
            "Goodison Park",
            "Camp Randall Stadium",
            "Dean Smith Center",
            "Cape Town Stadium",
            "Stadio Giovanni Zini",
            "The Bank of Kentucky Center",
            "Sports Ground, Woodbridge Road, Guildford",
            "Lotto Arena",
            "Arena at Gwinnett Center",
            "Rogers Centre",
            "Eden Gardens",
            "Gaillard Municipal Auditorium",
            "Mariucci Arena",
            "Ullevi",
            "Staples Center",
            "Franklin Field",
            "Heinz Field",
            "Faliro Coastal Zone Olympic Complex",
            "Independence Events Center",
            "Shotwell Stadium",
            "Estadio Cubierto Newell's Old Boys",
            "Anaheim Convention Center",
            "Spiroudome",
            "Princess Theatre, Torquay",
            "Orpheum Theatre",
            "Arsenal Stadium",
            "Estádio Olímpico João Havelange",
            "Colonial Life Arena",
            "TD Ameritrade Park Omaha",
            "Türk Telekom Arena",
            "National Concert Hall, Dublin",
            "Grand Ole Opry",
            "RiverCenter for the Performing Arts",
            "Liacouras Center",
            "La Romareda",
            "Michigan Stadium",
            "Rogers Arena",
            "Millerntor-Stadion",
            "The Times Union Center",
            "Regent Theatre",
            "Goss Stadium at Coleman Field",
            "Stabler Arena",
            "US Airways Center",
            "Stadthalle Graz",
            "WACA Ground",
            "Reebok Stadium",
            "St David's Hall",
            "Estadio José María Bértora",
            "Admiralspalast",
            "Auditorio Banamex",
            "Stadthalle Hagen",
            "Osaka Dome",
            "Rice-Eccles Stadium",
            "Verizon Center",
            "Dale F. Halton Arena",
            "Auditorium Parco della Musica",
            "Stadio Artemio Franchi – Montepaschi Arena",
            "Estadio El Madrigal",
            "Red Bull Arena",
            "Texas Stadium",
            "Stadio Olimpico di Torino",
            "St Andrew's",
            "New I-Mobile Stadium",
            "Matthews Arena",
            "ARCO Arena I",
            "Boston Garden",
            "Miller Outdoor Theatre",
            "Tuacahn",
            "Comédie-Française",
            "Von Braun Center",
            "Ted Constant Convocation Center",
            "Carver–Hawkeye Arena",
            "Eden Park",
            "UNF Arena",
            "Busch Memorial Stadium",
            "Stockton Arena",
            "Salt Lake Stadium",
            "Penydarren Park",
            "Camille Chamoun Sports City Stadium",
            "Bojangles' Coliseum",
            "Ottawa Convention Centre",
            "Verizon Wireless Amphitheater",
            "Prudential Center",
            "Cypress Mountain Ski Area",
            "1st Mariner Arena",
            "Radio City Music Hall",
            "Shanghai Stadium",
            "State Farm Center",
            "Cardiff Arena",
            "St James' Park",
            "Dee Events Center",
            "Waterfront Hall",
            "Mage Solar Stadion",
            "Huntington Avenue Grounds",
            "Adelphi Theatre",
            "Arlene Schnitzer Concert Hall, Portland",
            "Regent Theatre, Melbourne",
            "Amway Arena",
            "Tonhalle",
            "Show Me Center",
            "Cajun Field",
            "Pepsi Center",
            "Fir Park",
            "Bryce Jordan Center",
            "Molson Canadian Amphitheatre",
            "Rialto Square Theatre",
            "Resch Center",
            "Mountaineer Field at Milan Puskar Stadium",
            "Stade de la Route de Lorient",
            "Fox Theatre",
            "Red Rocks Amphitheatre",
            "War Memorial Stadium",
            "Rhodes Stadium",
            "LDS Conference Center",
            "Canberra Stadium",
            "Comcast Center",
            "Symphony Hall, Birmingham",
            "Amway Center",
            "Pittodrie Stadium",
            "Redondo Beach Performing Arts Center",
            "Theatre Royal, Drury Lane",
            "Lawrence Joel Veterans Memorial Coliseum",
            "Notre Dame Stadium",
            "Southampton Guildhall",
            "Spreckels Theater",
            "Stadio delle Alpi",
            "Venue Cymru",
            "Sydney Cricket Ground",
            "Palais Theatre",
            "Lyceum Theatre",
            "Bob Carpenter Center",
            "San Siro Stadium",
            "Centre Court",
            "Germain Arena",
            "Big Sandy Superstore Arena",
            "The Music Hall",
            "Hobby Center for the Performing Arts",
            "Nelson W. Wolff Municipal Stadium",
            "Rhein-Neckar Arena",
            "Riverbend Music Center",
            "Cícero Pompeu de Toledo Stadium",
            "Miami Arena",
            "Al Hirschfeld Theatre",
            "Rod Laver Arena",
            "Rabobank Arena",
            "Marion Palace Theatre",
            "Doak Field",
            "Don Haskins Center",
            "Pavilion Theatre",
            "Villa Park",
            "Cam Henderson Center",
            "Mizzou Arena",
            "PNC Arena",
            "Skelly Field at H. A. Chapman Stadium",
            "Hokkaido Prefectural Sports Center",
            "Akoo Theatre at Rosemont",
            "Amsterdam Arena",
            "Orange County Convention Center",
            "Liberty Bank Stadium",
            "Holt Arena",
            "Vector Arena",
            "Tennessee Theatre",
            "Alumni Stadium",
            "North Charleston Coliseum",
            "Laredo Energy Arena",
            "Allstate Arena",
            "Clark–LeClair Stadium",
            "The Forum",
            "Nationals Park",
            "Hampton Convocation Center",
            "Bondi Beach",
            "Mosaic Place",
            "DCU Center",
            "Deva Stadium",
            "King Power Stadium",
            "Dom Sportova",
            "London Velopark",
            "Cleveland Stadium",
            "D.C. Armory",
            "Knapp Center",
            "Lyric Theatre, Sydney",
            "Swedbank Park",
            "SIU Arena",
            "Charlotte Coliseum",
            "Zenith Arena",
            "RCA Dome",
            "Smart Araneta Coliseum",
            "UCF Arena",
            "Safeco Field",
            "Birmingham–Jefferson Convention Complex",
            "National Hockey Stadium",
            "ABB Arena Syd",
            "GCS Ballpark",
            "Liberty Stadium",
            "Joe Louis Arena",
            "Bangalore Football Stadium",
            "Harvard Stadium",
            "Cowboys Stadium",
            "WesBanco Arena",
            "Amon G. Carter Stadium",
            "Croke Park",
            "Williams Arena",
            "Rexall Centre",
            "Rose Bowl",
            "Fisher Field",
            "Saint Paul RiverCentre",
            "Comerica Theatre",
            "Durham County Stadium",
            "Arena Theatre",
            "Princess of Wales Theatre",
            "The Oval",
            "Western Hall",
            "Mackay Stadium",
            "Van Andel Arena",
            "Fillmore Auditorium",
            "El Sadar Stadium",
            "White Hart Lane",
            "Iberostar Stadium",
            "Olympic Stadium Munich",
            "Niaz Stadium",
            "Rose Garden",
            "Estadio Tetelo Vargas",
            "Beijing National Aquatics Center",
            "AT&T Center",
            "Jordan–Hare Stadium",
            "Orleans Arena",
            "Swedbank Stadion",
            "Cumberland County Crown Coliseum",
            "Kibbie Dome",
            "Pantages Theatre",
            "Memorial Stadium, Clemson",
            "Sam Boyd Stadium",
            "Wiener Stadthalle Hall D",
            "Austin Convention Center",
            "Schermerhorn Symphony Center",
            "Bridgestone Arena",
            "Cheltenham Racecourse",
            "Brown Stadium",
            "The Egg",
            "Weserstadion",
            "Orpheum",
            "Aronoff Center",
            "Tyson Events Center",
            "Budweiser Gardens",
            "Lone Star Amphitheater",
            "Estadio Benito Villamarín",
            "Estadio Monumental Antonio Vespucio Liberti",
            "Bronco Stadium",
            "Lawlor Events Center",
            "OlympiaWorld Innsbruck",
            "Capitol Theatre",
            "Commonwealth Stadium",
            "Palau d'Esports de Granollers",
            "Peabody Auditorium",
            "Foro Sol",
            "Docklands Stadium",
            "Palace Theatre",
            "Thebarton Theatre",
            "Cotton Bowl",
            "Ericsson Globe",
            "Stade de France",
            "Soldiers and Sailors Memorial Auditorium",
            "Cheney Stadium",
            "Intrust Bank Arena",
            "Mitsubishi Electric Halle",
            "Scottrade Center",
            "Empire, Leicester Square",
            "Celebrity Theatre",
            "El Paso County Coliseum",
            "Majestic Theatre",
            "Wankhede Stadium",
            "Vanderbilt Stadium",
            "Commerzbank-Arena",
            "Esplanade - Theatres on the Bay, Singapore",
            "MaxiparkArena",
            "Ottawa Civic Centre",
            "Rio Tinto Stadium",
            "Gigantium",
            "Izod Center",
            "Curb Event Center",
            "Estadio Nuevo José Zorrilla",
            "Olympic Stadium",
            "Liverpool Empire Theatre",
            "Surprise Stadium",
            "Roanoke Civic Center",
            "Jobing.com Arena",
            "Daniel–Meyer Coliseum",
            "Denver Coliseum",
            "The Sage Gateshead",
            "The Centre",
            "Honda Center",
            "AWD Hall",
            "Braehead Arena",
            "PPL Park",
            "Huntington Center",
            "Volleyball Sportiv Complex",
            "Busch Stadium",
            "Tiger Stadium",
            "Salvus-Stadion am Grevener Damm",
            "Astana Arena",
            "Best Buy Theater",
            "Academy of Music",
            "Tampa Bay Times Forum",
            "Sanford Stadium",
            "Charles Koch Arena",
            "Javelina Stadium",
            "Manchester Central Convention Complex",
            "Stadio Renato Curi",
            "Whistler Olympic Park",
            "David A. Straz Jr. Center for the Performing Arts",
            "Ems-Hölle",
            "Tannadice Park",
            "Landmark Theatre",
            "Stanford Stadium",
            "Mosaic Stadium at Taylor Field",
            "Stadium Municipal",
            "Bud Walton Arena",
            "Yubileyny Sports Palace",
            "Gachibowli Indoor Stadium",
            "Cameron Indoor Stadium",
            "U.S. Cellular Field",
            "Anfield",
            "Rexall Place",
            "AT&T Performing Arts Center",
            "Westpac Stadium",
            "Wagner Noel Performing Arts Center",
            "Bowers Stadium",
            "Max-Schmeling-Halle",
            "Kyle Field",
            "Wallace Wade Stadium",
            "St. Augustine Amphitheatre",
            "Olympia Bruno Coquatrix",
            "Pacific Coliseum",
            "Wicomico Youth and Civic Center",
            "Rugby Park",
            "Old Trafford",
            "Roy Wilkins Auditorium",
            "Viejas Arena",
            "Stade Francis-Le Blé",
            "Wells Fargo Center",
            "The Concert Hall in Aarhus",
            "Civic Arena",
            "Wolverhampton Civic Hall",
            "Şükrü Saracoğlu Stadium",
            "Neil Simon Theatre",
            "Charleston Civic Center",
            "Sullivan Athletic Center",
            "FIU Stadium",
            "Gaiety Theatre, Dublin",
            "Estádio Vila Capanema",
            "Lansdowne Road",
            "Stuart C. Siegel Center",
            "The Dome Leisure Centre",
            "California Memorial Stadium",
            "Barclays Center",
            "Esprit Arena",
            "Stadium of Light",
            "Carrier Dome",
            "Tropicana Field",
            "Eriksdalshallen",
            "Memorial Stadium",
            "Arizona Stadium",
            "EnergySolutions Arena",
            "Williams-Brice Stadium",
            "Osceola County Stadium",
            "Neyland Stadium",
            "Creighton Orpheum Theater",
            "Queen Elizabeth Theatre",
            "Motorpoint Arena Sheffield",
            "Uptown Theatre",
            "Ralph Engelstad Arena",
            "Yankee Stadium",
            "Auckland Civic Theatre",
            "Verizon Wireless Amphitheatre",
            "Metalist Oblast Sports Complex",
            "HMV Forum",
            "Fox Theater Pomona",
            "Dahlberg Arena",
            "The Muny",
            "Pavilion Theatre",
            "Gatorade Garden City Complex",
            "MetLife Stadium",
            "Sleuyter Arena",
            "Theodoros Kolokotronis Stadium",
            "Opéra Bastille",
            "ENMAX Centre",
            "Stadio San Paolo",
            "Carnie Smith Stadium",
            "Peter Mokaba Stadium",
            "Stade de la Mosson",
            "U.S. Cellular Coliseum",
            "Centennial Stadium",
            "Paramount Theatre",
            "The Pavilion",
            "Gaylord Family Oklahoma Memorial Stadium",
            "Selhurst Park",
            "Bethel Woods Center for the Arts",
            "San Diego Civic Theatre",
            "Frederiksberghallen",
            "Bristol Hippodrome",
            "Mid-America Center",
            "Air Canada Centre",
            "Red Star Stadium",
            "De Doelen",
            "Arena do Grêmio",
            "Minneapolis Convention Center",
            "Ponds Forge International Sports Centre",
            "Richmond Coliseum",
            "U.S. Cellular Center",
            "Carnesecca Arena",
            "Easter Road",
            "Gershwin Theatre",
            "BB&T Field",
            "Lyric Opera House",
            "Medicine Hat Arena",
            "Autzen Stadium",
            "W. L. Zorn Arena",
            "Curry Hicks Cage",
            "Murrayfield Ice Rink",
            "Charline McCombs Empire Theatre",
            "Estadio Nuevo Los Cármenes",
            "Family Arena",
            "Baum Stadium",
            "Gersten Pavilion",
            "World Arena, Colorado Springs",
            "Sports Authority Field at Mile High",
            "Stade Sébastien Charléty",
            "AT&T Park",
            "Floyd Casey Stadium",
            "Qemal Stafa Stadium",
            "Save-On-Foods Memorial Centre",
            "Scandinavium",
            "Melbourne Cricket Ground",
            "McKale Center",
            "Tacoma Dome",
            "Braly Municipal Stadium",
            "Capitol Theatre, Sydney",
            "Carter Barron Amphitheatre",
            "Benedum Center",
            "Plymouth Pavilions",
            "MGM Grand Garden Arena",
            "Rimrock Auto Arena at MetraPark",
            "Lynah Rink",
            "Craven Cottage",
            "Alex Box Stadium/Skip Bertman Field",
            "Wembley Stadium",
            "Stan Sheriff Center",
            "National Auditorium",
            "The Joint",
            "Proctors",
            "Kelly/Shorts Stadium",
            "Centennial Concert Hall, Winnipeg",
            "Madejski Stadium",
            "Shoreline Amphitheatre",
            "MassMutual Center",
            "Winter Garden Theatre",
            "Brandt Centre",
            "Kohl Center",
            "Estadio Alberto J. Armando",
            "Estádio José Alvalade",
            "Granada Theater",
            "Subiaco Oval",
            "Estadi Olímpic Lluís Companys",
            "Columbus Crew Stadium",
            "Estadio de La Cartuja",
            "Eisarena Salzburg",
            "Al-Aqsa Mosque",
            "Whittemore Center",
            "Bankers Life Fieldhouse",
            "HR Commitment Arena",
            "Davis Wade Stadium",
            "Emens Auditorium, Ball State University",
            "Calihan Hall",
            "Uptown Theater",
            "Krannert Center for the Performing Arts",
            "Winthrop Coliseum",
            "Cole Field House",
            "Underhill Stadium",
            "Cox Convention Center",
            "PNC Bank Arts Center",
            "Detroit Opera House",
            "BC Place",
            "Lucas Oil Stadium",
            "Chavez Theatre",
            "Central Park, Cowdenbeath",
            "Ewood Park",
            "Reliant Stadium",
            "Rangers Ballpark in Arlington",
            "Cintas Center",
            "Ajinomoto Stadium",
            "Silverdome",
            "McDiarmid Park",
            "Haas Pavilion",
            "Covelli Centre",
            "Wiener Musikverein",
            "Mayo Civic Center",
            "Cobb Energy Performing Arts Centre",
            "Kezar Stadium",
            "Reitz Arena",
            "Viaero Event Center",
            "Apollo Theater",
            "The Orbit Room",
            "James A. Rhodes Arena",
            "BancorpSouth Arena",
            "Sawyer Center",
            "Charles E. Smith Athletic Center",
            "Kölner Philharmonie",
            "Ed Mirvish Theatre",
            "Agora Theatre and Ballroom",
            "Capitol Theatre",
            "Veterans Stadium",
            "Lake Elsinore Diamond",
            "ShoWare Center",
            "John Paul Jones Arena",
            "Ryan Field",
            "Perth Arena",
            "Ferguson Center for the Arts",
            "Sudbury Community Arena",
            "Wolstein Center",
            "Conexus Arts Centre",
            "Sears Centre Arena",
            "Salle Wilfrid-Pelletier, Montreal",
            "Stadion Oberwerth",
            "Víctor Jara Stadium",
            "PalaLottomatica",
            "Gigg Lane",
            "Stadio Ennio Tardini",
            "Duluth Entertainment Convention Center",
            "Falkirk Stadium",
            "Congress Theatre",
            "KFC Yum! Center",
            "Stamford Bridge",
            "Majestic Theater",
            "Kemper Arena",
            "Estadi Ciutat de València",
            "Blue Cross Arena",
            "The Time Warner Cable Arena",
            "Moses Mabhida Stadium",
            "Vicente Calderón Stadium",
            "Hagan Arena",
            "Grand Theatre, Leeds",
            "Minute Maid Park",
            "Hofburg Palace",
            "Futurist Theatre",
            "Savannah Civic Center",
            "Chase Field",
            "Sleeman Centre",
            "Riverside Stadium",
            "CFSB Center",
            "Hult Center for the Performing Arts",
            "Target Center",
            "Aloha Stadium",
            "Community Arts Center",
            "Paul E. Tsongas Center at UMass Lowell",
            "Spartan Stadium",
            "Point Theatre",
            "Kinnick Stadium",
            "Canad Inns Stadium",
            "Welsh-Ryan Arena",
            "City of Manchester Stadium",
            "Jay Pritzker Pavilion",
            "Congress Theater",
            "Palace Theatre",
            "Britannia Stadium",
            "Miami Beach Convention Center",
            "Vancouver Forum",
            "Palau Sant Jordi",
            "Tokyo Dome",
            "Crystal Palace National Sports Centre",
            "Meadow Park",
            "Palais des Sports",
            "Palace Theatre, Melbourne",
            "Tulane Stadium",
            "Donald W. Reynolds Razorback Stadium",
            "Allianz Arena",
            "Jenny Craig Pavilion",
            "Emirates Stadium",
            "Husky Stadium",
            "Brooklyn Academy of Music",
            "Majestic Theatre",
            "Consol Energy Center",
            "Ralph Wilson Stadium",
            "UFCU Disch–Falk Field",
            "Beijing National Stadium",
            "Philips Stadion",
            "Toyota Stadium",
            "Nippon Budokan",
            "Colston Hall",
            "Hampton Coliseum",
            "Alamodome",
            "Juventus Stadium",
            "Louise M. Davies Symphony Hall",
            "GelreDome",
            "Wembley Arena",
            "Football Park",
            "Pioneer Center for the Performing Arts",
            "Bobby Dodd Stadium",
            "Doug Mitchell Thunderbird Sports Centre",
            "BB&T Center",
            "Yakima SunDome",
            "Maples Pavilion",
            "Owensboro Sports Center",
            "Rose Bowl",
            "Ordway Center for the Performing Arts",
            "Ryan Center",
            "Manchester Arena",
            "U.S. Cellular Arena",
            "Edinburgh Festival Theatre",
            "Green Point Stadium",
            "Town Toyota Center",
            "Nuremberg Arena",
            "TipsArena",
            "Mohegan Sun Arena",
            "Brighton Centre",
            "E. A. Diddle Arena",
            "Gallagher-Iba Arena",
            "Taft Theatre",
            "Comanche County Fairgrounds",
            "Kingsmeadow",
            "Rupp Arena",
            "Beijing National Aquatics Center",
            "Giants Stadium",
            "Dorton Arena",
            "Xcel Energy Center",
            "Hi Corbett Field",
            "Grand Olympic Auditorium",
            "1stBank Center",
            "Ford Field",
            "McCoy Stadium",
            "Estádio do Pacaembu",
            "Metropolitan Opera House",
            "Drayton McLane Baseball Stadium at John H. Kobs Field",
            "Nippert Stadium",
            "Palacio Vistalegre",
            "Stade Marcel Picot",
            "Råsunda Stadium",
            "Stadio Alberto Braglia",
            "Megasport Arena",
            "Benjamin and Marian Schuster Performing Arts Center",
            "Giant Center",
            "Principal Park",
            "Reed Arena",
            "Rentschler Field",
            "Lambeau Field",
            "Tatran Handball Arena",
            "Zellerbach Hall",
            "Papa John's Cardinal Stadium",
            "Warner Theatre",
            "Robert F. Kennedy Memorial Stadium",
            "Veterans Memorial Auditorium",
            "Spartak Stadium",
            "Mestalla Stadium",
            "Hammersmith Palais",
            "Andrew Jackson Hall",
            "Winnipeg Arena",
            "State Theatre",
            "Mohegan Sun Arena at Casey Plaza",
            "Magness Arena",
            "Value City Arena at the Jerome Schottenstein Center",
            "Camelback Ranch",
            "Jorgensen Center for the Performing Arts",
            "Fox Theater",
            "Nelson Mandela Bay Stadium",
            "Agganis Arena",
            "American Music Theatre",
            "Stadion An der Alten Försterei",
            "Webster Bank Arena",
            "Commonwealth Stadium",
            "Mile High Stadium",
            "Go Dau Stadium",
            "Hill 16",
            "Tampereen jäähalli",
            "Anhalt Arena",
            "Gibson Amphitheatre",
            "Darrell K Royal–Texas Memorial Stadium",
            "Alexandra Palace",
            "BankUnited Center",
            "Prince Edward Theatre",
            "Pabellón Polideportivo Artaleku",
            "McKenzie Arena",
            "Asim Ferhatović Hase Stadium",
            "Princess Theatre, Melbourne",
            "Barabati Stadium",
            "FC Dallas Stadium",
            "Reser Stadium",
            "Orpheum Theatre",
            "Lipperlandhalle",
            "Clyde Auditorium",
            "Jacksonville Veterans Memorial Arena",
            "Ulster Performing Arts Center",
            "Heartland Events Center",
            "Carlson Center",
            "Goggin Ice Arena",
            "Hilton Coliseum",
            "Stranahan Theater",
            "Columbiahalle",
            "Mercedes-Benz Superdome",
            "TD Waterhouse Stadium",
            "Cadillac Palace Theatre",
            "Dolby Theatre",
            "Harris Theater",
            "Bryant–Denny Stadium",
            "Apollo Theater",
            "Campo de Fútbol de Vallecas",
            "Coleman Coliseum",
            "Sydney Entertainment Centre",
            "Roberts Municipal Stadium",
            "Romney Stadium",
            "New Amsterdam Theatre",
            "Bloomfield Road",
            "Estadio Olímpico Andrés Quintana Roo",
            "Patriot Center",
            "Alfond Arena",
            "Nokia Theatre L.A. Live",
            "Tynecastle Stadium",
            "BMO Harris Bradley Center",
            "The Florida Citrus Bowl Stadium",
            "BOK Center",
            "Suncorp Stadium",
            "Love Street",
            "E Werk",
            "Pauley Pavilion",
            "Twickenham Stadium",
            "Ivor Wynne Stadium",
            "New World Stages",
            "BayArena",
            "Foxboro Stadium",
            "Western Springs Stadium",
            "Auditorio Telmex",
            "Allen Event Center",
            "University at Buffalo Stadium",
            "The Centre In Vancouver for Performing Arts",
            "M&T Bank Stadium",
            "New Orleans Arena",
            "Hyde Park Picture House, Leeds",
            "Phoenix Symphony Hall",
            "First Niagara Center",
            "MacInnes Student Ice Arena",
            "Abe Lenstra Stadion",
            "Knoxville Civic Auditorium and Coliseum",
            "State Theatre",
            "Stadium Australia",
            "Yost Ice Arena",
            "Estádio do Bessa",
            "Orpheum Theatre",
            "Cameron Stadium",
            "Foxwoods Theatre",
            "O2 Arena",
            "Goodman Stadium",
            "Folsom Field",
            "The Broadway Theatre",
            "Melbourne Multi Purpose Venue",
            "Saban Theatre",
            "Liberty Bowl Memorial Stadium",
            "Crisler Center",
            "Gachibowli Athletic Stadium",
            "Marina Bay Sands",
            "Wells Fargo Arena",
            "Count Basie Theatre",
            "Rialto Theatre",
            "Cannon Center-Performing Arts",
            "Rajamangala Stadium",
            "Sun Bowl Stadium",
            "BMO Harris Bank Center",
            "State Theatre",
            "KSU Convocation Center",
            "Martin Stadium",
            "Chicago Theatre",
            "Olsen Field at Blue Bell Park",
            "Yankee Stadium",
            "Auditorium-Orchestre National de Lyon",
            "EWE Arena",
            "The Palace of Auburn Hills",
            "Alamo Stadium",
            "Ussishkin",
            "Crystal Cathedral",
            "Sleep Train Arena",
            "Verizon Theatre at Grand Prairie",
            "Philips Arena",
            "Manchester Central Convention Complex",
            "USF Sun Dome",
            "Gerry Weber Stadion",
            "Shea's Performing Arts Center",
            "Velodrom",
            "EverBank Field",
            "Arena Nova",
            "Credit Union Centre",
            "Abbotsford Entertainment & Sports Centre",
            "Reno Events Center",
            "Robertson Stadium",
            "Florence Civic Center",
            "Oriole Park at Camden Yards",
            "Teatro Real, Madrid",
            "Old Trafford Cricket Ground",
            "John F. Kennedy Stadium",
            "Washington Avenue Armory",
            "Cedar Park Center",
            "Stechert Arena",
            "Great American Ball Park",
            "Kingfield Stadium",
            "O'Connell Center",
            "KC Stadium",
            "Belmore Sports Ground",
            "Daytona International Speedway",
            "The Valley",
            "Ricoh Arena",
            "Legion Field",
            "Cynthia Woods Mitchell Pavilion",
            "State Theatre",
            "Citi Performing Arts Center",
            "Adriatic Arena",
            "City National Grove of Anaheim",
            "Wortham Theater Center",
            "Sun National Bank Center",
            "The Elgin Theatre",
            "Ross–Ade Stadium",
            "Soccer City",
            "Ben Hill Griffin Stadium",
            "Robins Center",
            "Alabama Theatre",
            "Jalan Besar Stadium",
            "War Memorial Auditorium",
            "Walt Disney Concert Hall",
            "Candlestick Park",
            "Oslo Spektrum",
            "Maple Leaf Gardens",
            "Adelaide Oval",
            "Bridgeforth Stadium and Zane Showker Field",
            "Festival Hall",
            "U.S. Bank Arena",
            "Roundhouse",
            "Turner Field",
            "Coliseum Alfonso Pérez",
            "Pharr International Convention Center",
            "Stade Geoffroy-Guichard",
            "Flens-Arena",
            "Stade du Moustoir",
            "Hollywood Bowl",
            "Challenge Stadium",
            "AFAS Stadion",
            "United Spirit Arena",
            "Manchester Opera House",
            "Compuware Arena",
            "Fatorda Stadium",
            "Municipal Auditorium",
            "KeyArena",
            "Bob Devaney Sports Center",
            "Ohio Stadium",
            "San Jose Center For The Performing Arts",
            "Coface Arena",
            "Canton Memorial Civic Center",
            "Victoria Hall, Hanley",
            "Palestra",
            "San Francisco Airport Marriott Waterfront",
            "Jazz at Lincoln Center",
            "Ricoh Coliseum",
            "New York Hippodrome",
            "Coronado Performing Arts Center",
            "Scheels Arena",
            "McArthur Court",
            "Soldier Field",
            "Metro Radio Arena",
            "Headingley Stadium",
            "Three Rivers Stadium",
            "FAU Stadium",
            "Citizens Business Bank Arena",
            "Palladium Ballroom",
            "Matthew Knight Arena",
            "Breslin Student Events Center",
            "Durham Bulls Athletic Park",
            "Estadio Ciudad de Santiago del Estero",
            "K-Rock Centre",
            "Qualcomm Stadium",
            "Sanford Center",
            "Save Mart Center",
            "Arena di Verona",
            "Riverside Theater",
            "Morton H. Meyerson Symphony Center, Dallas",
            "Madison Square Garden",
            "Arlington Stadium",
            "Royal Opera House, London",
            "Concertgebouw, Amsterdam",
            "National Stadium, Bukit Jalil",
            "Salem Civic Center",
            "Edmund P. Joyce Center",
            "Los Angeles Memorial Coliseum",
            "Vancouver Convention Centre",
            "Memorial Stadium, Lincoln",
            "Montgomery Performing Arts Centre",
            "Oslo Opera House",
            "Thompson–Boling Arena",
            "Estadio Julio Humberto Grondona",
            "Stade Auguste Bonal",
            "Saitama Super Arena",
            "Aggie Stadium",
            "Veterans Memorial Coliseum",
            "Progressive Field",
            "Charles C. Hughes Stadium",
            "Coors Field",
            "Boleyn Ground",
            "National Auditorium of Music",
            "Citizens Bank Park",
            "Calvin Gilmore Theater",
            "Michie Stadium",
            "The Louisville Palace",
            "Edinburgh Playhouse",
            "Pellissier Building and Wiltern Theatre",
            "Indiana University Auditorium",
            "Bass Performance Hall",
            "Morrison Center",
            "Fenway Park",
            "The Fillmore Detroit",
            "Estadio Ciudad de La Plata",
            "Motorpoint Arena Cardiff",
            "Orpheum Theatre",
            "Zénith d'Orléans",
            "Golden Gate Theatre",
            "Yokohama Arena",
            "DakotaDome",
            "William D. Mullins Memorial Center",
            "Boardwalk Hall",
            "Paul Brown Stadium",
            "Estádio da Luz",
            "New Theatre Oxford",
            "Lanxess Arena",
            "Buck Shaw Stadium",
            "Royal Theatre Carré",
            "Sun Life Stadium",
            "Estadio De Béisbol Héctor Espino",
            "Veltins-Arena",
            "Johnny Unitas Stadium",
            "Littlejohn Coliseum",
            "Tate Rink",
            "Bridgewater Hall, Manchester",
            "Pauley Pavilion",
            "Stade de Gerland",
            "Twickenham Stoop",
            "Vines Center",
            "Stroh Center",
            "Brisbane Entertainment Centre",
            "Sandia Resort and Casino",
            "LP Field",
            "Peterborough Memorial Centre",
            "Apollo Victoria Theatre",
            "Moncton Coliseum",
            "First Arena",
            "New Jersey Performing Arts Center",
            "Bramlage Coliseum",
            "Carter–Finley Stadium",
            "Washington–Grizzly Stadium",
            "Town Hall",
            "Ice Palace \"Ural Lightning\"",
            "Bramall Lane",
            "Carrara Stadium",
            "Fifth Third Arena",
            "Sacramento Convention Center Complex",
            "Estadio Racing Club",
            "Budweiser Events Center",
            "Thunder Bay Community Auditorium",
            "Broome County Veterans Memorial Arena",
            "New Road, Worcester",
            "London Coliseum",
            "Elland Road",
            "Forrest Theatre",
            "Verizon Arena",
            "Faurot Field",
            "Marin County Civic Center",
            "Memorial Stadium",
            "Coors Events Center",
            "FedExField",
            "Mississippi Coliseum",
            "Her Majesty's Theatre, Melbourne",
            "Bank of America Stadium",
            "Estadio José Jorge Conte",
            "Munn Ice Arena",
            "Sprint Center",
            "The Home Depot Center",
            "Palais Garnier",
            "Kay Bailey Hutchison Convention Center",
            "Packard Stadium",
            "Ikast-Brande Arena",
            "Huish Park",
            "North Harbour Stadium",
            "Old National Centre",
            "Oakland-Alameda County Coliseum",
            "Stadio Renato Dall'Ara",
            "Molineux Stadium",
            "American Airlines Center",
            "Chesapeake Energy Arena",
            "Lord's Cricket Ground",
            "Eintracht-Stadion",
            "Allianz Stadium",
            "Kungliga tennishallen",
            "Androscoggin Bank Colisée",
            "Westfalenstadion",
            "The Gabba",
            "Jiffy Lube Live",
            "Ladd Peebles Stadium",
            "TSB Bank Arena",
            "Beaver Stadium",
            "Estadio Fortunato Bonelli",
            "Mile One Centre",
            "Kitchener Memorial Auditorium Complex",
            "Tulalip Resort Casino",
            "Teatro alla Scala",
            "Palais des congrès de Paris",
            "Edgbaston Cricket Ground",
            "The Coronet",
            "Celtic Park",
            "Riverfront Stadium",
            "Royal Melbourne Showgrounds",
            "Hillsborough Stadium",
            "Freedom Hall",
            "National Arts Centre, Ottawa",
            "Grugahalle",
            "Thomas Wolfe Auditorium",
            "Eastern Kentucky Expo Center",
            "Tokyo Dome City",
            "Luis Conde Arena",
            "O2 World",
            "Whistler Sliding Centre",
            "Le Grand Rex",
            "Event Center Arena",
            "Expo Square Pavilion",
            "Cambria County War Memorial Arena",
            "Estádio do Maracanã",
            "Mahalia Jackson Theater of the Performing Arts",
            "New Wimbledon Theatre",
            "Enmore Theatre",
            "Ashton Gate Stadium",
            "Norfolk Scope Arena",
            "PNC Park",
            "Eastman Theatre",
            "Ahmanson Theatre",
            "Preußenstadion",
            "FedExForum"
        ],
        "function": ">",
        "commonness": -13.143543406313972,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "architecture.venue",
                    "class": "architecture.venue",
                    "friendly_name": "Venue",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1417^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "1417",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.venue.capacity",
                    "friendly_name": "Seating capacity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :architecture.venue . \nFILTER (?x1 > 1417)\n?x0 :architecture.venue.capacity ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 241000002,
        "question": "an amusement ride with the same theme as haunted manison was designed by who?",
        "answer": [
            "Walt Disney Imagineering"
        ],
        "function": "none",
        "commonness": -35.55893972064999,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "amusement_parks.ride_theme",
                    "class": "amusement_parks.ride_theme",
                    "friendly_name": "Amusement Ride Theme",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "en.haunted_mansion",
                    "class": "amusement_parks.ride",
                    "friendly_name": "haunted manison",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "amusement_parks.ride.designer",
                    "friendly_name": "Designer"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "amusement_parks.ride.theme",
                    "friendly_name": "Theme"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.ride.theme",
                    "friendly_name": "Theme"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride_designer . \n?x1 :type.object.type :amusement_parks.ride . \n?x2 :type.object.type :amusement_parks.ride_theme . \nVALUES ?x3 { :en.haunted_mansion } \n?x1 :amusement_parks.ride.designer ?x0 . \n?x3 :amusement_parks.ride.theme ?x2 . \n?x1 :amusement_parks.ride.theme ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}"
    },
    {
        "qid": 137000200,
        "question": "william shakespeare has written how many lyrics?",
        "answer": [
            "53"
        ],
        "function": "count",
        "commonness": -11.676454221015156,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.composition",
                    "class": "music.composition",
                    "friendly_name": "Composition",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.william_shakespeare",
                    "class": "music.lyricist",
                    "friendly_name": "William Shakespeare",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.lyricist.lyrics_written",
                    "friendly_name": "Lyrics Written"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.composition . \nVALUES ?x1 { :en.william_shakespeare } \n?x1 :music.lyricist.lyrics_written ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 61000001,
        "question": "which organizations and individuals have contributed data to princeton wordnet?",
        "answer": [
            "Randee Tengi",
            "Pamela Wakefield",
            "Benjamin R. Haskell",
            "Christiane Fellbaum",
            "Helen Langone",
            "George A. Miller"
        ],
        "function": "none",
        "commonness": -16.318339719259637,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.database.data_contributor",
                    "class": "base.database.data_contributor",
                    "friendly_name": "Data contributor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.wordnet",
                    "class": "base.database.database",
                    "friendly_name": "princeton wordnet",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.database.database.data_contributor_s",
                    "friendly_name": "Data contributor(s)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.database.data_contributor . \nVALUES ?x1 { :en.wordnet } \n?x1 :base.database.database.data_contributor_s ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 83000402,
        "question": "what famous people does comic will farrell do impressions of?",
        "answer": [
            "Jesse Ventura",
            "George Bush",
            "Harry Caray",
            "Janet Reno",
            "James Lipton",
            "Neil Diamond",
            "Ted Kennedy",
            "Alex Trebek",
            "Ted Kaczynski",
            "Robert Goulet"
        ],
        "function": "none",
        "commonness": -13.473996990538954,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.americancomedy.impersonated_celebrity",
                    "class": "base.americancomedy.impersonated_celebrity",
                    "friendly_name": "Impersonated celebrity",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.will_ferrell",
                    "class": "base.americancomedy.celebrity_impressionist",
                    "friendly_name": "will farrell",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.americancomedy.impersonated_celebrity.impersonated_by",
                    "friendly_name": "Impersonated by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.americancomedy.impersonated_celebrity . \nVALUES ?x1 { :en.will_ferrell } \n?x0 :base.americancomedy.impersonated_celebrity.impersonated_by ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 8000500,
        "question": "how is denim woven to form fabric?",
        "answer": [
            "Twill"
        ],
        "function": "none",
        "commonness": -18.69909202577648,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fashion.weave",
                    "class": "fashion.weave",
                    "friendly_name": "Weave",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.denim",
                    "class": "fashion.textile",
                    "friendly_name": "Denim",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "fashion.weave.textiles_of_this_weave",
                    "friendly_name": "Textiles of this weave"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fashion.weave . \nVALUES ?x1 { :en.denim } \n?x0 :fashion.weave.textiles_of_this_weave ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 65000000,
        "question": "what mathematical concept has circle as a specialization?",
        "answer": [
            "n-sphere"
        ],
        "function": "none",
        "commonness": -15.649894192373681,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.mathematics1.mathematical_concept",
                    "class": "base.mathematics1.mathematical_concept",
                    "friendly_name": "Mathematical concept",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.circle",
                    "class": "base.mathematics1.mathematical_concept",
                    "friendly_name": "Circle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.mathematics1.mathematical_concept.specializations",
                    "friendly_name": "Specializations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.mathematics1.mathematical_concept . \nVALUES ?x1 { :en.circle } \n?x0 :base.mathematics1.mathematical_concept.specializations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 3000000,
        "question": "mewtwo is what kind of pokemon?",
        "answer": [
            "Psychic Pokémon"
        ],
        "function": "none",
        "commonness": -21.248555286146384,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.pokemon.pok_mon_type",
                    "class": "base.pokemon.pok_mon_type",
                    "friendly_name": "Pokémon type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.mewtwo",
                    "class": "base.pokemon.pok_mon",
                    "friendly_name": "Mewtwo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.pokemon.pok_mon.pok_mon_type",
                    "friendly_name": "Pokémon type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.pokemon.pok_mon_type . \nVALUES ?x1 { :en.mewtwo } \n?x1 :base.pokemon.pok_mon.pok_mon_type ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 96000200,
        "question": "which venue has the largest capacity?",
        "answer": [
            "Daytona International Speedway"
        ],
        "function": "argmax",
        "commonness": -13.143543406313972,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "architecture.venue",
                    "class": "architecture.venue",
                    "friendly_name": "Venue",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1417^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.int",
                    "friendly_name": "1417",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.venue.capacity",
                    "friendly_name": "Seating capacity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :architecture.venue . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :architecture.venue . \n?y0 :architecture.venue.capacity ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :architecture.venue.capacity ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 191000601,
        "question": "what rockets that support low earth orbit are made by chrysler?",
        "answer": [
            "Saturn IB",
            "Saturn I"
        ],
        "function": "none",
        "commonness": -25.76461195221662,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket",
                    "class": "spaceflight.rocket",
                    "friendly_name": "Rocket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.low_earth_orbit",
                    "class": "spaceflight.rocket_function",
                    "friendly_name": "Low Earth orbit",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.chrysler",
                    "class": "spaceflight.rocket_manufacturer",
                    "friendly_name": "chrysler",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.rocket_function.rockets_supporting_this_function",
                    "friendly_name": "Rockets supporting this function"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_manufacturer.rockets_manufactured",
                    "friendly_name": "Rockets Manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket . \nVALUES ?x1 { :en.low_earth_orbit } \nVALUES ?x2 { :en.chrysler } \n?x1 :spaceflight.rocket_function.rockets_supporting_this_function ?x0 . \n?x2 :spaceflight.rocket_manufacturer.rockets_manufactured ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 235000200,
        "question": "which group did lady gaga belong to?",
        "answer": [
            "SGBand"
        ],
        "function": "none",
        "commonness": -15.713858033023467,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.musical_group",
                    "class": "music.musical_group",
                    "friendly_name": "Musical Group",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "music.group_membership",
                    "class": "music.group_membership",
                    "friendly_name": "Musical Group Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.lady_gaga",
                    "class": "music.group_member",
                    "friendly_name": "Lady Gaga",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "music.musical_group.member",
                    "friendly_name": "Members Of Musical Group"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "music.group_member.membership",
                    "friendly_name": "Member of"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.musical_group . \n?x1 :type.object.type :music.group_membership . \nVALUES ?x2 { :en.lady_gaga } \n?x0 :music.musical_group.member ?x1 . \n?x2 :music.group_member.membership ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 13000200,
        "question": "what is the name of the jewish synagogue representing the gothic architecture style?",
        "answer": [
            "Eldridge Street Synagogue"
        ],
        "function": "none",
        "commonness": -14.383022737137626,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.jewishcommunities.synagogue",
                    "class": "base.jewishcommunities.synagogue",
                    "friendly_name": "Synagogue",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.gothic_architecture",
                    "class": "architecture.architectural_style",
                    "friendly_name": "Gothic architecture",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "architecture.structure.architectural_style",
                    "friendly_name": "Architectural Style"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.jewishcommunities.synagogue . \nVALUES ?x1 { :en.gothic_architecture } \n?x0 :architecture.structure.architectural_style ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 229000101,
        "question": "which comic book publisher published alan oswald moore's comic books?",
        "answer": [
            "Vertigo",
            "Top Shelf Productions",
            "Avatar Press",
            "DC Comics",
            "Dark Horse Comics",
            "WildStorm"
        ],
        "function": "none",
        "commonness": -22.0274509335855,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_publisher",
                    "class": "comic_books.comic_book_publisher",
                    "friendly_name": "Comic Book Publisher",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "comic_books.comic_book_series",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "Comic Book Series",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.alan_moore",
                    "class": "comic_books.comic_book_creator",
                    "friendly_name": "alan oswald moore",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "comic_books.comic_book_publisher.comic_book_series_published",
                    "friendly_name": "Comic Book Series Published"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "comic_books.comic_book_creator.series_created",
                    "friendly_name": "Series Created"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_publisher . \n?x1 :type.object.type :comic_books.comic_book_series . \nVALUES ?x2 { :en.alan_moore } \n?x0 :comic_books.comic_book_publisher.comic_book_series_published ?x1 . \n?x2 :comic_books.comic_book_creator.series_created ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    },
    {
        "qid": 86000301,
        "question": "what spacecrafts did the jpl produce?",
        "answer": [
            "Galileo"
        ],
        "function": "none",
        "commonness": -15.034740807992804,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.schemastaging.spacecraft_extra",
                    "class": "base.schemastaging.spacecraft_extra",
                    "friendly_name": "Spacecraft extra",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.jet_propulsion_laboratory",
                    "class": "spaceflight.satellite_manufacturer",
                    "friendly_name": "jpl",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.satellite_manufacturer.spacecraft_manufactured",
                    "friendly_name": "Spacecraft manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.schemastaging.spacecraft_extra . \nVALUES ?x1 { :en.jet_propulsion_laboratory } \n?x1 :spaceflight.satellite_manufacturer.spacecraft_manufactured ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}"
    },
    {
        "qid": 223000601,
        "question": "what one of the comics by frank miller is about bruce wayne?",
        "answer": [
            "Batman: The Dark Knight Returns"
        ],
        "function": "none",
        "commonness": -21.89634449799579,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_series",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "Comic Book Series",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "en.frank_miller",
                    "class": "comic_books.comic_book_creator",
                    "friendly_name": "Frank Miller",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "en.batman",
                    "class": "comic_books.comic_book_character",
                    "friendly_name": "bruce wayne",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "comic_books.comic_book_creator.series_created",
                    "friendly_name": "Series Created"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "comic_books.comic_book_series.featured_characters",
                    "friendly_name": "Featured Characters"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_series . \nVALUES ?x1 { :en.frank_miller } \nVALUES ?x2 { :en.batman } \n?x1 :comic_books.comic_book_creator.series_created ?x0 . \n?x0 :comic_books.comic_book_series.featured_characters ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}"
    }
]